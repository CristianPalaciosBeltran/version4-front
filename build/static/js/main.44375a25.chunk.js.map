{"version":3,"sources":["img/product.jpg","img/cristian.jpg","img/Jesus.jpg","img/version-4-logo.svg","img/organigrama.jpeg","img/puestos.jpeg","img/descripciones.jpeg","img/procesos.jpeg","img/index.js","config-components/Logos.js","components-api/ConfigApi.js","config-components/Navbars.js","config-components/Cards.js","config-components/DropDowns.js","components-api/ApiResponses.js","config-components/Filter.js","components-api/index.js","config-components/Inputs.js","config-components/Modals.js","config-components/NotFound.js","config-components/RegularExpressions.js","img/tab-1.png","img/tab-2.png","config-components/Tabs.js","config-components/Lists.js","components-position/reducer/positionTypes.js","components-position/reducer/positionActions.js","components-position/Positions.js","components-position/Responsibilities.js","components-position/index.js","components-position/ListOfPositions.js","components-position/ReadPosition.js","config-components/Collapse.js","config-components/ExternalLinks.js","config-components/index.js","img/hero-xs.png","img/vscode.svg","pages/landing/SoftwareAgency.js","components-product/ReadCardProduct.js","components-product/reducer/productTypes.js","components-product/reducer/productActions.js","components-product/CardProduct.js","components-product/ListOfCardProducts.js","components-product/ListOfProducts.js","components-category/reducer/categoryTypes.js","components-category/reducer/categoryActions.js","components-product/index.js","pages/landing/Products.js","pages/landing/index.js","pages/NotFoundPage.js","components-session/reducer-login/loginTypes.js","components-session/reducer-login/loginActions.js","components-company/reducer/companyTypes.js","components-company/reducer/companyActions.js","components-session/Login.js","components-session/sign-up-reducer/signUpTypes.js","components-session/sign-up-reducer/signUpActions.js","components-session/SignUp.js","components-session/change-password/reducer/changePasswordTypes.js","components-session/change-password/reducer/changePasswordActions.js","components-session/change-password/ChangePassword.js","components-session/change-password/ChangePasswordForUser.js","components-session/change-password/SendEmail.js","components-session/index.js","pages/session/index.js","components-analytics/reducer/analyticsTypes.js","components-analytics/reducer/analyticsActions.js","components-admin/Indicators.js","components-admin/reducer/adminTypes.js","components-admin/reducer/adminActions.js","components-admin/ListOfUsers.js","components-admin/UpdateUserInfo.js","components-admin/ValidateAccount.js","components-admin/index.js","pages/admin/Users.js","components-section/reducer/sectionTypes.js","components-section/reducer/sectionActions.js","components-section/Section.js","components-section/ModalSections.js","components-category-product/reducer/categoryProductTypes.js","components-category-product/reducer/categoryProductActions.js","components-blob/blob-reducer/blobType.js","components-blob/blob-reducer/blobActions.js","components-blob/blobUtils.js","components-product/Product.js","components-product/ModalProducts.js","components-section/ListOfSections.js","components-section/index.js","components-section/CrudCourse.js","pages/admin/Dashboard.js","pages/admin/Sections.js","components-course/Course.js","components-course/ListOfCourses.js","components-player/Player.js","components-player/index.js","config-components/TabCourse.js","components-course/WatchClass.js","components-course/index.js","pages/admin/Courses.js","components-category-product/CategoryProduct.js","components-category-product/ListOfCategoriesOfProducts.js","components-category/Category.js","components-category/ModalCategory.js","components-product-details/reducer/productDetailsTypes.js","components-product-details/reducer/productDetailActions.js","components-product-details/ProductDetails.js","components-product-details/index.js","pages/admin/Products.js","components-company/Company.js","components-company/CompanyIndicators.js","components-company/index.js","components-company/ListOfCompanies.js","pages/templates/Company.js","components-job-detail/reducer/jobDetailTypes.js","components-job-detail/reducer/jobDetailActions.js","components-job-detail/JobDetails.js","components-job-detail/index.js","pages/templates/JobDetails.js","pages/templates/Position.js","components-personal-detail/reducer/personalDetailTypes.js","components-personal-detail/reducer/personalDetailActions.js","components-personal-detail/ListOfPersonDetails.js","components-personal-detail/PersonDetail.js","components-personal-detail/index.js","pages/templates/PersonalDetail.js","components-area/reducer/areaTypes.js","components-area/reducer/areaActions.js","components-area/ListOfAreas.js","components-area/Area.js","components-area/index.js","pages/templates/Area.js","pages/templates/index.js","pages/admin/Company.js","pages/admin/Position.js","components-organization-chart/reducer/organizationChartTypes.js","components-organization-chart/reducer/organizationChartActions.js","components-organization-chart/OrganizationChart.js","components-organization-chart/UpdateChild.js","components-organization-chart/ViewOrganizationChart.js","components-organization-chart/index.js","pages/admin/OrganizationChart.js","pages/admin/PersonalDetail.js","pages/admin/Area.js","pages/admin/index.js","pages/user/OrganizationChart.js","pages/user/index.js","App.js","reportWebVitals.js","components-session/reducer-login/loginReducer.js","components-session/sign-up-reducer/signUpReducer.js","components-session/change-password/reducer/changePasswordReducer.js","components-company/reducer/companyReducer.js","components-position/reducer/positionReducer.js","components-organization-chart/reducer/organizationChartReducer.js","components-personal-detail/reducer/personalDetailReducer.js","components-area/reducer/areaReducer.js","components-job-detail/reducer/jobDetailReducer.js","components-category/reducer/categoryReducer.js","components-category-product/reducer/categoryProductReducer.js","components-product/reducer/productReducer.js","components-product-details/reducer/productDetailReducer.js","components-course/reducer/courseTypes.js","components-course/reducer/courseReducer.js","components-section/reducer/sectionReducer.js","components-admin/reducer/adminReducer.js","components-analytics/reducer/analyticsReducer.js","components-blob/blob-reducer/blobReducer.js","reducers/index.js","index.js"],"names":["Img","src","width","alt","className","ImgOrganigrama","Organigrama","ImgProcesos","Procesos","ImgPuestos","Puestos","ImgDescripciones","Descripciones","SvgLogo","Logo","ImgProduct","uri","ProductDefault","LogoNavbar","href","to","errorResponse","data","ModelState","Message","error_description","error","errorHandler","messageError","response","status","setLocalStorage","window","open","configHeader","token","localStorage","getItem","headers","Authorization","respuesta","undefined","removeItem","setItem","access_token","roles","userName","axios_api","a","header","apiMethod","body","config","pathApi","toLowerCase","axios","get","post","put","delete","signOff","e","preventDefault","setPathApi","route","Navbars","useState","isOpen","setIsOpen","Navbar","expand","Container","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","NavbarAdmin","light","NavbarBrand","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","User","companyId","useParams","color","CardAnalytics","title","number","icon","rTitle","rNumber","rIcon","Card","CardBody","DropDownActions","children","labelButton","dropdownOpen","setDropdownOpen","Dropdown","toggle","prevState","Loader","rColor","activate","Spinner","Error","message","UseSearchItems","list","propertiesTable","searchByItem","setSearchItem","query","setQuery","React","useMemo","filteredSome","filter","items","res","map","property","includes","TableFilter","titlesTable","bodyTable","loading","hrefCreate","actions","rHrefCreate","Form","FormGroup","Input","type","placeholder","value","onChange","target","Table","item","action","handleAction","ApiResponses","ComponentApiResponses","useInputState","inputValue","inputChange","setInputChange","setOnChange","InputText","forName","classLabel","textLabel","isMandatory","classMandatory","inputType","inputName","inputId","placeHolder","maxLength","minLength","RE","validateRE","options","optionPlaceHolder","forgotPassword","xs","sm","md","lg","xl","classCol","rFor","rClassLabel","rTextLabel","rIsMandatory","rClassMandatory","rInputType","rInputName","rInputId","rPlaceHolder","rInputValue","rMaxLength","rMinLength","rRE","handleRE","match","re","Col","Label","for","name","id","valid","invalid","option","Id","Name","LastName","FormFeedback","validMessage","invalidMessage","InputEmail","label","rName","rLabel","RegularExpressions","RE_EMAIL","InputPassword","RE_PASSWORD","InputFile","ValidateInputs","validations","onValidate","i","length","props","isInvalid","Form1","textButton","textButtonLoading","handleValidations","Button","SwitchSome","some","setSome","ModalForm","content","modalTitle","state","Modal","ModalHeader","ModalBody","ModalDelete","ModalFooter","ModalOpenDelete","clean","modal","setToogle","toggleCancel","NotFound","RE_PASSWORD_MATCHES","RE_EMPTY","Example","activeTab","setActiveTab","tab","tabs","classnames","active","TabContent","TabPane","tabId","Row","Tab1","Tab2","ShowListFromText","description","arrayDeCadenas","split","splice","POSITION_CARGANDO","POSITION_ERROR","POSITION_HANDLE_CHANGE","POSITION_CLEAN_STATE","POSITION_CRUD","POSITIONS_LIST","POSITION_HANDLE_VALIDATION","GetPositions","answer","GetPositionsByCompanyId","GetPosition","PutPosition","PostPosition","DeletePosition","positionHandleChange","dispatch","payload","positionHandleValidation","validation","positionCleanState","positionMethods","method","Position","componentDidMount","positionId","sendAction","positionReducer","DateCreated","Description","Description2","CompanyId","Objective","Knowledge","Salary","model","actionPosition","reDirect","history","setModal","push","this","api_actions","cargando","Component","mapDispatchToProps","positionActions","connect","ListOfResponsabilities","useSelector","Lists","ListOfDescriptions","ComponentPosition","ListOfPositions","create","useDispatch","useHistory","useEffect","list_positions","replace","ListFromPositions","ComponentsListFromPositions","ReadPosition","postionActions","Modals","role","CollapseSection","countVideos","videos","time","video","Node","area","employee","addChild","updateNode","deleteChild","rArea","style","textAlign","A","Inputs","ComponentInputs","ComponentModals","ComponentNavbars","ComponentLists","ComponentRegularExpressions","ComponentCollapse","AWhatsapp","phone","Landing","Heroxs","WebApps","class","ReadCardProduct","categories","category","Badge","PRODUCT_CARGANDO","PRODUCT_ERROR","PRODUCT_HANDLE_CHANGE","PRODUCT_CLEAN_STATE","PRODUCT_CRUD","PRODUCTS_LIST","PRODUCT_HANDLE_VALIDATION","GetProducts","GetProductsByCategoryId","GetProduct","PutProduct","includeBlobs","PostProduct","DeleteProduct","productHandleChange","productHandleValidation","productCleanState","productMethods","CardProduct","productId","productReducer","Blobs","fileCover","Categories","productActions","blobProduct","el","BlobTypeId","URL","createObjectURL","Uri","ListOfCardProducts","list_products","product","ListOfCategories","categoryProductId","openDeleteModal","idProduct","deleteProduct","cleanProduct","cancel","CATEGORY_CARGANDO","CATEGORY_ERROR","CATEGORY_HANDLE_CHANGE","CATEGORY_CLEAN_STATE","CATEGORY_CRUD","CATEGORIES_LIST","CATEGORY_HANDLE_VALIDATION","GetCategories","GetCategory","PutCategory","PostCategory","DeleteCategory","categoryHandleChange","categoryHandleValidation","categoryCleanState","categoryMethods","ComponentCardProduct","ComponentListOfCardProducts","ListOfProducts","ComponentListOfProducts","LandingProducts","SoftwareAgency","LandingSoftwareAgency","Products","NotFoundPage","LandingCourses","LOGIN_CARGANDO","LOGIN_ERROR","LOGIN_HANDLE_CHANGE","LOGIN_CLEAN_STATE","LOGIN_USER","LOGIN_HANDLE_VALIDATION","parserJson","obj","jsonSerialize","prop","slice","loginHandleChange","loginHandleValidation","loginCleanState","loginMethods","object","COMPANY_CARGANDO","COMPANY_ERROR","COMPANY_HANDLE_CHANGE","COMPANY_CLEAN_STATE","COMPANY_CRUD","COMPANIES_LIST","COMPANY_HANDLE_VALIDATION","GetCompanies","GetCompaniesByUser","GetCompany","PutCompany","PostCompany","DeleteCompany","companyHandleChange","companyHandleValidation","companyCleanState","companyMethods","LoginForm","ActionLogin","loginReducer","grant_type","username","password","ModelLogin","list_companies","companyReducer","handleRedirect","loginActions","companyActions","SIGN_UP_CARGANDO","SIGN_UP_ERROR","SIGN_UP_HANDLE_CHANGE","SIGN_UP_CLEAN_STATE","SIGN_UP_USER","SIGN_UP_HANDLE_VALIDATION","SIGN_UP_PRELOADED_DATA","signUpHandleChange","signUpHandleValidation","signUpCleanState","signUpPreloadedData","signUpMethods","SignUp","signUpReducer","UserName","Email","PhoneNumber","Password","ConfirmPassword","ValidateByPhoneOrEmail","Roles","TypeUser","ModelSignUp","RegExp","signUpActions","CHANGE_PASSWORD_CARGANDO","CHANGE_PASSWORD_ERROR","CHANGE_PASSWORD_HANDLE_CHANGE","CHANGE_PASSWORD_CLEAN_STATE","CHANGE_PASSWORD_USER","CHANGE_PASSWORD_HANDLE_VALIDATION","SetPassword","changePasswordHandleChange","changePasswordHandleValidation","changePasswordCleanState","changePasswordMethods","phoneOrEmail","ChangePassword","changePasswordReducer","NewPassword","ConfirmNewPassword","code","email","modelChangePassword","Code","usernameOrEmailOrPhoneNumber","readonly","changePasswordActions","ChangePasswordForUser","actionChangePasswordForUser","userId","UserId","SendEmail","Login","ComponentLogin","ComponentSignUp","ComponentChangePassword","ComponentVerifyAccount","ComponentSendEmail","ComponentChangePasswordForUser","LayoutSection","classSection","classContainer","classLogo","classCard","classCardBody","LoginPage","ForgotPassword","CheckYourAccount","ChangePasswordPage","SignUpPage","ANALYTICS_CARGANDO","ANALYTICS_ERROR","ANALYTICS_CLEAN_STATE","ANALYTICS_COUNT_PRODUCTS","ANALYTICS_COUNT_COURSES","ANALYTICS_COUNT_USERS","ANALYTICS_COUNT_ADMINS","ANALYTICS_COUNT_COMPANIES","ANALYTICS_COUNT_POSITIONS","ANALYTICS_COUNT_PERSONAL_DETAILS","ANALYTICS_COUNT_AREAS","analyticsCleanState","analyticsMethods","Indicators","analyticsReducer","count_companies","count_users","count_admins","cardAnalytics","analyticsActions","ADMIN_CARGANDO","ADMIN_ERROR","ADMIN_HANDLE_CHANGE","ADMIN_CLEAN_STATE","ADMIN_CRUD","ADMIN_HANDLE_VALIDATION","ADMIN_USERS_LIST","GetUserInfo","GetUsersInfo","roleName","PutContactInfo","ValidateAccount","adminHandleChange","adminHandleValidation","adminCleanState","adminMethods","typeError","ListOfUsers","adminReducer","adminActions","list_users","typeUser","UpdateContactInfo","closeModal","contactModel","NewUserName","NewTypeUser","NewPhoneNumber","NewEmail","EmailConfirmed","cargandoValidateAccount","Active","ComponentsListOfUsers","UpdateUserInfo","ComponentUpdateUserInfo","ComponentValidateAccount","ListOfAdmins","CreateAdmin","ReadAdmin","CreateUser","ReadUser","SECTION_CARGANDO","SECTION_ERROR","SECTION_HANDLE_CHANGE","SECTION_CLEAN_STATE","SECTION_CRUD","SECTIONS_LIST","SECTIONS_SELECT","SECTION_HANDLE_VALIDATION","sectionHandleChange","sectionHandleValidation","sectionCleanState","sectionMethods","Section","sectionId","actionSection","sectionReducer","CourseId","courseId","sectionActions","CreateModalSection","sectionModal","EditSectionModal","section","SectionName","SectionId","DeleteSectionModal","deleteSectionAction","CATEGORY_PRODUCT_CARGANDO","CATEGORY_PRODUCT_ERROR","CATEGORY_PRODUCT_HANDLE_CHANGE","CATEGORY_PRODUCT_CLEAN_STATE","CATEGORY_PRODUCT_CRUD","CATEGORIES_PRODUCTS_LIST","CATEGORY_PRODUCT_HANDLE_VALIDATION","categoryProductHandleChange","categoryProductHandleValidation","categoryProductCleanState","categoryProductMethods","BLOB_CARGANDO","BLOB_ERROR","BLOB_HANDLE_CHANGE","BLOB_HANDLE_VALIDATION","BLOB_CLEAN_STATE","BLOB_CRUD","blobHandleChange","blobHandleValidation","blobCleanState","blobMethods","blob","createFormData","ContainerName","IsPrivate","FormData","set","append","Product","actionBlob","file","blobType","blobs","formData","blobReducer","Price","ProductCategoryId","actionProduct","fileCoverAnswer","list_categories_products","categoryProductReducer","categoryReducer","list_categories","categoryProductActions","blobActions","categoryActions","CreateProductModal","porductModal","hasSection","EditProductModal","DeleteProductModal","ListOfSections","cleanSection","list_sections","CrudCourse","Dashboard","indicator","page","AdminUsersPages","AdminProductPages","CreateProduct","AdminCompanyPages","ListOfCompanies","AdminSections","TemplateDashboardAdmin","CreateSection","EditCourse","Course","courseReducer","ListOfCourses","Player","url","height","controls","PlayerMedia","ComponentPlayer","TabCourse","WatchClass","stateProduct","ComponentCourse","ComponentListOfCourses","ComponentWatchClass","CreateCourse","WhatchCourse","CategoryProduct","actionCategoryProduct","ListOfCategoriesProducts","deleteAction","cleanModal","Category","categoryId","actionCategory","CreateCategoryModal","categoryModal","EditCategoryModal","DeleteCategoryModal","PRODUCT_DETAIL_CARGANDO","PRODUCT_DETAIL_ERROR","PRODUCT_DETAIL_HANDLE_CHANGE","PRODUCT_DETAIL_CLEAN_STATE","PRODUCT_DETAIL_CRUD","PRODUCT_DETAILS_LIST","PRODUCT_DETAIL_HANDLE_VALIDATION","GetProductDetails","GetProductDetail","GetProductDetailByProductId","PutProductDetail","PostProductDetail","DeleteProductDetail","productDetailHandleChange","productDetailHandleValidation","productDetailCleanState","productDetailMethods","ProductDetail","productDetailReducer","SubTitle","BlobId","ProductId","actionProductDetail","Blob","fileZip","fileZipAnswer","EditProduct","ProductSection","CategoryProducts","ListOfCategoriesOfProducts","Company","TradeName","BusinessName","BusinessActivity","count_positions","count_personal_details","count_areas","hrefBase","ComponentCompany","CompanyIndicators","ComponentCompanyIndicators","companyName","JOB_DETAIL_CARGANDO","JOB_DETAIL_ERROR","JOB_DETAIL_HANDLE_CHANGE","JOB_DETAIL_CLEAN_STATE","JOB_DETAIL_CRUD","JOB_DETAILS_LIST","JOB_DETAIL_HANDLE_VALIDATION","GetJobDetails","GetJobDetailByPersonalDetailId","personalDetailId","GetJobDetail","PutJobDetail","PostJobDetail","DeleteJobDetail","jobDetailHandleChange","jobDetailHandleValidation","jobDetailCleanState","jobDetailMethods","JobDetail","jobDetailReducer","PersonDetailId","DateAdmission","Contract","Benefits","IntegratedSalary","DailySalary","Type","actionJobDetail","jobDetailActions","JobDetails","CreateJobDetail","UpdateJobDetail","reDirectBase","reDirectCreate","CreatePosition","PERSONAL_DETAIL_CARGANDO","PERSONAL_DETAIL_ERROR","PERSONAL_DETAIL_HANDLE_CHANGE","PERSONAL_DETAIL_CLEAN_STATE","PERSONAL_DETAIL_CRUD","PERSONAL_DETAILS_LIST","PERSONAL_DETAIL_HANDLE_VALIDATION","GetPersonalDetails","GetPersonalDetailsByCompanyId","GetPersonalDetail","PutPersonalDetail","PostPersonalDetail","DeletePersonalDetail","personalDetailHandleChange","personalDetailHandleValidation","personalDetailCleanState","personalDetailMethods","ListOfPersonalDetails","redirectUser","personalDetailReducer","personalDetailActions","list_personal_details","PersonDetail","SecondLastName","RFC","Birthdate","Gender","actionPersonalDetail","ListOfPersonDetails","ComponentListOfPersonalDetails","ComponentPersonDetail","CreatePersonDetail","AREA_CARGANDO","AREA_ERROR","AREA_HANDLE_CHANGE","AREA_CLEAN_STATE","AREA_CRUD","AREAS_LIST","AREA_HANDLE_VALIDATION","GetAreas","GetAreasByCompanyId","GetAreasByCompanyIdWithoutTaken","areaId","GetAreasByCompanyIdTaken","GetArea","PutArea","PutAreaTaken","organizationChartId","PostArea","DeleteArea","areaHandleChange","areaHandleValidation","areaCleanState","areaMethods","ListOfAreas","areaReducer","areaActions","list_areas","Area","Taken","ComponentListOfAreas","ComponentArea","CreateArea","ComponentCompanies","ComponentJobDetails","CreateCompany","AdminDashboardPages","ORGANIZATION_CHART_CARGANDO","ORGANIZATION_CHART_ERROR","ORGANIZATION_CHART_HANDLE_CHANGE","ORGANIZATION_CHART_CLEAN_STATE","ORGANIZATION_CHART_CRUD","ORGANIZATION_CHARTS_LIST","ORGANIZATION_CHART_HANDLE_VALIDATION","ORGANIZATION_CHART_CHILD","GetOrganizationCharts","GetOrganizationChart","GetOrganizationChartChild","GetOrganizationChartByCompanyId","GetOrganizationChartByArea","PutOrganizationChart","PostOrganizationChart","DeleteOrganizationChart","organizationChartHandleChange","organizationChartHandleValidation","organizationChartCleanState","organizationChartMethods","cn","bem","StyledNode","styled","div","CardNode","OrganizationChart","centerDiagram","element","container","current","scrollLeft","scrollWidth","clientHeight","createOrganigrama","organigrama","OrganizationChart1","PersonalDetail","child","createOrigin","addUpChild","parentId","PositionChartId","nodeId","getOrganizationChartByArea","getCompleteOrganizationChart","createRef","organizationChartReducer","innerRef","lineWidth","lineColor","lineBorderRadius","organizationChartActions","AreasId","PositionId","actionOrganizationChart","ComponentOrganizationChart","UpdateChild","ComponentUpdateChild","ViewOrganizationChart","ComponentViewOrganizationChart","OrgainaztionChart","UpdateCurrent","UpdatePersonDetail","UpdateArea","ComponentUsers","AdminSectionsPages","ComponentSections","AdminCoursesPages","ComponentCourses","ComponentProducts","ComponentDashboard","AdminPositionsPages","ComponentPositions","AdminOrganizationChart","AdminPersonalDetail","ComponentPersonalDetail","AdminArea","DashboardUserTemplate","DashboardUserPage","UserListOfPositionPage","UserCreatePosition","UserListOfPersonDetails","UserCreatePersonDetail","UserUpdatePersonDetail","UserListOfAreas","UserCreateArea","UserUpdateArea","UserOrganizationChart","ComponentsOrganizatioChart","App","exact","path","component","Landings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","reducer","Idd","nameInput","DateModified","Reducer","files","list_brands","list_organization_chart","list_job_details","list_product_details","COURSE_CARGANDO","COURSE_ERROR","COURSE_HANDLE_CHANGE","COURSE_CLEAN_STATE","COURSE_CRUD","COURSES_LIST","COURSE_HANDLE_VALIDATION","list_courses","list_sections_select","cargandoUsername","errorUsername","cargandoEmail","errorEmail","cargandoPhone","errorPhone","cargandoPassword","errorPassword","errorValidateAccount","count_products","count_courses","BlobName","BlobType","Brand_Blob","Product_Blob","BlogPosts","AspNetUsers","combineReducers","valueInput","WebFont","load","google","families","store","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44375a25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/product.d9246254.jpg\";","export default __webpack_public_path__ + \"static/media/cristian.319f1962.jpg\";","export default __webpack_public_path__ + \"static/media/Jesus.7acb2fb5.jpg\";","export default __webpack_public_path__ + \"static/media/version-4-logo.e2c73c24.svg\";","export default __webpack_public_path__ + \"static/media/organigrama.b28e5e03.jpeg\";","export default __webpack_public_path__ + \"static/media/puestos.6832c674.jpeg\";","export default __webpack_public_path__ + \"static/media/descripciones.25a448ed.jpeg\";","export default __webpack_public_path__ + \"static/media/procesos.19e7ff14.jpeg\";","import React from 'react'\r\nimport Cristian from './cristian.jpg';\r\nimport Jesus from './Jesus.jpg';\r\nimport ProductDefault from './product.jpg'\r\nimport Logo from './version-4-logo.svg'\r\nimport Organigrama from './organigrama.jpeg'\r\nimport Puestos from './puestos.jpeg'\r\nimport Descripciones from './descripciones.jpeg'\r\nimport Procesos from './procesos.jpeg'\r\n   \r\n\r\n\r\n\r\nconst Img = ({src='', width='', alt='', className=''}) => {\r\n    return (\r\n        <img src={src} width={width} alt={alt} className={className}/>\r\n    )\r\n}\r\n\r\nexport const ImgCristian = ({className}) =>(\r\n    <Img src={Cristian} alt='Cristian photo' className={className}/>\r\n)\r\n\r\nexport const ImgJesus = ({className}) =>(\r\n    <Img src={Jesus} alt='jesus photo' className={className}/>\r\n)\r\n\r\nexport const ImgOrganigrama = ({className}) =>(\r\n    <Img src={Organigrama} alt='Organigrama' className={className}/>\r\n)\r\n\r\nexport const ImgProcesos = ({className}) =>(\r\n    <Img src={Procesos} alt='Procesos' className={className}/>\r\n)\r\n\r\nexport const ImgPuestos = ({className}) =>(\r\n    <Img src={Puestos} alt='Puestos' className={className}/>\r\n)\r\n\r\nexport const ImgDescripciones = ({className}) =>(\r\n    <Img src={Descripciones} alt='Descripciones' className={className}/>\r\n)\r\n\r\nexport const SvgLogo = ({className}) =>(\r\n    <Img src={Logo} width={150} alt='logo version 4' className={className}/>\r\n)\r\n\r\nexport const ImgProduct = ({uri = '', className}) =>(\r\n    <Img src={uri ? uri : ProductDefault} alt='default product' className={className}/>\r\n)\r\n\r\n\r\n    \r\n","//imports de react.\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {SvgLogo} from '../img'\r\n\r\nexport const LogoNavbar = ({href = '/', className=''}) => {\r\n    return (\r\n        <h6 className={`font-weight-bold ${className}`}> <Link to='/' className=\"text-dark\">Version 4</Link> </h6>\r\n    )\r\n}\r\n\r\n\r\nexport const Logo = ({href = '/', className=''}) => {\r\n    return (\r\n        <SvgLogo />\r\n    )\r\n}","// Imports de axios.\r\nimport axios from \"axios\";\r\n\r\n/*\r\n * Función para detectar el tipo de error.\r\n */\r\nexport const errorResponse = (data) => {\r\n  //debugger;\r\n  if (data.ModelState) {\r\n    return data.ModelState[\"\"];\r\n  }\r\n  if (data.Message) {\r\n    return data.Message;\r\n  }\r\n  if (data.error_description) {\r\n    return data.error_description;\r\n  }\r\n  if (data.error) {\r\n    return data.error;\r\n  }\r\n};\r\n\r\n/*\r\n * F.unción para manejar errores.\r\n */\r\nexport const errorHandler = (error) => {\r\n  let messageError = \"\";\r\n  //debugger;\r\n  if (!error.response) {\r\n    messageError = \"Error de conexión\";\r\n  } else {\r\n    switch (error.response.status) {\r\n      case 400:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 404:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 500:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 401:\r\n        setLocalStorage();\r\n        window.open(`https://version4-front.azurewebsites.net/login-expired`, \"_self\");\r\n        break;\r\n      default:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n    }\r\n  }\r\n  return messageError;\r\n};\r\n\r\n/*\r\n * Funcion para manejar el encabezado del token.\r\n */\r\nfunction configHeader(token) {\r\n  if (token) {\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return config;\r\n  }\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\n/*\r\n * Función para setear local storage\r\n */\r\nexport const setLocalStorage = (respuesta) => {\r\n  if (respuesta === undefined) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem(\"token\", respuesta.data.access_token);\r\n  localStorage.setItem(\"role\", respuesta.data.roles);\r\n  localStorage.setItem(\"username\", respuesta.data.userName);\r\n\r\n  return;\r\n};\r\n\r\n/*\r\n * Función para manejar las peticiones del api, reducir y optimizar código\r\n * uri: dirección que vamos a llamar del back\r\n * header: si requiere autenticación el usuario\r\n * apiMethod: get, post, put, delete\r\n * body: cuerpo si lo necesita\r\n */\r\nexport const axios_api = async (\r\n  uri = \"\",\r\n  header,\r\n  apiMethod = \"\",\r\n  body = {}\r\n) => {\r\n  let respuesta = {};\r\n\r\n  if (uri === \"\") {\r\n    return (respuesta = {\r\n      data: \"No se especifico ninguna uri\",\r\n    });\r\n  }\r\n\r\n  const config = configHeader(header);\r\n\r\n  const pathApi = `${localStorage.getItem(\"route\")}${uri}`;\r\n\r\n  switch (apiMethod.toLowerCase()) {\r\n    case \"get\":\r\n      respuesta = await axios.get(pathApi, config);\r\n      break;\r\n    case \"post\":\r\n      respuesta = await axios.post(pathApi, body, config);\r\n      break;\r\n    case \"put\":\r\n      respuesta = await axios.put(pathApi, body, config);\r\n      break;\r\n    case \"delete\":\r\n      respuesta = await axios.delete(pathApi, config);\r\n      break;\r\n    default:\r\n      respuesta = {\r\n        data: \"No se envio ningun ApiMethod\",\r\n      };\r\n      break;\r\n  }\r\n\r\n  return respuesta;\r\n};\r\n\r\nexport const signOff = (e) => {\r\n  e.preventDefault();\r\n  setLocalStorage();\r\n  window.open(`/`, \"_self\");\r\n};\r\n\r\n// Metodo para manejar las rutas del api\r\nexport const setPathApi = () => {\r\n  const option = 2;\r\n  let route = \"\";\r\n  switch (option) {\r\n    case 1:\r\n      // Local\r\n      route = \"https://localhost:44356/\";\r\n      break;\r\n    case 2:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    case 3:\r\n      // Production\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    default:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n  }\r\n\r\n  localStorage.setItem(\"route\", route);\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport {Logo} from './Logos'\r\n// Imports de components-api.\r\nimport {signOff} from '../components-api/ConfigApi'\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Navbars = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar expand=\"md\" className=\"fixed-top bg-white border-bottom\">\r\n        <Container>\r\n        {/* <NavbarBrand href=\"/\" className=\"text className='text-primary'-dark font-weight-bold\">VERSION 4</NavbarBrand> */}\r\n        <Logo />\r\n        <NavbarToggler onClick={toggle}><FaIcons.FaBars className=\"lead\" /></NavbarToggler>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"d-flex mr-2\">\r\n              <NavLink href=\"/login\"className=\"btn btn-outline-secondary align-self-center\">Empresas</NavLink>\r\n            </NavItem>\r\n            {/* <NavItem className=\"d-flex\">\r\n              <NavLink href=\"/sign-up\"className=\"btn btn-primary align-self-center\">Regístrate</NavLink>\r\n            </NavItem> */}\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const NavbarAdmin = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar light className=\"bg-white\" expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand href=\"/admin-dashboard\" className='text-primary'>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret className=\"text-dark\">\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff} className=\"text-dark\">\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const User = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const {companyId} = useParams();\r\n  return (\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand className='text-primary' href={`/user-dashboard/company/${companyId}`}>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff}>\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}","// Imports de react.\r\nimport React from 'react'\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CardAnalytics = ({title, number, icon}) => {\r\n    const rTitle = title ? title : 'title';\r\n    const rNumber = number ? number : '0'\r\n    const rIcon = icon ? icon : <FaIcons.FaVideo className=\"mr-2\" />;\r\n    return (\r\n        <Card className=\"border-0 my-3\">\r\n            <CardBody>\r\n                <p className=\"text-muted mb-2\">{rIcon} {rTitle}</p>\r\n                <h5 className=\"display-4 text-dark\">{rNumber}</h5>\r\n                {/* <div className=\"d-inline-block text-success mr-2\"><FaIcons.FaArrowUp className=\"mr-2\" />0%</div><p className=\"text-dark d-inline-block mb-0\">vs los últimos 7 días</p> */}\r\n            </CardBody>\r\n        </Card>   \r\n    )\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from \"reactstrap\";\r\n\r\nexport const DropDownActions = ({children, labelButton}) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n      <DropdownToggle caret color={'link'} className=\"text-dark\">{labelButton}</DropdownToggle>\r\n      <DropdownMenu>{children}</DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const Loader = ({color, activate}) => {\r\n    const rColor = color ? color: 'primary';\r\n    if(activate){\r\n        return(\r\n            <Spinner color={rColor} className=\"align-middle ml-1\" />\r\n        )\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const Error = ({message}) => {\r\n    \r\n    return <>\r\n        {message ? \r\n            <div className='text-danger text-center mb-4'>{message}</div>\r\n        : ''}\r\n    </>;\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {DropdownItem, Form, FormGroup, Input, Table} from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de components.\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\nimport {DropDownActions} from '../config-components/DropDowns'\r\n\r\nexport const UseSearchItems = (list, propertiesTable) => {\r\n  const [searchByItem, setSearchItem] = useState(propertiesTable);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  React.useMemo(() => {\r\n    const filteredSome = list.filter((items) => {\r\n      let res = \"\";\r\n      res += propertiesTable.map((property) => {\r\n        return `${items[property]} `;\r\n      });\r\n      return res.toLowerCase().includes(query.toLowerCase());\r\n    });\r\n    setSearchItem(filteredSome);\r\n  }, [list, query, propertiesTable]);\r\n\r\n  return { query, setQuery, searchByItem };\r\n};\r\n\r\nexport const TableFilter = ({\r\n    title, \r\n    titlesTable,\r\n    propertiesTable,\r\n    bodyTable,\r\n    loading,\r\n    error,\r\n    hrefCreate,\r\n    actions\r\n}) => {\r\n    const rTitle = title ? title : 'Titulo';\r\n    const rHrefCreate= hrefCreate ? hrefCreate : '/admin-dashboard';\r\n\r\n    const { query, setQuery, searchByItem } = UseSearchItems(\r\n        bodyTable,\r\n        propertiesTable\r\n    );\r\n    return (\r\n        <>\r\n            <div className=\"d-flex mb-4\">\r\n                <h3 className=\"flex-grow-1\">{rTitle}</h3>\r\n                \r\n                <div>\r\n                    <Form>\r\n                        <FormGroup className=\"d-flex\">\r\n                            <Input \r\n                                className=\"mr-3\" \r\n                                type=\"text\" \r\n                                placeholder=\"Buscar...\" \r\n                                value={query}\r\n                                onChange={(e) => {\r\n                                    setQuery(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Link to={rHrefCreate} className={'btn btn-primary'}>Crear</Link>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <Table className=\"bg-white\">\r\n                <thead>\r\n                    <tr>\r\n                        {titlesTable.map(title => {\r\n                            return(\r\n                            <th>{title}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    error ? <Error message={error} /> :\r\n                    loading ? <Loader activate={loading}/> : \r\n                    <tbody>\r\n                        {searchByItem?.map(item => {\r\n                            return(\r\n                                <tr>\r\n                                    {propertiesTable?.map(property => {\r\n                                        return <td>{item[property]}</td>\r\n                                    })}\r\n                                        <td>\r\n                                        <DropDownActions \r\n                                            labelButton={<FaIcons.FaEllipsisH />}\r\n                                        >\r\n                                            {actions &&\r\n                                                actions.map( action => {\r\n                                                    return<DropdownItem onClick={() => action.handleAction(item['Id'])}>\r\n                                                        {action.action}\r\n                                                    </DropdownItem>\r\n                                                })\r\n                                            }\r\n                                        </DropDownActions>  \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}      \r\n                    </tbody>\r\n                }               \r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentConfigApi from './ConfigApi'\r\nimport * as ComponentApiResponses from './ApiResponses'\r\n\r\nexport const ConfigApi = ComponentConfigApi;\r\nexport const ApiResponses = ComponentApiResponses;","// Imports de react.\r\nimport React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Input, Label, FormGroup, FormFeedback, Form, Button, Col} from 'reactstrap'\r\nimport {RegularExpressions} from './index'\r\nimport {ApiResponses} from '../components-api'\r\n\r\n\r\n// Hook para manejar el cambio en inputs.\r\nexport const useInputState = (inputValue) => {\r\n    const [inputChange, setInputChange] = useState(inputValue);\r\n    const setOnChange = (e) => {\r\n        setInputChange(e)\r\n    }\r\n    return {inputChange, setOnChange}\r\n}\r\n\r\n\r\n// Input para textos.\r\nexport const InputText = ({forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    placeHolder,\r\n    inputValue,\r\n    onChange,\r\n    maxLength,\r\n    minLength,\r\n    RE,\r\n    validateRE,\r\n    options,\r\n    optionPlaceHolder,\r\n    forgotPassword = false,\r\n    xs='12',\r\n    sm='12',\r\n    md='12',\r\n    lg='12',\r\n    xl='12',\r\n    classCol='px-0'\r\n}) => {\r\n    const rFor = forName ? forName : 'for';\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n    const rPlaceHolder = placeHolder ? placeHolder : '';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rMaxLength = maxLength ? maxLength : 524288;\r\n    const rMinLength = minLength ? minLength : 0;\r\n    const rRE = RE ? RE : '';\r\n\r\n    const handleRE = (e) =>{\r\n        \r\n        validateRE = e.target.value.match(rRE.re) ? true : false;\r\n        if(validateRE && e.target.value === '' && isMandatory){\r\n            validateRE = false;\r\n        }\r\n        if(!validateRE && e.target.value === '' && !isMandatory){\r\n            validateRE = '';\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <Col \r\n            xs={xs}\r\n            sm={sm}\r\n            md={md}\r\n            lg={lg}\r\n            xl={xl}\r\n            className={classCol}\r\n        >\r\n            <FormGroup>\r\n                <Label\r\n                    for={rFor}\r\n                    className={`${rClassLabel} d-flex justify-content-between`}\r\n                >\r\n                        <div>\r\n                            {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n                        </div>\r\n                        {forgotPassword && <small>\r\n                            <Link to='/forgot-password'>\r\n                                ¿Olvidaste tu contraseña?\r\n                            </Link>\r\n                        </small>}\r\n                </Label>\r\n                <Input\r\n                    type={rInputType}\r\n                    name={rInputName}\r\n                    id={rInputId}\r\n                    placeholder={rPlaceHolder}\r\n                    value={rInputValue}\r\n                    onChange={(e)=>handleRE(e)}\r\n                    maxLength={rMaxLength}\r\n                    minLength={rMinLength}\r\n                    valid={validateRE === true && true }\r\n                    invalid={validateRE === false && true}\r\n                >\r\n                    {\r\n                        options && \r\n                        <>\r\n                            <option value=\"\">{optionPlaceHolder}</option>\r\n                            {options.map(option => {\r\n                                return <option key={option.Id} value={option.Id}>{option.Name} {option?.LastName ? option?.LastName : ''}</option>\r\n                            })}\r\n                        </> \r\n                    }\r\n                </Input>\r\n                <FormFeedback  valid >{validateRE && rRE.validMessage}</FormFeedback>\r\n                <FormFeedback  invalid >{validateRE === false && rRE.invalidMessage}</FormFeedback>\r\n\r\n            </FormGroup>\r\n        </Col>\r\n    )\r\n}\r\n\r\n// Input para correo.\r\nexport const InputEmail = ({name, inputValue, onChange, label, RE, validateRE}) => {\r\n    const rName = name ? name : 'Email';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rLabel = label ? label : 'Email';\r\n    const rRE = RE ? RE : RegularExpressions.RE_EMAIL;\r\n    return <InputText\r\n            forName='Email'\r\n            classLabel='font-weight-bold'\r\n            textLabel={rLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='text'\r\n            inputName={rName}\r\n            inputId='Email'\r\n            placeHolder={`Introduce tu ${rLabel}`}\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={20}\r\n            RE={rRE}\r\n            validateRE={validateRE}\r\n        />\r\n}\r\n\r\nexport const InputPassword = ({\r\n    inputValue, \r\n    onChange, \r\n    validateRE, \r\n    forgotPassword = false,\r\n    RE = RegularExpressions.RE_PASSWORD,\r\n    inputName = 'password',\r\n    textLabel = 'Contraseña'\r\n}) => {\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    return <InputText\r\n            forName='Password'\r\n            classLabel='font-weight-bold'\r\n            textLabel={textLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='password'\r\n            inputName={inputName}\r\n            inputId='password'\r\n            placeHolder='Introduce tu contraseña'\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={1}\r\n            RE={RE}\r\n            validateRE={validateRE}\r\n            forgotPassword={forgotPassword}\r\n        />\r\n}\r\n\r\n\r\nexport const InputFile = ({//forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    onChange,\r\n    RE,\r\n    validateRE,\r\n   \r\n}) => {\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n \r\n    const handleRE = (e) =>{\r\n        if(validateRE && e.target.value === [] && isMandatory){\r\n            validateRE = false;\r\n        }else {\r\n            validateRE = true;\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label\r\n                className={rClassLabel}\r\n            >\r\n                {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n            </Label>\r\n            <Input\r\n                type={rInputType}\r\n                name={rInputName}\r\n                id={rInputId}\r\n                onChange={(e)=>handleRE(e)}\r\n                valid={validateRE === true && true }\r\n                invalid={validateRE === false && true}\r\n            />\r\n            <FormFeedback  valid >{validateRE && 'archivo valido'}</FormFeedback>\r\n            <FormFeedback  invalid >{validateRE === false && 'archivo invalido'}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\n  \r\nexport const ValidateInputs = (validations, e, onValidate) => {\r\n    e.preventDefault()\r\n    for(let i = 0; i < validations.length ; i++){\r\n        if(validations[i] !== '' && validations[i].props.isMandatory === '*' ){\r\n            if(!validations[i].props.validateRE || validations[i].props.validateRE === \"\"){\r\n                let model = {\r\n                    name: validations[i].props.inputName,\r\n                    isInvalid: false\r\n                }\r\n                onValidate(model);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const Form1 = ({children, \r\n    loading, \r\n    error, \r\n    action,\r\n    textButton,\r\n    textButtonLoading,\r\n    handleValidations,\r\n}) => {\r\n    const HandleAction = (e) =>{\r\n        const isValid = ValidateInputs(children, e, handleValidations);\r\n        if(isValid) {\r\n            action();\r\n        }\r\n    }\r\n    return <Form className={'d-flex flex-wrap'}>\r\n        {children}\r\n        <ApiResponses.Error message={error}/> \r\n        {loading ? \r\n            <Button color=\"primary\" className=\"w-100 mb-3\" >{textButtonLoading}<ApiResponses.Loader activate={loading}  color={'light'} /></Button>  :\r\n            <Button color=\"primary\" className=\"w-100 mb-3\" onClick={HandleAction}>{textButton} <ApiResponses.Loader activate={loading}  color={'light'} /></Button>\r\n        }\r\n         \r\n    </Form>\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport const SwitchSome = () => {\r\n  const [some, setSome] = useState(false);\r\n  const toggle = () => {\r\n    setSome(!some)\r\n  }\r\n  return {some, setSome, toggle}\r\n}\r\n\r\nexport const ModalForm  = ({children, content, modalTitle, state}) => {\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody> \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalDelete  = ({children, content, modalTitle, action, state}) => {\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    state.toggle();\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={state.toggle}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalOpenDelete  = ({content, modalTitle, action, clean}) => {\r\n\r\n  const [modal, setToogle] = useState(true);\r\n\r\n  const toggle = () => { \r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    toggle();\r\n  }\r\n\r\n  const toggleCancel = () => {\r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <Modal isOpen={modal} toggle={toggleCancel} >\r\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={toggleCancel}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody,\r\n} from 'reactstrap';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <Card className=\"card-form mx-auto text-center border-0\">\r\n            <CardBody>\r\n                <h4 className=\"display-1 font-weight-bold mb-0\">404</h4>\r\n                <h4 className=\"text-muted mb-4\">Página no encontrada</h4>\r\n                <Link to='/' className=\"btn btn-primary\">Regresar a inicio</Link>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","export const RE_EMAIL = {\r\n    re: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\r\n    validMessage: \"Email correcto\",\r\n    invalidMessage: \"El email necesita un @ y un . para ser valido\",\r\n  };\r\n  \r\n  export const RE_PASSWORD = {\r\n    re: /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i,\r\n    validMessage: \"Contraseña valida\",\r\n    invalidMessage:\r\n      \"La contraseña debe tener más de 8 caracteres, un dígito, una minúscula y una mayúscula  \",\r\n  };\r\n  \r\n  export const RE_PASSWORD_MATCHES = {\r\n    re: \"\",\r\n    validMessage: \"La Contraseña coincide\",\r\n    invalidMessage: \"La contraseña no coincide\",\r\n  };\r\n  \r\n  export const RE_EMPTY = {\r\n    re: /^[^]+$/i,\r\n    validMessage: \"Campo correcto\",\r\n    invalidMessage: \"No puede ir vacio\",\r\n  };\r\n  ","export default __webpack_public_path__ + \"static/media/tab-1.22cb2b5b.png\";","export default __webpack_public_path__ + \"static/media/tab-2.7216be74.png\";","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport Tab1 from '../img/tab-1.png'\r\nimport Tab2 from '../img/tab-2.png'\r\n\r\n\r\nconst Example = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs className=\"mb-2\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Ventas en línea\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Web Apps\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n                <Col lg=\"7\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                        <h3 className=\"font-weight-bold mb-3\">Somos expertos en la creación de páginas web atractivas que aumentan las ventas en línea.</h3>\r\n                        <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam quis tempus dui. Mauris nisl velit, vulputate eu dapibus vitae.</p>\r\n                    </div>\r\n                </Col>\r\n                <Col lg=\"5\" className=\"text-center\">\r\n                    <img src={Tab1} className=\"img-fluid\" alt=\"Aumenta tus ventas en línea\" />\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n            <Row>\r\n                <Col lg=\"7\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                        <h3 className=\"font-weight-bold mb-3\">Desarrollamos tu proyecto con las mejores y más recientes tecnologias.</h3>\r\n                        <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam quis tempus dui. Mauris nisl velit, vulputate eu dapibus vitae.</p>\r\n                    </div>\r\n                </Col>\r\n                <Col lg=\"5\" className=\"text-center\">\r\n                    <img src={Tab2} className=\"img-fluid\" alt=\"Aplicaciones web modernas\" />\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","import React from 'react'\r\n\r\nexport const ShowListFromText = ({description = []}) => {\r\n\r\n    if(!description){\r\n        return 'no hay información';\r\n    }\r\n\r\n    let arrayDeCadenas = description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n\r\n    return(\r\n        <ul>\r\n            {arrayDeCadenas.map(item => {\r\n                return (\r\n                        <li>{item}</li>\r\n                    )\r\n                }    \r\n            )}\r\n        </ul>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const POSITION_CARGANDO = \"position_cargando\";\r\nexport const POSITION_ERROR = \"position_error\";\r\nexport const POSITION_HANDLE_CHANGE = \"position_handle_change\";\r\nexport const POSITION_CLEAN_STATE = \"position_clean_state\";\r\nexport const POSITION_CRUD = \"position_crud\";\r\nexport const POSITIONS_LIST = \"position_list\";\r\nexport const POSITION_HANDLE_VALIDATION = \"position_handle_validation\";\r\n\r\nexport const GetPositions = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Positions`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\nexport const GetPositionsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PositionsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\n\r\nexport const GetPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const PutPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'position_put'};\r\n}\r\n\r\nexport const PostPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const DeletePosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_HANDLE_VALIDATION, \r\n    GetPositions,\r\n    GetPositionsByCompanyId,\r\n    GetPosition,\r\n    PutPosition,\r\n    PostPosition,\r\n    DeletePosition\r\n  } from \"./positionTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const positionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const positionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const positionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const positionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPositions\":\r\n          answer = await GetPositions(); \r\n          break;\r\n\r\n        case \"GetPositionsByCompanyId\":\r\n          answer = await GetPositionsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPosition\":\r\n          answer = await GetPosition(data);\r\n          break;\r\n\r\n        case \"PutPosition\":\r\n          answer = await PutPosition(data);\r\n          break;\r\n\r\n        case \"PostPosition\":\r\n          answer = await PostPosition(data);\r\n          break;\r\n        \r\n        case \"DeletePosition\":\r\n          answer = await DeletePosition(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: POSITION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nclass Position extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {positionId, positionMethods} = this.props;\r\n        positionId && await positionMethods({Id: positionId}, 'GetPosition');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            positionMethods, \r\n            positionReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                Description,\r\n                Description2,\r\n                CompanyId,\r\n                Objective,\r\n                Knowledge,\r\n                Salary\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            Description: Description ? Description : '',\r\n            Description2: Description2 ? Description2 : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Objective: Objective ? Objective : '',\r\n            Knowledge: Knowledge ? Knowledge : '',\r\n            Salary: Salary ? Salary : ''\r\n        }\r\n        await positionMethods(model, action);\r\n    }\r\n\r\n    actionPosition = async () => {\r\n        const {\r\n            positionCleanState,\r\n            positionReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPosition');\r\n        }else{\r\n            await this.sendAction('PostPosition')\r\n        }\r\n        if(this.props.positionReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            positionCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {positionCleanState} = this.props;\r\n        positionCleanState()\r\n\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            positionHandleValidation,\r\n            positionHandleChange,\r\n            positionReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Description,\r\n                    Description2,\r\n                    Objective,\r\n                    Salary\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPosition}\r\n                textButton={Id ? 'Guardar Puesto' : 'Crear Puesto'}\r\n                textButtonLoading={Id ? 'Guardando PUesto...' : 'Creando Puesto...'}\r\n                validations={validations}\r\n                handleValidations={positionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Objetivo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Objective'}\r\n                    placeHolder={'Introduce el objetivo del puesto'}\r\n                    inputValue={Objective}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Objective}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Responsabilidades'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce las responsabilidades del puesto'}\r\n                    inputValue={Description}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Competencias'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description2'}\r\n                    placeHolder={'Introduce información'}\r\n                    inputValue={Description2}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description2}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Puntos'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Salary'}\r\n                    placeHolder={'Introduce puntos'}\r\n                    inputValue={Salary}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Salary}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({positionReducer}) => {\r\n    return {positionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...positionActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Position);\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Lists} from '../config-components'\r\n\r\nexport const ListOfResponsabilities = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description}/>\r\n    )\r\n}\r\n\r\nexport const ListOfDescriptions = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description2}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description2}/>\r\n    )\r\n}\r\n","import ComponentPosition from './Positions'\r\nimport ComponentListOfPositions from './ListOfPositions'\r\nimport * as ComponentsListFromPositions from './Responsibilities'\r\nimport ComponentReadPosition from './ReadPosition'\r\nexport const Position = ComponentPosition;\r\nexport const ListOfPositions = ComponentListOfPositions;\r\nexport const ListFromPositions = ComponentsListFromPositions; \r\nexport const ReadPosition = ComponentReadPosition; ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nconst ListOfPositions = ({ title='Puestos', reDirect='', create='/create-position'}) => {\r\n    const positionReducer = useSelector(state => state.positionReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(positionActions.positionMethods({companyId},'GetPositionsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (positionId) => {\r\n        //history.push(`/admin-dashboard/company/${companyId}/update-position/${positionId}`)\r\n        history.push(reDirect.replace('positionId', positionId).replace('companyId', companyId))\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_positions\r\n    } = positionReducer;\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Puesto','Acciones']}\r\n                propertiesTable={['Name']}\r\n                //hrefCreate={`/admin-dashboard/company/${companyId}${create}`}\r\n                hrefCreate={create.replace('companyId', companyId)}\r\n                bodyTable={list_positions}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Puesto', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPositions;\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as postionActions from './reducer/positionActions'\r\nconst ReadPosition = ({positionId}) => {\r\n    debugger\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { data:{\r\n        Description,\r\n        Salary,\r\n        Objective\r\n    }} = positionReducer;\r\n    useEffect(() => {\r\n        dispatch(postionActions.positionMethods({Id: positionId},'GetPosition'))\r\n        return () => {\r\n            dispatch(postionActions.positionCleanState());\r\n        }\r\n    }, [dispatch, positionId])\r\n    let arrayDeCadenas = Description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n    return (\r\n        <div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Objetivo:</div>\r\n                <div className={'text-muted'}>{Objective}</div>\r\n            </div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Responsabilidades:</div>\r\n                <ul>\r\n                    {arrayDeCadenas.map(item => {\r\n                        return (\r\n                                <li className='text-muted'>{item}</li>\r\n                            )\r\n                        }    \r\n                    )}\r\n                </ul>\r\n            </div>\r\n            <div className='mb-4'>\r\n                <div className={'text-dark'}>Puntos:</div>\r\n                <div className={'text-muted'}>{Salary ? Salary: 0}</div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPosition;","import React, { useState } from 'react';\r\nimport { \r\n  Collapse, \r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card, \r\n  CardBody \r\n} from 'reactstrap';\r\nimport {ReadPosition} from '../components-position'\r\n\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Modals = ({positionId, children, modalTitle, name}) => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <>\r\n      <span role=\"button\" onClick={toggle}>{children}</span>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n          <h3>{name}</h3> \r\n          <ReadPosition positionId={positionId} />\r\n        </ModalBody>\r\n        {/* <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{' '}\r\n          <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n        </ModalFooter> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst CollapseSection = ({\r\n  title = 'Sección',\r\n  countVideos = '0',\r\n  videos = [],\r\n  time = '30 min'\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n        <div onClick={toggle} className=\"d-flex bg-light border-bottom pointer p-3\">\r\n            <div className=\"flex-grow-1\">\r\n                <p className=\"font-weight-bold mb-0\">{title}</p>\r\n                <small>{countVideos} | {time}</small>\r\n            </div>\r\n            <div>\r\n                <FaIcons.FaChevronDown />\r\n            </div>\r\n        </div>\r\n      <Collapse isOpen={isOpen} className=\"p-3\">\r\n        {\r\n          videos.map((video, i ) => {\r\n            return (\r\n              <div className=\"d-flex mb-3\">\r\n                  {/*   <div className=\"mr-3\">\r\n                      <input type=\"checkbox\" class=\"\" id=\"\" />\r\n                  </div> */}\r\n                  <div>\r\n                      <p className=\"mb-0\">{`${i+1}. ${video.Name}`}</p>\r\n                      <small className=\"text-muted\"><FaIcons.FaPlayCircle className=\"mr-2\" /> 5 min</small>\r\n                  </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollapseSection;\r\n\r\n\r\n\r\nexport const Node = ({children, area, labelButton, employee, addChild, updateNode,deleteChild, positionId, name}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const rArea = area ? area : '';\r\n  return (\r\n    <div>\r\n      <Card className='card-left mb-2'>\r\n        <CardBody>\r\n          <div className={'mr-5'}>\r\n            <small>\r\n            {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n            </small>\r\n            <div className='d-flex my-2'>\r\n            \t<div></div>\r\n            \t<div onClick={toggle} className='font-weight-bold  mb-2 pointer mr-5' style={{textAlign: 'start'}}>\r\n            \t  {!isOpen ? <FaIcons.FaChevronCircleRight  className=\"mr-1  text-muted\" /> : <FaIcons.FaChevronCircleDown className=\"mr-1 text-primary\" /> }{labelButton}\r\n            \t</div>\r\n              <div className='text-dark text-start mr-5' style={{textAlign: 'start'}}>\r\n                {employee ? `${employee.Name} ${employee.LastName} ` :'Empleado'}\r\n              </div> \r\n              <div className='mr-2'>\r\n                  <Modals positionId={positionId} modalTitle={name} name={name} >\r\n                      <FaIcons.FaEye  className=\"text-secondary\" />\r\n                  </Modals>\r\n              </div>\r\n              <div className='mr-2'>\r\n                  <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n              </div>\r\n              <div className='mr-2'>\r\n                  <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n              </div>\r\n              <div className='mr-2'>\r\n                  {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n              </div>\r\n                \r\n            </div>\r\n            <Collapse isOpen={isOpen}>\r\n              \r\n                {children}\r\n               \r\n            </Collapse>\r\n          </div>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const A = ({\r\n    href='', \r\n    target='_blank', \r\n    className='',\r\n    children\r\n}) => {\r\n    return (\r\n        <a href={href} target={target} className={className}>{children} </a>\r\n    )\r\n}\r\n\r\nexport const AWhatsapp = ({phone, message,  target='_blank', children, className}) => {\r\n    return(\r\n        <A\r\n            href={`https://api.whatsapp.com/send?phone=${phone}&text=${message}`}\r\n            target={target}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </A>\r\n    )\r\n}","import * as ComponentCards from './Cards'\r\nimport * as ComponentDropDowns from './DropDowns'\r\nimport * as ComponentFilter from './Filter'\r\nimport * as ComponentInputs from './Inputs'\r\nimport * as ComponentModals from './Modals'\r\nimport * as ComponentNavbars from './Navbars'\r\nimport * as ComponentNotFound from './NotFound'\r\nimport * as ComponentRegularExpressions from './RegularExpressions'\r\nimport * as ComponentTabs from './Tabs'\r\nimport * as ComponentLogos from './Logos'\r\nimport * as ComponentLists from './Lists'\r\nimport * as ComponentCollapse from './Collapse'\r\nimport {A as Anchor, AWhatsapp as AnchorWhatsapp} from './ExternalLinks'\r\n\r\nexport const Logos = ComponentLogos;\r\nexport const Cards = ComponentCards;\r\nexport const DropDowns = ComponentDropDowns;\r\nexport const Filter = ComponentFilter;\r\nexport const Inputs = ComponentInputs;\r\nexport const Modals = ComponentModals;\r\nexport const Navbars = ComponentNavbars;\r\nexport const NotFound = ComponentNotFound;\r\nexport const Lists = ComponentLists;\r\nexport const RegularExpressions = ComponentRegularExpressions;\r\nexport const Tabs = ComponentTabs;\r\nexport const Collapse = ComponentCollapse\r\nexport const A = Anchor;\r\nexport const AWhatsapp = AnchorWhatsapp;\r\n","export default __webpack_public_path__ + \"static/media/hero-xs.fab06da0.png\";","export default __webpack_public_path__ + \"static/media/vscode.a1907119.svg\";","// Imports de react.\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, } from 'reactstrap';\r\n\r\n// Imports de config-components.\r\nimport {Navbars} from '../../config-components/Navbars'\r\n\r\nimport { A, AWhatsapp } from '../../config-components'\r\n// } from 'components-links'\r\n\r\n// Imports de assets.\r\nimport Heroxs from '../../img/hero-xs.png'\r\nimport { ImgOrganigrama, ImgPuestos, ImgDescripciones, ImgProcesos} from '../../img'\r\nimport WebApps from '../../img/vscode.svg'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div>\r\n        <Navbars />\r\n        <section id=\"hero\" className=\"bg-light d-flex py-6\">\r\n            <Container className=\"align-self-center\">\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        \r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <h1 className=\"display-4 font-weight-bold mb-3\">Somos expertos en Organización de empresas</h1>\r\n                        <p className=\"text-muted mb-4\">Creamos la Organización en tu empresa con las mejores herramientas tecnologicas, tenemos más de 40 años de experiencia</p>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <img src={Heroxs} className=\"img-fluid d-block d-md-none mt-5\" />\r\n            </Container>\r\n        </section>\r\n\r\n        <section className='bg-light-2'>\r\n            <Container>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgOrganigrama className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Organigrama<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Una buena implementación de la Organización es conocer en detalle los roles que ejercen tus colaboradores.</p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Puestos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos los puestos de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgPuestos src={WebApps} className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgDescripciones className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Perfiles<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Define claramente tus procesos y logra sitematizarlos</p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Procesos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos los puestos de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgProcesos className=\"img-fluid rounded my-4\" />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>  \r\n         \r\n        {/* <section className=\"py-6\">\r\n            <Container>\r\n                <div className=\"tab-container bg-light py-4 px-5\">\r\n                    <Example />\r\n                </div>\r\n            </Container>\r\n        </section>    */}\r\n       \r\n        <section className=\"py-7\">\r\n            <Container>\r\n                <div className=\"w-75 mx-auto text-center mb-5\">\r\n                    <p className=\"lead text-muted\">Dedícate a producir y vender, mientras nosotros organizamos tu empresa.</p>\r\n                    <button className=\"btn btn-primary\">\r\n                        <AWhatsapp \r\n                            phone='+525533333279' \r\n                            message={`Hola, Quiero más información`} \r\n                            className=\"text-white\"\r\n                        >Contáctanos </AWhatsapp>\r\n                    </button>\r\n                    \r\n                </div>\r\n            </Container>\r\n        </section>\r\n        <footer className=\"py-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"list-inline-item mr-5\"><Link class=\"text-dark\" ><FaIcons.FaLinkedin className=\"text-dark mr-1\" /> Linkedin</Link></li>\r\n                            \r\n                        </ul>\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"text-right\">\r\n                        <p>© Version 4 2020. Derechos Reservados.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {  Card, CardBody, Badge  } from 'reactstrap';\r\n// Imports de assets.\r\nimport {ImgProduct} from '../img'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ReadCardProduct = ({uri, name='', description='', categories}) => {\r\n    return(\r\n        <Card className=\"border-0 mb-4\">\r\n            <CardBody>\r\n                <ImgProduct uri={uri} className=\"img-fluid rounded mb-3\"/>\r\n                <div className=\"mb-3\">\r\n                    {categories?.length > 0 ? \r\n                        categories.map(category => {\r\n                            return <Badge color=\"light\" className=\"mr-2\">{category.Name}</Badge>\r\n                        })  : ''  \r\n                    }\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"icon-card d-flex bg-light align-self-center mr-3\">\r\n                        <FaIcons.FaShoppingCart className=\"align-self-center mx-auto\" />\r\n                    </div>\r\n                    <div>\r\n                        <h5>{name}</h5>\r\n                        <h6>{description}</h6>\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReadCardProduct;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_CARGANDO = \"product_cargando\";\r\nexport const PRODUCT_ERROR = \"product_error\";\r\nexport const PRODUCT_HANDLE_CHANGE = \"product_handle_change\";\r\nexport const PRODUCT_CLEAN_STATE = \"product_clean_state\";\r\nexport const PRODUCT_CRUD = \"product_crud\";\r\nexport const PRODUCTS_LIST = \"products_list\";\r\nexport const PRODUCT_HANDLE_VALIDATION = \"product_handle_validation\";\r\n\r\n\r\nexport const GetProducts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Products`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProductsByCategoryId = async(data)=> {\r\n    debugger\r\n    const  answer = await axios_api(\r\n        `api/ProductsByCategoryId?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const PutProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}${data.includeBlobs ? ``:``}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_put'};\r\n}\r\n\r\nexport const PostProduct = async(data)=> {\r\n    const  answer = await axios_api(\"api/Product\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const DeleteProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\n\r\n","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_HANDLE_VALIDATION, \r\n    GetProducts,\r\n    GetProductsByCategoryId,\r\n    GetProduct,\r\n    PutProduct,\r\n    PostProduct,\r\n    DeleteProduct\r\n  } from \"./productTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProducts\":\r\n          answer = await GetProducts(); \r\n          break;\r\n\r\n        case 'GetProductsByCategoryId':\r\n          answer = await GetProductsByCategoryId(data); \r\n          break\r\n\r\n        case \"GetProduct\":\r\n          answer = await GetProduct(data);\r\n          break;\r\n\r\n        case \"PutProduct\":\r\n          answer = await PutProduct(data);\r\n          break;\r\n\r\n        case \"PostProduct\":\r\n          answer = await PostProduct(data);\r\n          break;\r\n        \r\n        case \"DeleteProduct\":\r\n          answer = await DeleteProduct(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\n\r\n\r\nconst CardProduct = () => {\r\n    const { productId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n\r\n    const { data:{\r\n        Id,\r\n        Name,\r\n        Description,\r\n        Blobs,\r\n        fileCover,\r\n        Categories\r\n    } } = productReducer;\r\n\r\n    useEffect(() => {\r\n        productId && dispatch(productActions.productMethods({Id: productId}, 'GetProduct'))\r\n    }, [dispatch, productId, Id])\r\n\r\n    const blobProduct = Blobs.filter(el => el.BlobTypeId === 2 )\r\n    return (\r\n        <>\r\n            <ReadCardProduct uri={fileCover ? URL.createObjectURL(fileCover[0]) : blobProduct[0]?.Uri} name={Name} description={Description} categories={Categories}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardProduct;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Col} from 'reactstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\nconst ListOfCardProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n    const { list_products } = productReducer;\r\n    useEffect(() => {\r\n        list_products.length < 1 && dispatch(productActions.productMethods('', 'GetProducts'))\r\n    }, [dispatch, list_products ])\r\n    return (\r\n        <>\r\n            {\r\n                list_products.map(product => {\r\n                    const blobProduct = product.Blobs.filter(el => el.BlobTypeId === 1 )\r\n                    return (\r\n                        <Col lg='4'>\r\n                            <ReadCardProduct uri={blobProduct[0]?.Uri} name={product.Name} description={product.Description} />\r\n                        </Col>\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCardProducts;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\nimport { Modals} from '../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de actions.\r\nimport * as productActions from './reducer/productActions'\r\nconst ListOfCategories = ({title = 'Productos',reDirect, categoryProductId}) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const productReducer = useSelector(state => state.productReducer)\r\n\r\n    const {\r\n        data: {\r\n            Id,\r\n            Name\r\n        },\r\n        api_actions: {cargando, error},\r\n        list_products\r\n    } = productReducer;\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(categoryProductId) {\r\n            dispatch(productActions.productMethods({Id: categoryProductId},'GetProductsByCategoryId'))\r\n        } else {\r\n            dispatch(productActions.productMethods('','GetProducts'))\r\n        }\r\n    }, [dispatch, categoryProductId])\r\n\r\n    const getProduct = (idProduct) => {\r\n        history.push(`${reDirect}/${idProduct}`)\r\n    }\r\n\r\n    const openDeleteModal = async(idProduct) => {\r\n        await dispatch(productActions.productMethods({Id: idProduct},'GetProduct'));\r\n    }\r\n\r\n    const deleteProduct = async() => {\r\n        await dispatch(productActions.productMethods({Id},'DeleteProduct'));\r\n        dispatch(productActions.productCleanState());\r\n        await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    const cleanProduct = async(cancel) => {\r\n        await dispatch(productActions.productCleanState());\r\n        !cancel && await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n        <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n        <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{title}</small></li>\r\n    </ul>\r\n            {Id \r\n                ?  <Modals.ModalOpenDelete \r\n                        content={`Se eliminara el siguiente producto: \"${Name}\" con Id: #${Id}`}\r\n                        modalTitle={`Eliminar Producto ${Name}`}\r\n                        action={deleteProduct}\r\n                        clean={cleanProduct}\r\n                    />\r\n                : ''\r\n            }\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Nombre','Descripción','Acciones']}\r\n                propertiesTable={['Id','Name','Description']}\r\n                hrefCreate={'/admin-dashboard/create-product'}\r\n                bodyTable={list_products}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Producto', handleAction: getProduct },\r\n                    {action: 'Eliminar Producto', handleAction: openDeleteModal }\r\n                ]}\r\n            />\r\n        </>\r\n    )   \r\n}\r\n\r\nexport default ListOfCategories;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const CATEGORY_CARGANDO = \"category_cargando\";\r\nexport const CATEGORY_ERROR = \"category_error\";\r\nexport const CATEGORY_HANDLE_CHANGE = \"category_handle_change\";\r\nexport const CATEGORY_CLEAN_STATE = \"category_clean_state\";\r\nexport const CATEGORY_CRUD = \"category_crud\";\r\nexport const CATEGORIES_LIST = \"categories_list\";\r\nexport const CATEGORY_HANDLE_VALIDATION = \"category_handle_validation\";\r\n\r\nexport const GetCategories = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Categories`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: CATEGORIES_LIST};\r\n}\r\n\r\nexport const GetCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const PutCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'put_category'};\r\n}\r\n\r\nexport const PostCategory = async(data)=> {\r\n    const answer = await axios_api(\"api/Category\", true, \"post\", data);\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const DeleteCategory = async(data)=> {\r\n    const answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_HANDLE_VALIDATION,\r\n    GetCategories,\r\n    GetCategory,\r\n    PutCategory,\r\n    PostCategory,\r\n    DeleteCategory,\r\n  } from \"./categoryTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCategories\":\r\n          answer = await GetCategories();\r\n          break;\r\n\r\n        case \"GetCategory\":\r\n          answer = await GetCategory(data);\r\n          break;\r\n\r\n        case \"PutCategory\":\r\n          answer = await PutCategory(data);\r\n          break;\r\n\r\n        case \"PostCategory\":\r\n          answer = await PostCategory(data);\r\n          break;\r\n        \r\n        case \"DeleteCategory\":\r\n          answer = await DeleteCategory(data)\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import ComponentCardProduct from './CardProduct'\r\nimport ComponentListOfCardProducts from './ListOfCardProducts'\r\nimport ComponentListOfProducts from './ListOfProducts'\r\nimport ComponentAddCategories from './AddCategories'\r\n\r\nexport const CardProduct = ComponentCardProduct;\r\nexport const ListOfCardProducts = ComponentListOfCardProducts;\r\nexport const ListOfProducts = ComponentListOfProducts;\r\nexport const AddCategories = ComponentAddCategories;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {Container, Row} from 'reactstrap'\r\nimport {Navbars} from '../../config-components' \r\nimport {ListOfCardProducts} from '../../components-product'\r\n\r\nconst LandingProducts = () => {\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <section className=\"bg-light py-6\">\r\n                <Container>\r\n                    <Row>\r\n                    <ListOfCardProducts />\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingProducts;\r\n","import LandingSoftwareAgency from './SoftwareAgency'\r\nimport LandingProducts from './Products'\r\nimport LandingCourses from './Courses'\r\n\r\nexport const SoftwareAgency = LandingSoftwareAgency;\r\nexport const Products = LandingProducts;\r\nexport const Courses = LandingCourses;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { Container } from 'reactstrap'\r\n\r\n// Imports de config-components\r\nimport {NotFound} from '../config-components/NotFound'\r\nimport {Navbars} from '../config-components/Navbars'\r\n\r\n\r\nexport const NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <Navbars />\r\n            <div className=\"bg-light py-6\">\r\n                <Container>\r\n                    <NotFound />\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","export const LOGIN_CARGANDO = \"login_cargando\";\r\nexport const LOGIN_ERROR = \"login_error\";\r\nexport const LOGIN_HANDLE_CHANGE = \"login_handle_change\";\r\nexport const LOGIN_CLEAN_STATE = \"login_clean_state\";\r\nexport const LOGIN_USER = \"login_user\";\r\nexport const LOGIN_HANDLE_VALIDATION = \"login_handle_validation\";\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION,\r\n} from \"./loginTypes\";\r\n\r\nimport {\r\n  axios_api,\r\n  errorHandler,\r\n  setLocalStorage,\r\n} from \"../../components-api/ConfigApi\";\r\n\r\n/*\r\n *Metodo para serializar un objeto\r\n */\r\nconst parserJson = (obj) => {\r\n  var jsonSerialize = \"\";\r\n  for (const prop in obj) {\r\n    jsonSerialize += prop + \"=\" + obj[prop] + \"&\";\r\n  }\r\n  jsonSerialize = jsonSerialize.slice(0, -1);\r\n  return jsonSerialize;\r\n};\r\n\r\nexport const loginHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const loginHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const loginCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const loginMethods = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CARGANDO,\r\n  });\r\n  try {\r\n    setLocalStorage();\r\n    const object = parserJson(data);\r\n    const answer = await axios_api(\"Token\", false, \"post\", object);\r\n    setLocalStorage(answer);\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    \r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: LOGIN_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const COMPANY_CARGANDO = \"company_cargando\";\r\nexport const COMPANY_ERROR = \"company_error\";\r\nexport const COMPANY_HANDLE_CHANGE = \"company_handle_change\";\r\nexport const COMPANY_CLEAN_STATE = \"company_clean_state\";\r\nexport const COMPANY_CRUD = \"company_crud\";\r\nexport const COMPANIES_LIST = \"companies_list\";\r\nexport const COMPANY_HANDLE_VALIDATION = \"company_handle_validation\";\r\n\r\nexport const GetCompanies = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Companies`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\nexport const GetCompaniesByUser = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/CompaniesByUser`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\n\r\nexport const GetCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const PutCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'company_put'};\r\n}\r\n\r\nexport const PostCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const DeleteCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_HANDLE_VALIDATION, \r\n    GetCompanies,\r\n    GetCompany,\r\n    PutCompany,\r\n    PostCompany,\r\n    DeleteCompany,\r\n    GetCompaniesByUser\r\n  } from \"./companyTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const companyHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const companyHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const companyCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const companyMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCompanies\":\r\n          answer = await GetCompanies(); \r\n          break;\r\n        case \"GetCompaniesByUser\":\r\n          answer = await GetCompaniesByUser(); \r\n          break;\r\n\r\n        case \"GetCompany\":\r\n          answer = await GetCompany(data);\r\n          break;\r\n\r\n        case \"PutCompany\":\r\n          answer = await PutCompany(data);\r\n          break;\r\n\r\n        case \"PostCompany\":\r\n          answer = await PostCompany(data);\r\n          break;\r\n        \r\n        case \"DeleteCompany\":\r\n          answer = await DeleteCompany(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport { RE_EMPTY } from \"../config-components/RegularExpressions\";\r\nimport {InputEmail, InputPassword, Form1} from '../config-components/Inputs'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as loginActions from \"./reducer-login/loginActions\";\r\nimport * as companyActions from \"../components-company/reducer/companyActions\";\r\nclass LoginForm extends Component {\r\n  ActionLogin = async () => {\r\n    const {\r\n      loginMethods,\r\n      companyMethods,\r\n      loginReducer: {\r\n        data: { grant_type, username, password },\r\n      },\r\n    } = this.props;\r\n    const ModelLogin = {\r\n      grant_type: grant_type,\r\n      username: username,\r\n      password: password,\r\n    };\r\n    await loginMethods(ModelLogin);\r\n    if (this.props.loginReducer.data.access_token) {\r\n      if (localStorage.getItem(\"role\") === \"Admin\") {\r\n        window.open(`/admin-dashboard`, \"_self\");\r\n      }\r\n      if (localStorage.getItem(\"role\") === \"User\") {\r\n        await companyMethods('', 'GetCompaniesByUser')\r\n        const { list_companies} = this.props.companyReducer;\r\n        debugger\r\n        window.open(`/user-dashboard/company/${list_companies[0].Id}`, \"_self\");\r\n      }\r\n      if (!localStorage.getItem(\"role\")) {\r\n        window.open(`/`, \"_self\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRedirect = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/sign-up\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loginHandleValidation,\r\n      loginHandleChange,\r\n      loginReducer: {\r\n        data: { username, password },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Form1\r\n          loading={cargando}\r\n          error={error}\r\n          action={this.ActionLogin}\r\n          textButton={'Iniciar Sesión'}\r\n          textButtonLoading={'Iniciando sesión...'}\r\n          validations={validations}\r\n          handleValidations={loginHandleValidation}\r\n        >\r\n          <InputEmail  \r\n            name='username'\r\n            inputValue={username}\r\n            onChange={loginHandleChange} \r\n            label='Nombre de usuario o correo'\r\n            RE={RE_EMPTY}\r\n            validateRE={validations.username}\r\n          />\r\n          <InputPassword\r\n            inputValue={password}\r\n            onChange={loginHandleChange}\r\n            validateRE={validations.password}\r\n            forgotPassword={true}\r\n          />\r\n        </Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ loginReducer, companyReducer }) => {\r\n  return { loginReducer, companyReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...loginActions,\r\n  ...companyActions\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","export const SIGN_UP_CARGANDO = \"sign_up_cargando\";\r\nexport const SIGN_UP_ERROR = \"sign_up_error\";\r\nexport const SIGN_UP_HANDLE_CHANGE = \"sign_up_handle_change\";\r\nexport const SIGN_UP_CLEAN_STATE = \"sign_up_clean_state\";\r\nexport const SIGN_UP_USER = \"sign_up_user\";\r\nexport const SIGN_UP_HANDLE_VALIDATION = \"sign_up_handle_validation\";\r\nexport const SIGN_UP_PRELOADED_DATA = \"sign_up_preloaded_data\";\r\n\r\n\r\n","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const signUpHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const signUpHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const signUpCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const signUpPreloadedData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_PRELOADED_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n\r\n\r\nexport const signUpMethods = (data, token) => async (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CARGANDO,\r\n  });\r\n  try {\r\n    const answer = await axios_api(\"api/Account/Register\", token, \"post\", data);\r\n    dispatch({\r\n      type: SIGN_UP_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: SIGN_UP_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../config-components';\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as signUpActions from \"./sign-up-reducer/signUpActions\";\r\n\r\nclass SignUp extends Component {\r\n  componentDidMount() {\r\n    this.props.signUpReducer.data.Roles = this.props.role;\r\n  }\r\n  action = async () => {\r\n    const {\r\n      signUpMethods,\r\n      signUpCleanState,\r\n      signUpReducer: {\r\n        data: {\r\n          UserName,\r\n          Email,\r\n          PhoneNumber,\r\n          Password,\r\n          ConfirmPassword,\r\n          ValidateByPhoneOrEmail,\r\n          Roles,\r\n          TypeUser\r\n        },\r\n      },\r\n      role,\r\n      reDirect,\r\n      history,\r\n      token\r\n    } = this.props;\r\n\r\n    const ModelSignUp = {\r\n      UserName: UserName,\r\n      Email: Email,\r\n      PhoneNumber: PhoneNumber,\r\n      Password: Password,\r\n      ConfirmPassword: ConfirmPassword,\r\n      ValidateByPhoneOrEmail: ValidateByPhoneOrEmail,\r\n      Roles: Roles,\r\n      TypeUser: TypeUser\r\n    };\r\n\r\n    await signUpMethods(ModelSignUp, token);\r\n   \r\n    if (this.props.signUpReducer.data.Id) {\r\n        role === 'User' \r\n        ? history.push(`${reDirect}/${this.props.signUpReducer.data.Id}`)\r\n        : history.push(reDirect) \r\n        signUpCleanState();\r\n           \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      signUpHandleChange,\r\n      signUpHandleValidation,\r\n      signUpReducer: {\r\n        data: { UserName, Email, Password, ConfirmPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      }\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${Password}$`)\r\n    return (\r\n       <>\r\n            <Inputs.Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.action}\r\n                textButton={'Registrar'}\r\n                textButtonLoading={'Registrando ...'}\r\n                validations={validations}\r\n                handleValidations={signUpHandleValidation}\r\n            >\r\n                <Inputs.InputEmail \r\n                    inputValue={Email}\r\n                    onChange={signUpHandleChange} \r\n                    validateRE={validations.Email}\r\n                />\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre de usuario'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'UserName'}\r\n                    placeHolder={'Introduce un nombre de usuario'}\r\n                    inputValue={UserName}\r\n                    onChange={signUpHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.UserName}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={Password}\r\n                    onChange={signUpHandleChange}\r\n                    validateRE={validations.Password}\r\n                    inputName={'Password'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmPassword}\r\n                    onChange={signUpHandleChange}\r\n                    inputName={'ConfirmPassword'}\r\n                    validateRE={validations.ConfirmPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ signUpReducer }) => {\r\n  return { signUpReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...signUpActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import { axios_api } from \"../../../components-api/ConfigApi\";\r\n\r\nexport const CHANGE_PASSWORD_CARGANDO = \"change_password_cargando\";\r\nexport const CHANGE_PASSWORD_ERROR = \"change_password_error\";\r\nexport const CHANGE_PASSWORD_HANDLE_CHANGE = \"change_password_handle_change\";\r\nexport const CHANGE_PASSWORD_CLEAN_STATE = \"change_password_clean_state\";\r\nexport const CHANGE_PASSWORD_USER = \"change_password_user\";\r\nexport const CHANGE_PASSWORD_HANDLE_VALIDATION = \"change_password_handle_validation\";\r\n\r\nexport const SetPassword = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/SetPassword`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type:'set_password_put'};\r\n}\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n    SetPassword\r\n  } from \"./changePasswordTypes\";\r\n  \r\n  import {\r\n    axios_api,\r\n    errorHandler,\r\n  } from \"../../../components-api/ConfigApi\";\r\n   \r\n  export const changePasswordHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const changePasswordHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CARGANDO,\r\n    });\r\n    try {\r\n      \r\n      let answer;\r\n      let type = CHANGE_PASSWORD_USER;\r\n      switch(method){\r\n        case 'send_email_code':\r\n            let route = `api/Account/SendVerificationCode?phoneOrEmail=${data.phoneOrEmail}&usernameOrEmailOrPhoneNumber=${data.phoneOrEmail}`\r\n            answer= await axios_api( route, false, \"get\");\r\n            break;\r\n        case 'change_password':\r\n            answer= await axios_api( `/api/Account/ResetPassword`, false, \"post\", data);\r\n            break;\r\n        case 'SetPassword' :\r\n            answer= await SetPassword(data)\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n      \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePassword extends Component {\r\n  action = async () => {\r\n    \r\n    const {\r\n      changePasswordMethods, \r\n      changePasswordReducer: { \r\n        data: {\r\n          NewPassword,\r\n          ConfirmNewPassword,\r\n        }\r\n      },\r\n      code,\r\n      email,\r\n      history,\r\n      reDirect\r\n      } = this.props;\r\n\r\n    const modelChangePassword = {\r\n      phoneOrEmail: email,\r\n      Code: code,\r\n      NewPassword: NewPassword,\r\n      ConfirmNewPassword: ConfirmNewPassword,\r\n      usernameOrEmailOrPhoneNumber: email\r\n    }\r\n    await changePasswordMethods(modelChangePassword, 'change_password')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { Code,\r\n          NewPassword,\r\n          ConfirmNewPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n      code\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.action}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Código'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce tu código'}\r\n                    inputValue={code ? code : Code}\r\n                    onChange={changePasswordHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.Code}\r\n                    readonly\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePasswordForUser extends Component {\r\n  actionChangePasswordForUser = async () => {\r\n    const { changePasswordMethods, userId, changePasswordReducer: {data:{ NewPassword,  ConfirmNewPassword}} } = this.props;\r\n    await changePasswordMethods({NewPassword,  ConfirmPassword: ConfirmNewPassword, UserId: userId},'SetPassword');\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: {\r\n            NewPassword,\r\n            ConfirmNewPassword },\r\n            validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.actionChangePasswordForUser}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    textLabel = 'Repite la contraseña'\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordForUser);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass SendEmail extends Component {\r\n  action = async () => {\r\n    const {changePasswordMethods,\r\n        history,\r\n        reDirect\r\n      } = this.props;\r\n     let email =  this.props.changePasswordReducer.data.phoneOrEmail;\r\n    await changePasswordMethods({phoneOrEmail: email}, 'send_email_code')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { phoneOrEmail },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Inputs.Form1\r\n           loading={cargando}\r\n           error={error}\r\n           action={this.action}\r\n           textButton={'Continuar'}\r\n           textButtonLoading={'Enviando Email...'}\r\n           validations={validations}\r\n           handleValidations={changePasswordHandleValidation}\r\n        >\r\n          <Inputs.InputEmail  \r\n            name='phoneOrEmail'\r\n            inputValue={phoneOrEmail}\r\n            onChange={changePasswordHandleChange} \r\n            label='Correo'\r\n            RE={RegularExpressions.RE_EMAIL}\r\n            validateRE={validations.phoneOrEmail}\r\n          />\r\n        </Inputs.Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SendEmail);\r\n","import ComponentLogin from './Login'\r\nimport ComponentSignUp from './SignUp'\r\nimport ComponentChangePassword from './change-password/ChangePassword'\r\nimport ComponentChangePasswordForUser from './change-password/ChangePasswordForUser'\r\nimport ComponentVerifyAccount from './change-password/VerifyAccount'\r\nimport ComponentSendEmail from './change-password/SendEmail'\r\n\r\nexport const Login = ComponentLogin;\r\nexport const SignUp = ComponentSignUp;\r\nexport const ChangePassword = ComponentChangePassword;\r\nexport const VerifyAccount = ComponentVerifyAccount;\r\nexport const SendEmail = ComponentSendEmail;\r\nexport const ChangePasswordForUser = ComponentChangePasswordForUser;\r\n","// Imports de react.\r\nimport React from 'react';\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Container, \r\n    Card, \r\n    CardBody,\r\n} from 'reactstrap';\r\nimport {Logos, Navbars} from '../../config-components'\r\n\r\n\r\n\r\n// Imports de sessión components\r\nimport {Login, SendEmail, ChangePassword, SignUp} from '../../components-session'\r\n\r\nconst LayoutSection = ({children, message='',classSection='', classContainer='', classLogo= '', classCard='', classCardBody = ''}) =>{\r\n    return (\r\n        <section className={classSection}>\r\n            <Container className={ classContainer}>\r\n                <Card className={classCard}>\r\n                    <CardBody className={classCardBody}>\r\n                        {children} \r\n                        {message}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        {/* <h4 className=\"font-weight-bold mb-4\">Iniciar sesión</h4>      */}\r\n                        <Login />   \r\n                        {/* <p className=\"text-center mb-0\">¿No tienes una cuenta? <Link to='/sign-up'>Crea una cuenta</Link></p> */}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ForgotPassword = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-0\">Restablecer contraseña</h4>     \r\n                        <p className=\"text-muted\">Ingresa el email que tienes registrado</p>\r\n                        <SendEmail\r\n                            history={history}\r\n                            reDirect='/check-your-account'\r\n                        />   \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const CheckYourAccount = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Revisa tu correo</h4>     \r\n                        <p className=\"text-muted\">Te hemos enviado código a tu email, si no \r\n                            lo ves en tu bandeja de entrada, revisa en spam y correos no deseados.</p> \r\n                        <Link to=\"/login\"  className=\"btn btn-primary w-100\">Iniciar sesión</Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ChangePasswordPage = () => {\r\n    const {code, email} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Restablecer Contraseña</h4>    \r\n                        <p className=\"text-muted mb-4\">Ingresa el email que tienes registrado</p>\r\n                        <ChangePassword reDirect='/login' code={code} email={email} history={history}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const SignUpPage = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <LayoutSection\r\n                classSection='bg-light h-100 py-6 mt-5'\r\n                classCard='mx-auto card-form border-0'\r\n                message={\r\n                    <p className=\"text-center mb-0\">¿Ya tienes una cuenta? <Link to='/login'>Inicia Sesión</Link></p>\r\n                }\r\n            >\r\n                <h4 className=\"font-weight-bold mb-4\">Registrate</h4>     \r\n                <SignUp history={history} role='User' reDirect={'/check-your-account'} />\r\n            </LayoutSection>      \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export const ANALYTICS_CARGANDO = \"analytics_cargando\";\r\nexport const ANALYTICS_ERROR = \"analytics_error\";\r\nexport const ANALYTICS_CLEAN_STATE = \"analytics_clean_state\";\r\nexport const ANALYTICS_COUNT_PRODUCTS = \"analytics_count_companiesxxx\";\r\nexport const ANALYTICS_COUNT_COURSES = \"analytics_count_courses\";\r\nexport const ANALYTICS_COUNT_USERS = \"analytics_count_users\";\r\nexport const ANALYTICS_COUNT_ADMINS = \"analytics_count_admins\";\r\nexport const ANALYTICS_COUNT_COMPANIES = \"analytics_count_companies\";\r\nexport const ANALYTICS_COUNT_POSITIONS = \"analytics_count_positions\";\r\nexport const ANALYTICS_COUNT_PERSONAL_DETAILS = \"analytics_count_personal_details\";\r\nexport const ANALYTICS_COUNT_AREAS = \"analytics_count_areas\";\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const analyticsCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const analyticsMethods = (method, data='') => async (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type;\r\n      switch (method) {\r\n        case \"count_products\":\r\n            answer = await axios_api(`api/CountProducts`, true, \"get\");\r\n            type = ANALYTICS_COUNT_PRODUCTS;\r\n            break;\r\n        case \"count_courses\":\r\n          answer = await axios_api(`api/CountProductsByCategoryId?id=${data.Id}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COURSES;\r\n          break;\r\n        case \"count_users\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=User&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_USERS;\r\n          break;\r\n        case \"count_admins\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=Admin&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_ADMINS;\r\n          break;\r\n        case \"count_companies\":\r\n          answer = await axios_api(`api/CountCompanies`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COMPANIES;\r\n          break;\r\n        case \"count_positions\":\r\n          answer = await axios_api(`api/CountPositions?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_POSITIONS;\r\n          break;\r\n        case \"count_personal_details\":\r\n          answer = await axios_api(`api/CountPersonalDetails?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_PERSONAL_DETAILS;\r\n          break;\r\n        case \"count_areas\":\r\n          answer = await axios_api(`api/CountAreas?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_AREAS;\r\n          break;\r\n        default:\r\n            break\r\n  \r\n          \r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ANALYTICS_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods} = this.props;\r\n        await analyticsMethods('count_courses', {Id:6})\r\n        await analyticsMethods('count_users')\r\n        await analyticsMethods('count_admins')\r\n        await analyticsMethods('count_companies')\r\n    }\r\n    render(){\r\n        const {\r\n           \r\n            count_companies,\r\n            count_users,\r\n            count_admins,\r\n            api_actions:{\r\n                cargando,\r\n            }\r\n        } = this.props.analyticsReducer;\r\n        const cardAnalytics = [\r\n            {\r\n                id: '4-a',\r\n                title: 'Admins',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_admins,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/admins'\r\n            },\r\n            {\r\n                id: '2-a',\r\n                title: 'Usuarios',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_users,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/users'\r\n            },\r\n            {\r\n                id: '1-a',\r\n                title: 'Empresas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_companies,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: '/admin-dashboard/companies'\r\n            },       \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer}) => {\r\n    return {analyticsReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ADMIN_CARGANDO = \"admin_cargando\";\r\nexport const ADMIN_ERROR = \"admin_error\";\r\nexport const ADMIN_HANDLE_CHANGE = \"admin_handle_change\";\r\nexport const ADMIN_CLEAN_STATE = \"admin_clean_state\";\r\nexport const ADMIN_CRUD = \"admin_crud\";\r\nexport const ADMIN_HANDLE_VALIDATION = \"admin_handle_validation\";\r\nexport const ADMIN_USERS_LIST = \"admins_list\";\r\n\r\nexport const GetUserInfo = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Account/UserInfo?userId=${data.userId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n\r\nexport const GetUsersInfo = async(data) =>{\r\n    const answer = await axios_api(\r\n        `api/Account/UsersInfo?roleName=${data.roleName}`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type:ADMIN_USERS_LIST};\r\n}\r\n\r\nexport const PutContactInfo = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/PutContactInfo`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type:'contact_info_put'};\r\n}\r\n\r\nexport const ValidateAccount = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/ValidateAccount`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    GetUserInfo,\r\n    PutContactInfo,\r\n    GetUsersInfo,\r\n    ValidateAccount\r\n  } from \"./adminTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const adminHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const adminHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const adminCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const adminMethods = (data, method, loading = 'cargando', typeError = 'error') => async (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CARGANDO,\r\n      payload: loading //? {cargando: loading} : {cargando: 'cargando'}\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetUserInfo\":\r\n            answer = await GetUserInfo(data);\r\n            break;\r\n        case \"GetUsersInfo\":\r\n            answer = await GetUsersInfo(data);\r\n            break;\r\n        case \"PutContactInfo\":\r\n            answer = await PutContactInfo(data)\r\n            break;\r\n        case \"ValidateAccount\":\r\n            answer = await ValidateAccount(data);\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n     \r\n      dispatch({\r\n        type: answer.type,\r\n        payload: answer.res.data,\r\n      });\r\n    } catch (error) {    \r\n      let messageError = errorHandler(error);\r\n      let objectError = {\r\n        messageError: messageError,\r\n        typeError : typeError //? typeError : 'error'\r\n      }\r\n      dispatch({\r\n        type: ADMIN_ERROR,\r\n        payload: objectError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as adminActions from './reducer/adminActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfUsers = ({roleName = 'User', title='Usuarios', create='/create-user'}) => {\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(adminActions.adminMethods({roleName: roleName},'GetUsersInfo'))\r\n    }, [dispatch, roleName])\r\n    \r\n    const getUser = (userId) => {\r\n        let typeUser = roleName === 'User' ? 'user' : 'admin'\r\n        history.push(`/admin-dashboard-read-${typeUser}/${userId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_users\r\n    } = adminReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Usuarios</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Usuario','Acciones']}\r\n                propertiesTable={['Id','UserName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_users}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Usuario', handleAction: getUser },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfUsers;\r\n\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components\r\nimport { Inputs, RegularExpressions } from '../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as adminActions from \"./reducer/adminActions\";\r\n\r\nclass UpdateContactInfo extends Component {\r\n    async componentDidMount() {\r\n        const { adminMethods, userId } = this.props;\r\n        await adminMethods({userId},'GetUserInfo' ); \r\n    }\r\n    action = async () => {\r\n        const { \r\n            adminMethods, \r\n            userId, \r\n            adminReducer: {\r\n                data:{ \r\n                    Email, \r\n                    PhoneNumber,\r\n                    UserName,\r\n                    TypeUser \r\n                }\r\n            },\r\n            closeModal\r\n        } = this.props;\r\n\r\n        const contactModel= {\r\n            NewUserName: UserName,\r\n            NewTypeUser: TypeUser,\r\n            NewPhoneNumber: PhoneNumber,\r\n            NewEmail: Email,\r\n            UserId: userId\r\n        }\r\n\r\n        await adminMethods( contactModel,'PutContactInfo')\r\n        \r\n        const {\r\n            adminReducer: {\r\n            api_actions: { error },  \r\n            },\r\n        } = this.props;\r\n\r\n        if(error){\r\n\r\n        }else{\r\n            closeModal && closeModal();\r\n        }\r\n        \r\n    };\r\n\r\n    async componentWillUnmount(){\r\n        const { adminCleanState, adminMethods, userId } = this.props;\r\n        adminCleanState();\r\n        await adminMethods({userId},'GetUserInfo')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            adminHandleChange,\r\n            adminHandleValidation,\r\n            adminReducer: {\r\n                data: { Email, PhoneNumber, UserName },\r\n                validations,\r\n                api_actions: { cargando, error },   \r\n            }\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <Inputs.Form1\r\n                     loading={cargando}\r\n                     error={error}\r\n                     action={this.action}\r\n                     textButton={'Actualizar'}\r\n                     textButtonLoading={'Actualizando ...'}\r\n                     validations={validations}\r\n                     handleValidations={adminHandleValidation}\r\n                >\r\n                    <Inputs.InputEmail \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Email'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='email'\r\n                        inputName={'Email'}\r\n                        placeHolder={'Introduce un Email'}\r\n                        inputValue={Email}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.Email}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Nombre de usuario'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'UserName'}\r\n                        placeHolder={'Introduce un nombre de usuario'}\r\n                        inputValue={UserName}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.UserName}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Celular'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'PhoneNumber'}\r\n                        placeHolder={'Introduce un Celular'}\r\n                        inputValue={PhoneNumber}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.PhoneNumber}\r\n                    />\r\n                    \r\n                </Inputs.Form1>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ adminReducer }) => {\r\n  return { adminReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...adminActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateContactInfo);\r\n","import React, {useEffect} from 'react'\r\nimport {Button } from 'reactstrap'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as adminActions from './reducer/adminActions'\r\nimport {ApiResponses} from '../components-api'\r\nconst ValidateAccount = ({title}) => {\r\n    const {userId} = useParams();\r\n    const dispatch = useDispatch();\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(adminActions.adminMethods({userId},'GetUserInfo'))\r\n    // }, [dispatch, userId])\r\n\r\n    const {\r\n        data:{\r\n            EmailConfirmed,\r\n        },\r\n        api_actions:{\r\n            cargando,\r\n            error, \r\n            cargandoValidateAccount\r\n        }\r\n    } = adminReducer\r\n\r\n    if(cargando){\r\n        return <></>\r\n    }\r\n    const action = () =>{\r\n        dispatch(adminActions.adminMethods({Active: !EmailConfirmed, UserId: userId},'ValidateAccount'), 'cargandoValidateAccount')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h5 className=\"font-weight-bold mb-3\">Cuenta: {EmailConfirmed}</h5>\r\n            <Button className={`btn btn-${EmailConfirmed ? 'success' : 'danger'}`} onClick={action}> \r\n                {EmailConfirmed ? 'Validada' : 'No Validada'} <ApiResponses.Loader activate={cargandoValidateAccount}/> \r\n            </Button>\r\n            {error && <ApiResponses.Error message={error}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidateAccount;","import ComponentIdicators from './Indicators'\r\nimport ComponentsListOfUsers from './ListOfUsers' \r\nimport ComponentReadUser from './ReadUser'\r\nimport ComponentUpdateUserInfo from './UpdateUserInfo'\r\nimport ComponentValidateAccount from './ValidateAccount'\r\n\r\n\r\nexport const Indicators = ComponentIdicators;\r\nexport const ListOfUsers = ComponentsListOfUsers;\r\nexport const ReadUser = ComponentReadUser;\r\nexport const UpdateUserInfo = ComponentUpdateUserInfo;\r\nexport const ValidateAccount = ComponentValidateAccount;\r\n","import React from 'react'\r\nimport {Row, Col, Card, CardBody, Container} from 'reactstrap'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {ListOfUsers as Users, UpdateUserInfo, ValidateAccount} from '../../components-admin'\r\nimport {SignUp, ChangePasswordForUser} from '../../components-session/'\r\nimport {Navbars} from '../../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfUsers = () => {\r\n    return (\r\n        <>\r\n            <Users />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ListOfAdmins = () => {\r\n    return (\r\n        <>\r\n            <Users \r\n                roleName='Admin' \r\n                title='Administradores'\r\n                create='/create-admin'\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateAdmin = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Administrador</h5>\r\n                            <SignUp history={history} role='Admin' reDirect={'/admin-dashboard/admins'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadAdmin = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Admin</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n             </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateUser = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/users\" className=\"text-muted\">Usuarios</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear usuario</small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Usuario</h5>\r\n                            <SignUp history={history} role='User' reDirect={'/admin-dashboard/create-company'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadUser = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Usuario</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser userId={userId}/>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","export const SECTION_CARGANDO = \"section_cargando\";\r\nexport const SECTION_ERROR = \"section_error\";\r\nexport const SECTION_HANDLE_CHANGE = \"section_handle_change\";\r\nexport const SECTION_CLEAN_STATE = \"section_clean_state\";\r\nexport const SECTION_CRUD = \"section_crud\";\r\nexport const SECTIONS_LIST = \"sections_list\";\r\nexport const SECTIONS_SELECT = \"sections_list_select\";\r\nexport const SECTION_HANDLE_VALIDATION = \"section_handle_validation\";","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const sectionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const sectionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const sectionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const sectionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = SECTION_CRUD;\r\n      switch (method) {\r\n        case \"get_list_sections_select\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_SELECT;\r\n          break;\r\n        case \"get_list_sections\":\r\n          answer = await axios_api(\r\n            `api/Sections`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id_with_products\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseIdWithProducts?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n\r\n        case \"get_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n\r\n        case \"put_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_section\":\r\n          answer = await axios_api(\"api/Section\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: SECTION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nclass Section extends Component {\r\n    componentDidMount = async() =>{\r\n        const {sectionId, sectionMethods} = this.props;\r\n        sectionId && await sectionMethods({Id: sectionId}, 'get_section')\r\n    }\r\n    actionSection = async () => {\r\n        const {\r\n            sectionMethods, \r\n            sectionCleanState,\r\n            sectionReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                CourseId\r\n            }},\r\n            reDirect,\r\n            history,\r\n            courseId,\r\n            setModal\r\n        } = this.props\r\n        if(Id){\r\n            await sectionMethods({Id, Name, DateCreated, CourseId }, 'put_section')\r\n        }else{\r\n            await sectionMethods({ Name, CourseId: courseId}, 'post_section')\r\n        }\r\n        if(this.props.sectionReducer.data.Id){\r\n            sectionCleanState()\r\n            await sectionMethods({Id: courseId ? courseId : CourseId },'get_list_sections_by_course_id_with_products');\r\n            setModal && setModal()\r\n            reDirect && history.push(reDirect)\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            sectionHandleValidation,\r\n            sectionHandleChange,\r\n            sectionReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionSection}\r\n                textButton={Id ? 'Actualizar Sección' : 'Agregar Sección'}\r\n                textButtonLoading={Id ? 'Actualizando Sección...' : 'Agregando Sección...'}\r\n                validations={validations}\r\n                handleValidations={sectionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sección'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Sección'}\r\n                    inputValue={Name}\r\n                    onChange={sectionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({sectionReducer}) => {\r\n    return {sectionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...sectionActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Section from './Section'\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateModalSection = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n   \r\n    if(sectionModal.some){\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n    \r\n    return (\r\n        <ModalForm\r\n            state={sectionModal}\r\n            modalTitle={'Crear Sección'}\r\n            content={\r\n                <Section \r\n                    courseId={courseId}\r\n                    setModal={ sectionModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditSectionModal = ({section}) => {\r\n    const sectionModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            state={sectionModal}\r\n            modalTitle={`Editar Sección: ${section.SectionName}`}\r\n            content={<Section sectionId={section.SectionId} />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteSectionModal = ({section, courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n    const deleteSectionAction = async (sectionId) => {\r\n        await dispatch(sectionActions.sectionMethods({Id: sectionId},'delete_section'));\r\n        await dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'));\r\n    }\r\n    \r\n    return (\r\n        <ModalDelete \r\n            state={sectionModal}\r\n            modalTitle={`Eliminar Sección: ${section.SectionName}`}\r\n            content={`La siguiente sección \"${section.SectionName}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={() => deleteSectionAction(section.SectionId)}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","export const CATEGORY_PRODUCT_CARGANDO = \"category_products_cargando\";\r\nexport const CATEGORY_PRODUCT_ERROR = \"category_products_error\";\r\nexport const CATEGORY_PRODUCT_HANDLE_CHANGE = \"category_products_handle_change\";\r\nexport const CATEGORY_PRODUCT_CLEAN_STATE = \"category_products_clean_state\";\r\nexport const CATEGORY_PRODUCT_CRUD = \"category_products_crud\";\r\nexport const CATEGORIES_PRODUCTS_LIST = \"categories_products_list\";\r\nexport const CATEGORY_PRODUCT_HANDLE_VALIDATION = \"category_products_handle_validation\";\r\n\r\n\r\n\r\n\r\n","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryProductHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryProductHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = CATEGORY_PRODUCT_CRUD;\r\n      switch (method) {\r\n\r\n        case \"get_list_categories_products\":\r\n          answer = await axios_api(\r\n            `api/ProductCategories`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = CATEGORIES_PRODUCTS_LIST;\r\n          break;\r\n\r\n        case \"get_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n        \r\n        case \"put_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_category_product\":\r\n          answer = await axios_api(\"api/ProductCategory\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","export const BLOB_CARGANDO = \"blob_cargando\";\r\nexport const BLOB_ERROR = \"blob_error\";\r\nexport const BLOB_HANDLE_CHANGE = \"blob_handle_change\";\r\nexport const BLOB_HANDLE_VALIDATION = \"blob_handle_validation\";\r\nexport const BLOB_CLEAN_STATE = \"blob_clean_state\";\r\nexport const BLOB_CRUD = \"blob_crud\";\r\n","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const blobHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const blobHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const blobCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const blobMethods = (data, method) => async (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CARGANDO,\r\n  });\r\n  try {\r\n    let answer;\r\n    let type = BLOB_CRUD;\r\n    switch (method) {\r\n      case \"post_blob\":\r\n        answer = await axios_api(`api/Blob`, true, \"post\", data);\r\n        break;\r\n      case \"put_blob\":\r\n        answer = await axios_api(\r\n          `api/Blob?id=${data.id}`,\r\n          true,\r\n          \"put\",\r\n          data.blob\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    //answer = { data: answer.data[0], status: answer.status };\r\n    dispatch({\r\n      type: type,\r\n      payload: answer.data[0],\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: BLOB_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","/*\r\n * Funciones para el manejo de archivos y form datas\r\n */\r\n\r\nexport const b64toBlob = (b64Data, contentType = \"\", sliceSize = 512) => {\r\n  let byteCharacters = atob(b64Data);\r\n  let byteArrays = [];\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    let slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n    let byteNumbers = new Array(slice.length);\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i);\r\n    }\r\n\r\n    let byteArray = new Uint8Array(byteNumbers);\r\n\r\n    byteArrays.push(byteArray);\r\n  }\r\n\r\n  let blob = new Blob(byteArrays, { type: contentType });\r\n  return blob;\r\n};\r\n\r\n/*\r\n * creamos un blob\r\n */\r\nexport const createBlob = (dataUri) => {\r\n  let block = dataUri.split(\";\");\r\n  let contentType = block[0].split(\":\")[1];\r\n  let realData = block[1].split(\",\")[1];\r\n  const blob = b64toBlob(realData, contentType);\r\n  return blob;\r\n};\r\n\r\n/*\r\n * Convertimos un blob a form data\r\n */\r\nexport const createFormData = (\r\n  blob,\r\n  BlobTypeId = 1,\r\n  ContainerName = \"publicproducts\",\r\n  IsPrivate = true,\r\n  UserId = \"\"\r\n) => {\r\n  const data = new FormData();\r\n  data.set(\"BlobTypeId\", BlobTypeId);\r\n  data.set(\"ContainerName\", ContainerName);\r\n  data.set(\"IsPrivate\", IsPrivate);\r\n  //   if (localStorage.getItem(\"role\") === \"Admin\") {\r\n  //     data.set(\"UserId\", UserId);\r\n  //   }\r\n  data.append(\"file\", blob);\r\n  return data;\r\n};\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as categoryProductActions from '../components-category-product/reducer/categoryProductActions'\r\nimport * as categoryActions from '../components-category/reducer/categoryActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Product extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, categoryProductMethods, categoryMethods} = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        await categoryProductMethods(\"\", 'get_list_categories_products');\r\n        await categoryMethods(\"\",\"GetCategories\")\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    ProductCategoryId, \r\n                    fileCover,\r\n                    Categories\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            categoryProductReducer:{\r\n                list_categories_products\r\n            },\r\n            blobReducer,\r\n            categoryReducer:{\r\n                list_categories\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'ProductCategoryId'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={ProductCategoryId}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.ProductCategoryId}\r\n                    optionPlaceHolder={'Selecciona un tipo de producto'}\r\n                    options={list_categories_products}\r\n                /> \r\n\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Caracteristicas'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Categories'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={Categories}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Categories}\r\n                    optionPlaceHolder={'Selecciona caracteristicas'}\r\n                    options={list_categories}\r\n                /> */}\r\n                \r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer, categoryProductReducer, blobReducer, categoryReducer}) => {\r\n    return {productReducer, categoryProductReducer, blobReducer, categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...categoryProductActions,\r\n    ...blobActions,\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Product from './Product'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateProductModal = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const porductModal = SwitchSome();\r\n\r\n    if(porductModal.some){\r\n        dispatch(productActions.productCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={porductModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Product \r\n                    courseId={courseId} \r\n                    hasSection={true}\r\n                    setModal={porductModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditProductModal = ({product, courseId}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={porductModal}\r\n            modalTitle={`Editar Recurso: ${product.Name}`}\r\n            content={<Product \r\n                productId={product.Id} \r\n                hasSection={true} \r\n                courseId={courseId}\r\n                setModal={porductModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteProductModal = ({product, action}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ porductModal}\r\n            modalTitle={`Eliminar Recurso: ${product.Name}`}\r\n            content={`El siguiente Recurso \"${product.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","// Imports de react.\r\nimport React, { useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Badge} from 'reactstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Import de components.\r\nimport {EditSectionModal, DeleteSectionModal} from './ModalSections'\r\nimport {EditProductModal, DeleteProductModal} from '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\n\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfSections = ({courseId}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [dispatch, courseId])\r\n\r\n    const cleanSection = () => {\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n\r\n    const deleteProductAction = (sectionId) => {\r\n        dispatch(productActions.productMethods({Id: sectionId},'delete_product'))\r\n        dispatch(productActions.productCleanState())\r\n        cleanSection()\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    // if(list_sections.len){\r\n    //     dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n            {list_sections.map(section => {\r\n                 //TODO: implementar nuevo formato para leer lor recursos de de una seción\r\n                 //TODO: Crear reducers de resources.\r\n                return <>\r\n                    <div className=\"border mb-3 p-2\">\r\n                        <div className='d-flex mb-2 p-2 text-left'>\r\n                            <h6 className='flex-grow-1 font-weight-bold mb-0'>{section.SectionName} </h6>\r\n                            <div>\r\n                                <EditSectionModal section={section} cleanSection={cleanSection}/>\r\n                                <DeleteSectionModal section={section} courseId={courseId}/>\r\n                            </div>\r\n                        </div>\r\n                    {\r\n                        section.Products && \r\n                        section.Products.map(product => {\r\n                        if(product !== null){\r\n                        return(\r\n                            <Badge color={'light'} className='d-flex mb-2 p-2 text-left'>\r\n                                <p className='flex-grow-1 mb-0'>{product.Name} </p>\r\n                                <div>\r\n                                    <Link to={`/player/watch-class/${product.Id}/${courseId}`}>\r\n                                    <FaIcons.FaEye className=\"mr-2\" />\r\n                                    </Link>\r\n                                    <EditProductModal product={product} courseId={courseId} />\r\n                                    <DeleteProductModal product={product} action={() => deleteProductAction(product.Id)}/>\r\n                                </div>\r\n                            </Badge>\r\n                            )\r\n                        }\r\n                        return '';\r\n                        })\r\n                    }\r\n                    </div>\r\n                </>\r\n            })}\r\n            {error ? <Error message={error}></Error> : ''}\r\n        </>\r\n    )\r\n}\r\n\r\n","import ComponentSection from './Section'\r\nimport * as ComponentListOfSections from './ListOfSections'\r\nimport * as ComponentModalSections from './ModalSections'\r\nimport * as ComponentCrudCourse from './CrudCourse'\r\n\r\nexport const Section =  ComponentSection;\r\nexport const ModalSections = ComponentModalSections;\r\nexport const CrudCourse = ComponentCrudCourse.CrudCourse;\r\nexport const ListOfSections = ComponentListOfSections.ListOfSections;","// Imports de react.\r\nimport React from 'react'\r\n\r\n// Imports de components.\r\nimport {CreateModalSection} from './ModalSections'\r\nimport {ListOfSections} from './ListOfSections'\r\nimport {CreateProductModal} from  '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nexport const CrudCourse = ({courseId}) => {\r\n\r\n    \r\n    return(\r\n        <>\r\n        <div className='d-flex justify-content-between'>\r\n            <h5 className=\"font-weight-bold mb-3\">Crea una sección nueva a tu curso</h5>\r\n            <CreateModalSection courseId={courseId}/>\r\n        </div> \r\n\r\n            <div className='d-flex justify-content-between'>\r\n            <h6 className=\"font-weight-bold mb-3\">Añade videos o documentos a tus secciones</h6>\r\n            <CreateProductModal courseId={courseId}/>\r\n        </div>       \r\n        <ListOfSections courseId={courseId}></ListOfSections>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Container, Row } from 'reactstrap'\r\n\r\n// Imports de config-components.\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\n// Imports de components\r\nimport Indicators from '../../components-admin/Indicators'\r\n\r\nimport {\r\n    AdminUsersPages, AdminCoursesPages, AdminProductPages, AdminCompanyPages\r\n} from './index'\r\n\r\nexport const Dashboard = () => {\r\n    \r\n    let {indicator} = useParams();\r\n    let history = useHistory();\r\n    const AdminSections = (page) =>{\r\n        switch(page){\r\n\r\n            case 'create-admin':\r\n                return <AdminUsersPages.CreateAdmin />\r\n            case 'admins':\r\n                return <AdminUsersPages.ListOfAdmins reDirect={'admin'} history={history} />\r\n            case 'create-user':\r\n                return <AdminUsersPages.CreateUser />\r\n            case 'users':\r\n                return <AdminUsersPages.ListOfUsers reDirect={'section'} history={history} />\r\n                 \r\n            case 'create-product':\r\n                return <AdminProductPages.CreateProduct />\r\n            case 'companies':\r\n                return <AdminCompanyPages.ListOfCompanies />\r\n            \r\n            default:\r\n                return <>\r\n                    <Row className=\"mb-4\">\r\n                        <Indicators />\r\n                    </Row>\r\n                </>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           AdminSections(indicator)\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const TemplateDashboardAdmin = ({children}) => {\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           children\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}","// Imports de react.\r\nimport React from 'react' \r\nimport { useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {CrudCourse} from '../../components-section'\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const CreateSection = () => {\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <Row>\r\n                <Col lg=\"8\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <CrudCourse  courseId={courseId} ></CrudCourse>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            {/* <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/> */}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Course extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, } = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        this.props.productReducer.data.ProductCategoryId = 6;\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            //TODO: revisar porque al crear el curso truena\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}${this.props.courseReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    fileCover,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer,  blobReducer}) => {\r\n    return {productReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);","// Imports de react.\r\nimport React from 'react'\r\n\r\nimport {ListOfProducts} from '../components-product'\r\n\r\nconst ListOfCourses = ({reDirect}) => {\r\n    return(\r\n        <ListOfProducts \r\n            title={'Cursos'} \r\n            categoryProductId={6} \r\n            reDirect={reDirect}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ListOfCourses\r\n\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\n\r\nexport const Player = ({\r\n    url = 'https://Version 4storage.blob.core.windows.net/publicproducts/5ad7523a-cf4e-4dfa-8942-6c6fa1a86744.mp4'\r\n}) => {\r\n    return (\r\n        <div> \r\n            <ReactPlayer \r\n                url={url}\r\n                width='100%'\r\n                height='100%'\r\n                controls\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import * as ComponentPlayer from './Player'\r\n\r\nexport const PlayerMedia = ComponentPlayer;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Container } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst TabCourse = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Descripción General\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Sporte\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab} className=\"py-4\">\r\n        <TabPane tabId=\"1\">\r\n            <Container>\r\n                <h5>Acerca de este curso</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">  \r\n            <Container>\r\n                <h5>Soporte y ayuda</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabCourse;","import React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Navbars} from '../config-components'\r\nimport {PlayerMedia} from '../components-player'\r\nimport { Row, Col } from 'reactstrap';\r\nimport CollapseSection from '../config-components/Collapse'\r\nimport TabCourse from '../config-components/TabCourse'\r\n\r\nimport * as productActions from '../components-product/reducer/productActions';\r\nimport * as sectionActions from '../components-section/reducer/sectionActions';\r\n\r\n\r\nexport const WatchClass = () => {\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n    const stateProduct = useSelector(state => state.productReducer)\r\n    const dispatch = useDispatch();\r\n    const {productId, courseId} = useParams();\r\n    useEffect(() => {\r\n        dispatch(productActions.productMethods({Id: productId},'get_product'));\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [productId, courseId, dispatch])\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    return (\r\n        <div>\r\n            <Navbars.NavbarAdmin /> \r\n            <Row className=\"no-gutters\">\r\n                <Col lg=\"8\">\r\n                    <PlayerMedia.Player \r\n                        url={stateProduct.data.Blobs?.length > 0 \r\n                            ? stateProduct.data.Blobs[0].Uri\r\n                            : ''\r\n                    }\r\n                    />  \r\n                    <TabCourse />\r\n                </Col>\r\n                <Col lg=\"4\" className=\"border-left\">\r\n                    <div>\r\n                        <div className=\"p-3 border-bottom shadow-sm\">\r\n                            <h6 className=\"font-weight-bold mb-0\">Contenido del curso</h6>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                {list_sections.map(section => {\r\n                                    return (\r\n                                        <CollapseSection \r\n                                            title={section.SectionName} \r\n                                            countVideos={section.Products.length} \r\n                                            videos={section.Products}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                                \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import ComponentCourse from './Course'\r\nimport ComponentListOfCourses from './ListOfCourses'\r\nimport * as ComponentWatchClass from './WatchClass'\r\n\r\n\r\nexport const Course = ComponentCourse ;\r\nexport const ListOfCourses = ComponentListOfCourses ;\r\nexport const PlayerMedia = ComponentWatchClass;\r\n","// Imports de react.\r\nimport React from 'react' \r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {ListOfCourses as Courses, Course, PlayerMedia} from '../../components-course'\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfCourses = ({reDirect, history}) =>{\r\n    return (\r\n        <Courses reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCourse = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <Card className=\"border-0\">\r\n            <CardBody className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\">Crea un curso nuevo</h5>\r\n                <Course reDirect={'/admin-dashboard/section/'} history={history}/>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const WhatchCourse = () => {\r\n    return (\r\n        <>\r\n            <PlayerMedia.WatchClass /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    const history = useHistory();\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\n\r\nclass CategoryProduct extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryProductId, categoryProductMethods} = this.props;\r\n        categoryProductId && await categoryProductMethods({Id: categoryProductId}, 'get_category_product')\r\n    }\r\n    actionCategoryProduct = async () => {\r\n        const {\r\n            categoryProductMethods, \r\n            categoryProductCleanState,\r\n            categoryProductReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryProductMethods({Id: Id, Name: Name}, 'put_category_product')\r\n\r\n        }else{\r\n            await categoryProductMethods({Name: Name}, 'post_category_product')\r\n        }\r\n        if(this.props.categoryProductReducer.data.Id){\r\n            categoryProductCleanState()\r\n            await categoryProductMethods('','get_list_categories_products');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryProductHandleValidation,\r\n            categoryProductHandleChange,\r\n            categoryProductReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategoryProduct}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryProductHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Categoria de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryProductHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryProduct);","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport {Badge} from 'reactstrap'\r\n\r\n// Import de components.\r\nimport CategoryProduct from './CategoryProduct'\r\n\r\n// Imports de config-components.\r\nimport {ModalForm, ModalDelete} from '../config-components/Modals'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass ListOfCategoriesProducts extends Component {\r\n    componentDidMount = async () => {\r\n        const {categoryProductMethods} = this.props;\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    deleteAction = async (categoryProductId) => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        await categoryProductMethods({Id: categoryProductId},'delete_category_product');\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    cleanModal = async () => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            categoryProductReducer: { \r\n                api_actions: {cargando, error},\r\n                list_categories_products\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n                {list_categories_products.map(category => {\r\n                    return <Badge color={'light'} className='d-inline-block mr-2 p-2'>\r\n                        <span className='mr-2'>{category.Name} </span>\r\n                        {/* <ModalForm \r\n                            key={category.Id}\r\n                            clean={this.cleanModal}\r\n                            modalTitle={`Editar Categoria: ${category.Name}`}\r\n                            content={<CategoryProduct categoryProductId={category.Id}></CategoryProduct>}\r\n                        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm> */}\r\n                        {/* <ModalDelete \r\n                            key={category.Id}\r\n                            modalTitle={`Eliminar Categoría: ${category.Name}`}\r\n                            content={`La siguiente categoría \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n                            action={() => this.deleteAction(category.Id)}\r\n                        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete> */}\r\n                     </Badge>\r\n                   \r\n                })}\r\n                {error ? <Error message={error}></Error> : ''}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfCategoriesProducts);","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nclass Category extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryId, categoryMethods} = this.props;\r\n        categoryId && await categoryMethods({Id: categoryId}, 'GetCategory')\r\n    }\r\n    actionCategory = async () => {\r\n        const {\r\n            categoryMethods, \r\n            categoryCleanState,\r\n            categoryReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryMethods({Id: Id, Name: Name}, 'PutCategory')\r\n\r\n        }else{\r\n            await categoryMethods({Name: Name}, 'PostCategory')\r\n        }\r\n        if(this.props.categoryReducer.data.Id){\r\n            categoryCleanState()\r\n            await categoryMethods('','GetCategories');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryHandleValidation,\r\n            categoryHandleChange,\r\n            categoryReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategory}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Añade caracteristicas para seleccionar en los proyectos'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryReducer}) => {\r\n    return {categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Category from './Category'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateCategoryModal = ({category}) => {\r\n    const dispatch = useDispatch()\r\n    const categoryModal = SwitchSome();\r\n\r\n    if(categoryModal.some){\r\n        dispatch(categoryActions.categoryCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={categoryModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Category \r\n                    category={category} \r\n                    hasSection={true}\r\n                    setModal={categoryModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditCategoryModal = ({category}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={categoryModal}\r\n            modalTitle={`Editar Recurso: ${category.Name}`}\r\n            content={<Category \r\n                categoryId={category.Id} \r\n                hasSection={true} \r\n                setModal={categoryModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteCategoryModal = ({category, action}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ categoryModal}\r\n            modalTitle={`Eliminar Recurso: ${category.Name}`}\r\n            content={`El siguiente Recurso \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_DETAIL_CARGANDO = \"product_detail_cargando\";\r\nexport const PRODUCT_DETAIL_ERROR = \"product_detail_error\";\r\nexport const PRODUCT_DETAIL_HANDLE_CHANGE = \"product_detail_handle_change\";\r\nexport const PRODUCT_DETAIL_CLEAN_STATE = \"product_detail_clean_state\";\r\nexport const PRODUCT_DETAIL_CRUD = \"product_detail_crud\";\r\nexport const PRODUCT_DETAILS_LIST = \"product_details_list\";\r\nexport const PRODUCT_DETAIL_HANDLE_VALIDATION = \"product_detail_handle_validation\";\r\n\r\nexport const GetProductDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/ProductDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCT_DETAILS_LIST};\r\n}\r\n\r\nexport const GetProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const GetProductDetailByProductId = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetailByProductId?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_detail_put'};\r\n}\r\n\r\nexport const PostProductDetail = async(data)=> {\r\n    const  answer = await axios_api(\"api/ProductDetail\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION, \r\n    GetProductDetails,\r\n    GetProductDetail,\r\n    GetProductDetailByProductId,\r\n    PutProductDetail,\r\n    PostProductDetail,\r\n    DeleteProductDetail,\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProductDetails\":\r\n          answer = await GetProductDetails(); \r\n          break;\r\n\r\n        case \"GetProductDetail\":\r\n          answer = await GetProductDetail(data);\r\n          break;\r\n\r\n        case \"GetProductDetailByProductId\":\r\n          answer = await GetProductDetailByProductId(data);\r\n          break;\r\n        case \"PutProductDetail\":\r\n          answer = await PutProductDetail(data);\r\n          break;\r\n\r\n        case \"PostProductDetail\":\r\n          answer = await PostProductDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteProductDetail\":\r\n          answer = await DeleteProductDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productDetailActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\n\r\nclass ProductDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productDetailMethods} = this.props;\r\n        productId && await productDetailMethods({Id: productId}, 'GetProductDetailByProductId');\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            productDetailMethods, \r\n            productDetailReducer: {data : {\r\n                Id,\r\n                SubTitle,\r\n                DateCreated,\r\n                Description, \r\n                BlobId\r\n            }},\r\n            productId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            SubTitle: SubTitle ? SubTitle : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            ProductId: productId ? productId : '',\r\n            BlobId: BlobId ? BlobId : '',\r\n        }\r\n        await productDetailMethods(model, action);\r\n    }\r\n\r\n    actionProductDetail = async () => {\r\n        const {\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blob,\r\n                    fileZip\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileZip?.length &&  Blob){\r\n                let fileZipAnswer = await this.actionBlob(fileZip, 1 ,[Blob]);\r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            } else{\r\n                let fileZipAnswer = fileZip?.length && await this.actionBlob(fileZip, 1); \r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            }\r\n        }else{\r\n            let fileZipAnswer = fileZip.length && await this.actionBlob(fileZip, 1); \r\n            this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n            fileZipAnswer &&  await this.sendAction('PostProductDetail')\r\n        }\r\n        if(this.props.productDetailReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productDetailReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productDetailHandleValidation,\r\n            productDetailHandleChange,\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    SubTitle,\r\n                    Description, \r\n                    fileZip\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                <Form1\r\n                    loading={\r\n                        cargando \r\n                            ? cargando : \r\n                            blobReducer.api_actions.cargando \r\n                            ? blobReducer.api_actions.cargando \r\n                            : false \r\n                        }\r\n                    error={error}\r\n                    action={this.actionProductDetail}\r\n                    textButton={Id ? 'Guardar Detalle' : 'Agregar Detalle'}\r\n                    textButtonLoading={Id ? 'Guardando Detalle...' : 'Agregando Detalle...'}\r\n                    validations={validations}\r\n                    handleValidations={productDetailHandleValidation}\r\n                >\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Subtitulo'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'SubTitle'}\r\n                        placeHolder={'Introduce un subtitulo '}\r\n                        inputValue={SubTitle}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={50}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.SubTitle}\r\n                    />\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Detalles'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='textarea'\r\n                        inputName={'Description'}\r\n                        placeHolder={'Introduce detalles'}\r\n                        inputValue={Description}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={500}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.Description}\r\n                    />\r\n                    <InputFile\r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Sube un .zip con tus archivos'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='file'\r\n                        inputName='fileZip'\r\n                        inputId='fileZip-video'\r\n                        inputValue={fileZip ? fileZip : ''}\r\n                        onChange={productDetailHandleChange}\r\n                        validateRE={validations.fileZip}\r\n                    /> \r\n                </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productDetailReducer,  blobReducer}) => {\r\n    return {productDetailReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","import ComponentProductDetail from './ProductDetails'\r\n\r\nexport const ProductDetail = ComponentProductDetail;","// Imports de react\r\nimport React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {Row, Col, Card, CardBody} from 'reactstrap'\r\n\r\n// Imports de componentes.\r\nimport {CardProduct, ListOfProducts as Products, AddCategories} from '../../components-product'\r\nimport Product from '../../components-product/Product'\r\nimport CategoryProduct from '../../components-category-product/CategoryProduct'\r\nimport ListOfCategoriesOfProducts from '../../components-category-product/ListOfCategoriesOfProducts'\r\nimport {Category, ListOfCategories} from '../../components-category'\r\nimport {ProductDetail} from '../../components-product-details'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfProducts = () => {\r\n    return(\r\n        <Products reDirect={'/admin-dashboard/product'}/>\r\n    )\r\n}\r\n\r\nexport const CreateProduct = () => {\r\n    const history = useHistory();  \r\n    return (\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear producto</small></li>\r\n        </ul>\r\n        <Row>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Crea un producto nuevo</h5>\r\n                        <Product reDirect={`/admin-dashboard/product`} history={history}/>\r\n                        \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <CardProduct />\r\n                \r\n                {/* <Card className=\"border-0\">\r\n                    <CardBody>\r\n                        <Category />\r\n                        <ListOfCategories/>\r\n                    </CardBody>\r\n                </Card> */}\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditProduct = () => {\r\n    let {productId,section} = useParams();\r\n    const history = useHistory();\r\n\r\n    const ProductSection = (section) => {\r\n        switch(section){\r\n            case 'cover':\r\n                return <>\r\n                <h5 className=\"font-weight-bold mb-3\">Edita este producto </h5>\r\n                <Product productId={productId} history={history}/>\r\n                </>\r\n            case 'detail':\r\n                return <div>\r\n                    <h5 className=\"font-weight-bold mb-3\">Sube detalle del producto </h5>\r\n                    <ProductDetail productId={productId} />\r\n                </div>\r\n                \r\n            default:\r\n                return <Product productId={productId} history={history}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Editar producto</small></li>\r\n            </ul>\r\n             <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <Link to={`/admin-dashboard/product/${productId}/cover`}>producto </Link>/ \r\n                            <Link  to={`/admin-dashboard/product/${productId}/detail`}> detalle</Link>\r\n                            \r\n                            {\r\n                                ProductSection(section)\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg=\"6\">\r\n                    <CardProduct />\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <AddCategories />\r\n                        </CardBody>\r\n                    </Card> */}\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <Category />\r\n                            <ListOfCategories/>\r\n                        </CardBody>\r\n                    </Card> */}\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CategoryProducts = () =>{\r\n    return (\r\n        <>\r\n            <CategoryProduct />\r\n            <ListOfCategoriesOfProducts></ListOfCategoriesOfProducts>\r\n        </>\r\n    )\r\n}\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nclass Company extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {companyId, companyMethods} = this.props;\r\n        companyId && await companyMethods({Id: companyId}, 'GetCompany');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            companyMethods, \r\n            companyReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                TradeName,\r\n                BusinessName, \r\n                BusinessActivity,\r\n                UserId\r\n            }},\r\n            userId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            TradeName: TradeName ? TradeName : '',\r\n            BusinessName: BusinessName ? BusinessName : '',\r\n            BusinessActivity: BusinessActivity ? BusinessActivity : 0,\r\n            UserId: UserId ? UserId : userId\r\n        }\r\n        await companyMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            companyReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutCompany');\r\n        }else{\r\n            await this.sendAction('PostCompany')\r\n        }\r\n        if(this.props.companyReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.companyReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            companyHandleValidation,\r\n            companyHandleChange,\r\n            companyReducer: {\r\n                data : {\r\n                    Id, \r\n                    TradeName,\r\n                    BusinessName,\r\n                    BusinessActivity, \r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Empresa' : 'Crear Empresa'}\r\n                textButtonLoading={Id ? 'Guardando Empresa...' : 'Crear Empresa...'}\r\n                validations={validations}\r\n                handleValidations={companyHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre Comercial'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'TradeName'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={TradeName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.TradeName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Razón social'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'BusinessName'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={BusinessName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessName}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Actividad'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'BusinessActivity'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={BusinessActivity}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessActivity} \r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({companyReducer}) => {\r\n    return {companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...companyActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods, companyMethods, companyId} = this.props;\r\n        await analyticsMethods('count_positions', {companyId})\r\n        await analyticsMethods('count_personal_details', {companyId})\r\n        await analyticsMethods('count_areas', {companyId})\r\n        await companyMethods({Id:companyId},'GetCompany')\r\n    }\r\n    render(){\r\n        const {\r\n            count_positions,\r\n            count_personal_details,\r\n            count_areas,\r\n            api_actions:{\r\n                cargando,\r\n            },\r\n            \r\n        } = this.props.analyticsReducer;\r\n        \r\n        const cardAnalytics = [\r\n            {\r\n                id: '3-p',\r\n                title: 'Organigrama',\r\n                number: 'Ver',\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/organization-chart`\r\n            },            \r\n            {\r\n                id: '1-p',\r\n                title: 'Puestos',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_positions,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/positions`\r\n            },\r\n            {\r\n                id: '2-p',\r\n                title: 'Empleados',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_personal_details,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/employees`\r\n            }, \r\n            {\r\n                id: '4-p',\r\n                title: 'Areas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_areas,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/areas`\r\n            },      \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer, companyReducer}) => {\r\n    return {analyticsReducer, companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n    ...companyActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import ComponentCompany from './Company'\r\nimport ComponentCompanyIndicators from './CompanyIndicators'\r\nimport ComponentListOfCompanies from './ListOfCompanies'\r\n\r\n\r\nexport const Company = ComponentCompany;\r\nexport const CompanyIndicators = ComponentCompanyIndicators;\r\nexport const ListOfCompanies = ComponentListOfCompanies;","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfCompanies = ({ title='Empresas', create='/create-company'}) => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(companyActions.companyMethods('','GetCompanies'))\r\n    }, [dispatch])\r\n    \r\n    const getCompany = (companyId) => {\r\n        history.push(`/admin-dashboard/company/${companyId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_companies\r\n    } = companyReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Empresas</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Empresa','Acciones']}\r\n                propertiesTable={['Id','TradeName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_companies}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empresa', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCompanies;\r\n\r\n","import { CompanyIndicators } from '../../components-company'\r\n\r\nimport { Row } from 'reactstrap'\r\n\r\nexport const Indicators = ({companyName, companyId, hrefBase}) => {\r\n    return (\r\n        <>\r\n            <h2> {companyName}</h2>\r\n            <Row className=\"mb-4\">\r\n                <CompanyIndicators companyId={companyId} hrefBase={hrefBase}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const JOB_DETAIL_CARGANDO = \"job_detail_cargando\";\r\nexport const JOB_DETAIL_ERROR = \"job_detail_error\";\r\nexport const JOB_DETAIL_HANDLE_CHANGE = \"job_detail_handle_change\";\r\nexport const JOB_DETAIL_CLEAN_STATE = \"job_detail_clean_state\";\r\nexport const JOB_DETAIL_CRUD = \"job_detail_crud\";\r\nexport const JOB_DETAILS_LIST = \"job_detail_list\";\r\nexport const JOB_DETAIL_HANDLE_VALIDATION = \"job_detail_handle_validation\";\r\n\r\nexport const GetJobDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAILS_LIST};\r\n}\r\n\r\nexport const GetJobDetailByPersonalDetailId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/JobDetailByPersonalDetailId?personalDetailId=${data.personalDetailId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\n\r\nexport const GetJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'job_detail_put'};\r\n}\r\n\r\nexport const PostJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_HANDLE_VALIDATION, \r\n    GetJobDetails,\r\n    GetJobDetailByPersonalDetailId,\r\n    GetJobDetail,\r\n    PutJobDetail,\r\n    PostJobDetail,\r\n    DeleteJobDetail\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const jobDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const jobDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetJobDetails\":\r\n          answer = await GetJobDetails(); \r\n          break;\r\n\r\n        case \"GetJobDetailByPersonalDetailId\":\r\n          answer = await GetJobDetailByPersonalDetailId(data);\r\n          break;\r\n        \r\n          case \"GetJobDetail\":\r\n          answer = await GetJobDetail(data);\r\n          break;\r\n\r\n        case \"PutJobDetail\":\r\n          answer = await PutJobDetail(data);\r\n          break;\r\n\r\n        case \"PostJobDetail\":\r\n          answer = await PostJobDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteJobDetail\":\r\n          answer = await DeleteJobDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: JOB_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as jobDetailActions from './reducer/jobDetailActions'\r\n\r\nclass JobDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, jobDetailMethods} = this.props;\r\n        personalDetailId && await jobDetailMethods({personalDetailId}, 'GetJobDetailByPersonalDetailId');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            jobDetailMethods, \r\n            jobDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PersonDetailId,\r\n                DateAdmission,\r\n                Contract,\r\n                Benefits,\r\n                IntegratedSalary,\r\n                DailySalary,\r\n                Type\r\n            }},\r\n            personalDetailId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PersonDetailId: PersonDetailId ? PersonDetailId : personalDetailId,\r\n            DateAdmission: DateAdmission ? DateAdmission : '',\r\n            Contract: Contract ? Contract : '',\r\n            Benefits: Benefits ? Benefits : '',\r\n            IntegratedSalary: IntegratedSalary ? IntegratedSalary : '',\r\n            DailySalary: DailySalary ? DailySalary : '',\r\n            Type: Type ? Type : ''\r\n        }\r\n        await jobDetailMethods(model, action);\r\n    }\r\n\r\n    actionJobDetail = async () => {\r\n        const {\r\n            jobDetailCleanState,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutJobDetail');\r\n        }else{\r\n            await this.sendAction('PostJobDetail')\r\n        }\r\n        if(this.props.jobDetailReducer.data.Id && reDirect){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            jobDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { jobDetailCleanState } = this.props;\r\n        jobDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            jobDetailHandleValidation,\r\n            jobDetailHandleChange,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    DateAdmission,\r\n                    Contract,\r\n                    Benefits,\r\n                    IntegratedSalary,\r\n                    DailySalary,\r\n                    Type\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionJobDetail}\r\n                textButton={Id ? 'Guardar Información Laboral' : 'Crear Información Laboral'}\r\n                textButtonLoading={Id ? 'Guardando Información Laboral...' : 'Creando Información Laboral...'}\r\n                validations={validations}\r\n                handleValidations={jobDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Ingreso'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'DateAdmission'}\r\n                    placeHolder={''}\r\n                    inputValue={DateAdmission}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.DateAdmission}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de Contrato'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Contract'}\r\n                    placeHolder={'Selecciona el tipo de Contrato'}\r\n                    inputValue={Contract}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Contract}\r\n                    optionPlaceHolder={'Selecciona el tipo de Contrato'}\r\n                    options={[\r\n                        {Id:'Eventual',Name:'Eventual'},\r\n                        {Id:'Planta',Name:'Planta'}\r\n                    ]}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Prestaciones'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Benefits'}\r\n                    placeHolder={'Selecciona el tipo de Prestaciones'}\r\n                    inputValue={Benefits}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Benefits}\r\n                    optionPlaceHolder={'Selecciona el tipo de Prestaciones'}\r\n                    options={[\r\n                        {Id:'LFT',Name:'LFT'},\r\n                        {Id:'CC',Name:'CC'}\r\n                    ]}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Diario'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'DailySalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={DailySalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.DailySalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Integrado'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'IntegratedSalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={IntegratedSalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.IntegratedSalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Prestaciones'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Benefits'}\r\n                    placeHolder={'Selecciona el tipo de Prestaciones'}\r\n                    inputValue={Benefits}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Benefits}\r\n                    optionPlaceHolder={'Selecciona el tipo de Prestaciones'}\r\n                    options={[\r\n                        {Id:'LFT',Name:'LFT'},\r\n                        {Id:'CC',Name:'CC'}\r\n                    ]}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Puesto'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Type'}\r\n                    placeHolder={'Selecciona el tipo de Puesto'}\r\n                    inputValue={Type}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Type}\r\n                    optionPlaceHolder={'Selecciona el tipo de Puesto'}\r\n                    options={[\r\n                        {Id:'S',Name:'S'},\r\n                        {Id:'C',Name:'C'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({jobDetailReducer}) => {\r\n    return {jobDetailReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...jobDetailActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDetail);\r\n","import ComponentJobDetails from './JobDetails'\r\n\r\nexport const JobDetails = ComponentJobDetails;","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport { JobDetails} from '../../components-job-detail'\r\n\r\n\r\n\r\n\r\nexport const CreateJobDetail = ({ reDirect=''}) => {\r\n    const {personalDetailId} = useParams();\r\n    const history = useHistory();\r\n\r\n    const jobDetailReducer = useSelector(state => state.jobDetailReducer);\r\n    const {data: {Id}} = jobDetailReducer;\r\n    \r\n    return (\r\n        <>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea Información Laboral del Empleado' : 'Actualiza Información Laboral del Empleado'}</h5>\r\n                        <JobDetails personalDetailId={personalDetailId} history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateJobDetail = ({reDirect=''}) => {\r\n    const {personalDetailId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>            \r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Actualiza Información Laboral del Empleado</h5>\r\n                        <JobDetails personalDetailId={personalDetailId}  history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport {Position, ListOfPositions as Positions, ListFromPositions} from '../../components-position'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\n\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\nexport const ListOfPositions = ({reDirect, reDirectBase, reDirectCreate,  history}) =>{\r\n    const {companyId} = useParams();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    debugger\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={reDirectBase.replace('companyId', companyId)} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n            <Positions reDirect={reDirect} create={reDirectCreate}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = ({reDirect, reDirectBase}) => {\r\n    const history = useHistory();\r\n    const {companyId, positionId} = useParams();\r\n    debugger\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Col lg=\"6\" className='mb-5'>\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!positionId ? 'Crear Puesto' : 'Guardar Puesto'}</h5>\r\n                        <Position \r\n                            positionId={positionId} \r\n                            companyId={companyId} \r\n                            history={history} \r\n                            reDirect={reDirect.replace('companyId', companyId)} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Responsabilidades</h5>\r\n                        <ListFromPositions.ListOfResponsabilities /> \r\n                        <h5 className=\"font-weight-bold mb-3\">Descripciones</h5>\r\n                        <ListFromPositions.ListOfDescriptions />     \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PERSONAL_DETAIL_CARGANDO = \"personal_detail_cargando\";\r\nexport const PERSONAL_DETAIL_ERROR = \"personal_detail_error\";\r\nexport const PERSONAL_DETAIL_HANDLE_CHANGE = \"personal_detail_handle_change\";\r\nexport const PERSONAL_DETAIL_CLEAN_STATE = \"personal_detail_clean_state\";\r\nexport const PERSONAL_DETAIL_CRUD = \"personal_detail_crud\";\r\nexport const PERSONAL_DETAILS_LIST = \"personal_detail_list\";\r\nexport const PERSONAL_DETAIL_HANDLE_VALIDATION = \"personal_detail_handle_validation\";\r\n\r\nexport const GetPersonalDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\nexport const GetPersonalDetailsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PersonalDetailsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\n\r\nexport const GetPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'personal_detail_put'};\r\n}\r\n\r\nexport const PostPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeletePersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION, \r\n    GetPersonalDetails,\r\n    GetPersonalDetailsByCompanyId,\r\n    GetPersonalDetail,\r\n    PutPersonalDetail,\r\n    PostPersonalDetail,\r\n    DeletePersonalDetail\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const personalDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const personalDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPersonalDetails\":\r\n          answer = await GetPersonalDetails(); \r\n          break;\r\n\r\n        case \"GetPersonalDetailsByCompanyId\":\r\n          answer = await GetPersonalDetailsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPersonalDetail\":\r\n          answer = await GetPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PutPersonalDetail\":\r\n          answer = await PutPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PostPersonalDetail\":\r\n          answer = await PostPersonalDetail(data);\r\n          break;\r\n        \r\n        case \"DeletePersonalDetail\":\r\n          answer = await DeletePersonalDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PERSONAL_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfPersonalDetails = ({ title='Empleados', redirectUser, create='/create-personal-detail'}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(personalDetailActions.personalDetailMethods({companyId},'GetPersonalDetailsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (personalDetailId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-personal-detail/${personalDetailId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_personal_details\r\n    } = personalDetailReducer;\r\n    \r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Empleados</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Apellido Paterno','Apellido Materno','Acciones']}\r\n                propertiesTable={['Name', 'LastName', 'SecondLastName']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_personal_details}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empleado', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPersonalDetails;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\nclass PersonDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, personalDetailMethods} = this.props;\r\n        personalDetailId && await personalDetailMethods({Id: personalDetailId}, 'GetPersonalDetail');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            personalDetailMethods, \r\n            personalDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                LastName,\r\n                SecondLastName,\r\n                CompanyId,\r\n                RFC,\r\n                Birthdate,\r\n                Gender\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            LastName: LastName ? LastName : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            SecondLastName: SecondLastName ? SecondLastName : '',\r\n            RFC: RFC ? RFC : '',\r\n            Birthdate: Birthdate ? Birthdate : '',\r\n            Gender: Gender ? Gender : ''\r\n        }\r\n        await personalDetailMethods(model, action);\r\n    }\r\n\r\n    actionPersonalDetail = async () => {\r\n        const {\r\n            personalDetailCleanState,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPersonalDetail');\r\n        }else{\r\n            await this.sendAction('PostPersonalDetail')\r\n        }\r\n        if(this.props.personalDetailReducer.data.Id){\r\n            debugger\r\n            reDirect && history.push(`${reDirect}/${this.props.personalDetailReducer.data.Id}`)\r\n            setModal && setModal();\r\n            personalDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { personalDetailCleanState } = this.props;\r\n        personalDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            personalDetailHandleValidation,\r\n            personalDetailHandleChange,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    LastName,\r\n                    SecondLastName,\r\n                    RFC,\r\n                    Birthdate,\r\n                    Gender\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPersonalDetail}\r\n                textButton={Id ? 'Guardar Empleado' : 'Crear Empleado'}\r\n                textButtonLoading={Id ? 'Guardando Empleado...' : 'Creando Empleado...'}\r\n                validations={validations}\r\n                handleValidations={personalDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Paterno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'LastName'}\r\n                    placeHolder={'Introduce apellido paterno'}\r\n                    inputValue={LastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.LastName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Materno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'SecondLastName'}\r\n                    placeHolder={'Introduce apellido materno'}\r\n                    inputValue={SecondLastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.SecondLastName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='RFC'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'RFC'}\r\n                    placeHolder={'Introduce un sueldo'}\r\n                    inputValue={RFC}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.RFC}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Nacimiento'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'Birthdate'}\r\n                    placeHolder={''}\r\n                    inputValue={Birthdate}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Birthdate}\r\n                />\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Genero'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Gender'}\r\n                    placeHolder={''}\r\n                    inputValue={Gender}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Gender}\r\n                /> */}\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sexo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Gender'}\r\n                    placeHolder={'Selecciona el Sexo'}\r\n                    inputValue={Gender}\r\n                    onChange={personalDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Gender}\r\n                    optionPlaceHolder={'Selecciona el Sexo'}\r\n                    options={[\r\n                        {Id:'M',Name:'M'},\r\n                        {Id:'F',Name:'F'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({personalDetailReducer}) => {\r\n    return {personalDetailReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...personalDetailActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonDetail);\r\n","import ComponentListOfPersonalDetails from './ListOfPersonDetails'\r\nimport ComponentPersonDetail from './PersonDetail'\r\n\r\nexport const ListOfPersonDetails = ComponentListOfPersonalDetails;\r\nexport const PersonDetail = ComponentPersonDetail;","import React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {ListOfPersonDetails as PersonDetails, PersonDetail} from '../../components-personal-detail'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport {JobDetails} from './'\r\n\r\n\r\nexport const ListOfPersonDetails = ({ redirectUser }) =>{\r\n    const history = useHistory();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <PersonDetails redirectUser={redirectUser}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\n// Alt + z\r\nexport const CreatePersonDetail = ({redirectUser}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer);\r\n    const {data: {Id}}= personalDetailReducer;\r\n    const {companyId, personalDetailId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n                <ul className=\"list-inline mb-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/employees`} className=\"text-muted\">Empleados</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\"> {!Id ? 'Crear Empleado' : 'Actualizar Empleado'}</small></li>\r\n                </ul>\r\n                <Row>\r\n                    <Col lg=\"6\" className='mb-5'>\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea un Empleado' : 'Actualizar Empleado'}</h5>\r\n                                <PersonDetail personalDetailId={personalDetailId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/update-personal-detail`} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    {Id ? <JobDetails.CreateJobDetail personalDetailId={personalDetailId}/> : '' }\r\n                </Row>\r\n        </>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const AREA_CARGANDO = \"area_cargando\";\r\nexport const AREA_ERROR = \"area_error\";\r\nexport const AREA_HANDLE_CHANGE = \"area_handle_change\";\r\nexport const AREA_CLEAN_STATE = \"area_clean_state\";\r\nexport const AREA_CRUD = \"area_crud\";\r\nexport const AREAS_LIST = \"area_list\";\r\nexport const AREA_HANDLE_VALIDATION = \"area_handle_validation\";\r\n\r\nexport const GetAreas = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Areas`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdWithoutTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdWithoutTaken?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdTaken?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\n\r\nexport const GetArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const PutArea = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/Area?id=${data.Id}`,\r\n      true,\r\n      \"put\",\r\n      data\r\n    );\r\n  return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PutAreaTaken = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/AreaTaken?areaId=${data.areaId ? data.areaId : 0}&organizationChartId=${data.organizationChartId}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PostArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const DeleteArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_HANDLE_VALIDATION, \r\n    GetAreas,\r\n    GetAreasByCompanyId,\r\n    GetAreasByCompanyIdWithoutTaken,\r\n    GetAreasByCompanyIdTaken,\r\n    GetArea,\r\n    PutAreaTaken,\r\n    PutArea,\r\n    PostArea,\r\n    DeleteArea\r\n  } from \"./areaTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const areaHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const areaHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const areaCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const areaMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetAreas\":\r\n          answer = await GetAreas(); \r\n          break;\r\n\r\n        case \"GetAreasByCompanyId\":\r\n          answer = await GetAreasByCompanyId(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdWithoutTaken\":\r\n          answer = await GetAreasByCompanyIdWithoutTaken(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdTaken\":\r\n          answer = await GetAreasByCompanyIdTaken(data);\r\n          break;\r\n        \r\n        case \"GetArea\":\r\n          answer = await GetArea(data);\r\n          break;\r\n\r\n        case \"PutAreaTaken\":\r\n          answer = await PutAreaTaken(data);\r\n          break;\r\n\r\n        case \"PutArea\":\r\n          answer = await PutArea(data);\r\n          break;\r\n\r\n        case \"PostArea\":\r\n          answer = await PostArea(data);\r\n          break;\r\n        \r\n        case \"DeleteArea\":\r\n          answer = await DeleteArea(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: AREA_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfAreas = ({ title='Areas y departamentos', redirectUser, create='/create-area'}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(areaActions.areaMethods({companyId},'GetAreasByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getArea = (areaId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-area/${areaId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_areas\r\n    } = areaReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Tipo' ,'Acciones']}\r\n                propertiesTable={['Name', 'Type']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_areas}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Area', handleAction: getArea },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfAreas;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\nclass Area extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {areaId, areaMethods} = this.props;\r\n        areaId && await areaMethods({Id: areaId}, 'GetArea');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            areaMethods, \r\n            areaReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                CompanyId,\r\n                Taken,\r\n                Type,\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Taken: Taken ? Taken : false,\r\n            Type: Type ? Type : '',\r\n        }\r\n        await areaMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            areaReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutArea');\r\n        }else{\r\n            await this.sendAction('PostArea')\r\n        }\r\n        if(this.props.areaReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { areaCleanState } = this.props;\r\n        areaCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            areaHandleValidation,\r\n            areaHandleChange,\r\n            areaReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Type\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            \r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Area' : 'Crear Area'}\r\n                textButtonLoading={Id ? 'Guardando Area...' : 'Crear Area...'}\r\n                validations={validations}\r\n                handleValidations={areaHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={areaHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Type'}\r\n                    placeHolder={'Selecciona el tipo de Area'}\r\n                    inputValue={Type}\r\n                    onChange={areaHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Type}\r\n                    optionPlaceHolder={'Selecciona el tipo de Area'}\r\n                    options={[\r\n                        {Id:'Area',Name:'Area'},\r\n                        {Id:'Departamento',Name:'Departamento'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({areaReducer}) => {\r\n    return {areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...areaActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Area);\r\n","import ComponentListOfAreas from './ListOfAreas'\r\nimport ComponentArea from './Area'\r\n\r\nexport const ListOfAreas = ComponentListOfAreas;\r\nexport const Area = ComponentArea;","import {ListOfAreas as Areas, Area} from '../../components-area'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfAreas = ({redirectUser}) =>{\r\n    const history = useHistory();\r\n\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2>{TradeName}</h2>\r\n            <Areas redirectUser={redirectUser} history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateArea = ({redirectUser}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer);\r\n    const {data: {Id}}= areaReducer;\r\n    const {companyId, areaId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/areas`} className=\"text-muted\">Areas</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{!Id ? 'Crear Area' : 'Actualizar Area'} </small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Puesto</h5>\r\n                            <Area  areaId={areaId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/areas`} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n","import * as ComponentCompanies from './Company'\r\nimport * as ComponentJobDetails from './JobDetails'\r\nimport * as ComponentPosition from './Position'\r\nimport * as ComponentPersonDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\nexport const Company = ComponentCompanies;\r\nexport const JobDetails = ComponentJobDetails;\r\nexport const Position = ComponentPosition;\r\nexport const PersonDetail = ComponentPersonDetail;\r\nexport const Area = ComponentArea;","import {Company, CompanyIndicators, ListOfCompanies as Companies} from '../../components-company'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\n\r\nimport {Company as CompanyTemplate} from '../templates'\r\n\r\nexport const ListOfCompanies = ({reDirect, history}) =>{\r\n    return (\r\n        <Companies reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCompany = () => {\r\n    const {userId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Crea una Empresa</h5>\r\n                                <Company userId={userId} history={history} reDirect={'/admin-dashboard/company'} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Indicators = () => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const {companyId} = useParams();\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <CompanyTemplate.Indicators \r\n                    companyName={TradeName} \r\n                    companyId={companyId} \r\n                    hrefBase={'admin-dashboard'}\r\n                />\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row } from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\nimport {Position as TemplatePosition} from '../templates'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfPositions = () =>{\r\n    return (\r\n        <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <TemplatePosition.ListOfPositions \r\n                reDirect={`/admin-dashboard/company/companyId/update-position/positionId`}\r\n                reDirectBase='/admin-dashboard/company/companyId'\r\n                reDirectCreate='/admin-dashboard/company/companyId/create-position'\r\n            />\r\n        </AdminDashboardPages.TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = () => {\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/admin-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect={`/admin-dashboard/company/companyId/positions`}\r\n                    />\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ORGANIZATION_CHART_CARGANDO = \"organization_chart_cargando\";\r\nexport const ORGANIZATION_CHART_ERROR = \"organization_chart_error\";\r\nexport const ORGANIZATION_CHART_HANDLE_CHANGE = \"organization_chart_handle_change\";\r\nexport const ORGANIZATION_CHART_CLEAN_STATE = \"organization_chart_clean_state\";\r\nexport const ORGANIZATION_CHART_CRUD = \"organization_chart_crud\";\r\nexport const ORGANIZATION_CHARTS_LIST = \"organization_charts_list\";\r\nexport const ORGANIZATION_CHART_HANDLE_VALIDATION = \"organization_chart_handle_validation\";\r\nexport const ORGANIZATION_CHART_CHILD = 'organization_chart_child'\r\n\r\nexport const GetOrganizationCharts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationCharts`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHARTS_LIST};\r\n}\r\n\r\nexport const GetOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const GetOrganizationChartChild = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartByCompanyId = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByCompanyId?companyId=${data.companyId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const GetOrganizationChartByArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByArea?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const PutOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'organization_chart_put'};\r\n}\r\n\r\nexport const PostOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const DeleteOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION, \r\n    GetOrganizationCharts,\r\n    GetOrganizationChart,\r\n    GetOrganizationChartChild,\r\n    GetOrganizationChartByCompanyId,\r\n    GetOrganizationChartByArea,\r\n    PutOrganizationChart,\r\n    PostOrganizationChart,\r\n    DeleteOrganizationChart\r\n } from \"./organizationChartTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const organizationChartHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const organizationChartHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetOrganizationCharts\":\r\n            answer = await GetOrganizationCharts(); \r\n            break;\r\n\r\n        case \"GetOrganizationChart\":\r\n            answer = await GetOrganizationChart(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartChild\":\r\n            answer = await GetOrganizationChartChild(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartByCompanyId\":\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n            break;\r\n        case \"GetOrganizationChartByArea\":\r\n            answer = await GetOrganizationChartByArea(data);\r\n            break;\r\n\r\n        case \"PutOrganizationChart\":\r\n          answer = await PutOrganizationChart(data);\r\n          break;\r\n\r\n        case \"PostOrganizationChart\":\r\n          answer = await PostOrganizationChart(data);\r\n          break;\r\n        \r\n        case \"DeleteOrganizationChart\":\r\n          answer = await DeleteOrganizationChart(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ORGANIZATION_CHART_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { Card,  CardBody, CardTitle, CardSubtitle,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Col\r\n} from 'reactstrap'\r\nimport {ReadPosition} from '../components-position'\r\nimport {ApiResponses} from '../components-api'\r\nimport {Inputs} from '../config-components'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport bem from 'easy-bem'\r\nimport './style.css'\r\nconst cn = bem('scrollbars-example')\r\nconst COLS = 20\r\nconst ROWS = 20\r\n\r\nconst StyledNode = styled.div`\r\n  padding: 5px;\r\n  border-radius: 8px;\r\n  display: inline-block;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Modals = ({positionId, children, modalTitle, name}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    return (\r\n      <>\r\n        <span role=\"button\" onClick={toggle}>{children}</span>\r\n        <Modal isOpen={modal} toggle={toggle} >\r\n          <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n          <ModalBody>\r\n            <h3>{name}</h3> \r\n            <ReadPosition positionId={positionId} />\r\n          </ModalBody>\r\n          {/* <ModalFooter>\r\n            <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{' '}\r\n            <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n          </ModalFooter> */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport const CardNode = ({positionId,name, employee, area, addChild, updateNode,deleteChild}) => {\r\n    const rArea = area ? area : '';\r\n    return(\r\n        \r\n        <Card>\r\n            <CardBody className=' d-flex justify-content-between'>\r\n                <div className={'mr-5 '}>\r\n                    <div className='font-weight-bold  mb-2' style={{textAlign: 'start'}}>\r\n                        {name}\r\n                    </div>\r\n                    <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                        {employee ? `${employee.Name} ${employee.LastName} ` :'Empleado'}\r\n                    </div> \r\n                    {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n                </div>\r\n                <div>\r\n                    {/* <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div> */}\r\n                    <div>\r\n                        <Modals positionId={positionId} modalTitle={name} name={name} >\r\n                            <FaIcons.FaEye  className=\"text-secondary\" />\r\n                        </Modals>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div>\r\n                    <div>\r\n                        {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n \r\nclass OrganizationChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.container  = React.createRef();\r\n        this.state = {\r\n          value: ''\r\n        }\r\n      }\r\n\r\n      async componentDidMount() {\r\n        const {\r\n            organizationChartMethods,\r\n            areaMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n        companyId && await areaMethods({companyId: companyId}, 'GetAreasByCompanyIdTaken')\r\n   \r\n       \r\n        this.centerDiagram();\r\n    }\r\n\r\n    \r\n    centerDiagram = () => {\r\n        const element = this.container.current;\r\n        if (element) {\r\n            //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n            element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n        }\r\n    }\r\n\r\n    createOrganigrama =  (organigrama) => {\r\n        let OrganizationChart1 = organigrama?.OrganizationChart1\r\n        if(OrganizationChart1?.length === 0 || OrganizationChart1 === undefined || !OrganizationChart1){\r\n            \r\n            return <TreeNode \r\n                label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {organigrama?.Position?.Id}\r\n                        name={organigrama?.Position?.Name ? organigrama?.Position?.Name : 'Sin puesto'} \r\n                        employee = { organigrama.PersonalDetail}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n                }\r\n            />\r\n        }\r\n        \r\n        return <TreeNode \r\n            label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {organigrama?.Position?.Id}\r\n                        name = {organigrama?.Position?.Name ? organigrama?.Position?.Name : 'Sin puesto'} \r\n                        employee = { organigrama.PersonalDetail}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n            }\r\n        >\r\n            {\r\n                OrganizationChart1.map((child) => {           \r\n                    return this.createOrganigrama(child)\r\n                })\r\n            }\r\n        </TreeNode>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addUpChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    getOrganizationChartByArea = async(e) => {\r\n        debugger\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        value === 'general' ? \r\n            await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId') :\r\n            await organizationChartMethods({companyId, areaId: value},'GetOrganizationChartByArea');\r\n\r\n        this.centerDiagram();\r\n       \r\n    }\r\n\r\n    getCompleteOrganizationChart = async() => {\r\n        const {\r\n            organizationChartMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n    }\r\n\r\n    render () {\r\n\r\n        const { \r\n            organizationChartReducer:{\r\n                data: {Id},\r\n                api_actions: {\r\n                    cargando,\r\n                    error\r\n                }\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }, \r\n            hrefBase\r\n        } = this.props\r\n\r\n        return(\r\n            <div >\r\n                <ul className=\"list-inline m-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${hrefBase}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \">\r\n                    \r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => this.getOrganizationChartByArea(e)}>\r\n                                <option value='general' >General</option>\r\n                                {\r\n                                    list_areas.map(area => {\r\n                                      \r\n                                        return <option value={area.Id}>\r\n                                            {area.Name}\r\n                                        </option>\r\n                                    })\r\n                                }\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </li>\r\n                </ul>\r\n               \r\n                {\r\n                    cargando \r\n                        ? \r\n                            <ApiResponses.Loader activate={true}/> \r\n                        :\r\n                    error \r\n                        ? \r\n                            <ApiResponses.Error message={error} />\r\n                        :\r\n                    Id \r\n                        ? \r\n                            <div className={cn()}>\r\n                                <ScrollContainer\r\n                              \r\n                                 innerRef={this.container}>\r\n                            \t    <Tree  \r\n                            \t        lineWidth={'2px'}\r\n                            \t        lineColor={'gray'}\r\n                            \t        lineBorderRadius={'10px'}\r\n                            \t        label={\r\n                            \t            <StyledNode>\r\n                            \t               <h1>{this.props.organizationChartReducer.data.Area?.Name ? this.props.organizationChartReducer.data.Area?.Name : 'General'}</h1>\r\n                            \t            </StyledNode>\r\n                            \t        }\r\n                            \t    >\r\n                            \t        {\r\n                            \t            this.createOrganigrama(this.props.organizationChartReducer.data)\r\n                            \t        }\r\n                            \t    </Tree>\r\n                            \t</ScrollContainer>\r\n                            </div>\r\n                        : \r\n                            <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                        \r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer, areaReducer}) => {\r\n    return {organizationChartReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...areaActions\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as positionActions from '../components-position/reducer/positionActions'\r\nimport * as personalDetailActions from '../components-personal-detail/reducer/personalDetailActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\n\r\n\r\nclass OrganizationChart extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {\r\n            nodeId, \r\n            organizationChartMethods, \r\n            personalDetailMethods,\r\n            areaMethods,\r\n            companyId, \r\n            positionMethods\r\n        } = this.props;\r\n        nodeId && await organizationChartMethods({Id: nodeId}, 'GetOrganizationChart');\r\n        companyId && await positionMethods({companyId: companyId}, 'GetPositionsByCompanyId')\r\n        companyId && await personalDetailMethods({companyId: companyId}, 'GetPersonalDetailsByCompanyId')\r\n        companyId && await areaMethods({companyId: companyId, areaId: this.props.organizationChartReducer.data.AreasId}, 'GetAreasByCompanyIdWithoutTaken')\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            organizationChartMethods, \r\n            organizationChartReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PositionId,\r\n                PositionChartId,\r\n                CompanyId,\r\n                PersonDetailId,\r\n                AreasId\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PositionId: PositionId ? PositionId : '',\r\n            PersonDetailId: PersonDetailId ? PersonDetailId : '',\r\n            PositionChartId: PositionChartId ? PositionChartId : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            AreasId: AreasId ? AreasId : ''\r\n        }\r\n        await organizationChartMethods(model, action);\r\n    }\r\n\r\n    actionOrganizationChart = async () => {\r\n        const {\r\n            areaMethods,\r\n            organizationChartCleanState,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id,\r\n                    AreasId\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            // if(AreasId){\r\n                await areaMethods({areaId: AreasId, organizationChartId: Id}, 'PutAreaTaken')\r\n                //hago taken y hago untaken del area id del organization chart\r\n            // }\r\n            await this.sendAction('PutOrganizationChart');\r\n        }\r\n        if(this.props.organizationChartReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            organizationChartCleanState()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            organizationChartHandleValidation,\r\n            organizationChartHandleChange,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id, \r\n                    PositionId,\r\n                    PersonDetailId,\r\n                    AreasId\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            positionReducer: {\r\n                list_positions\r\n            },\r\n            personalDetailReducer: {\r\n                list_personal_details\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }\r\n\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionOrganizationChart}\r\n                textButton={ 'Guardar Puesto' }\r\n                textButtonLoading={'Guardando Puesto...' }\r\n                validations={validations}\r\n                handleValidations={organizationChartHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Puesto'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PositionId'}\r\n                    placeHolder={'Selecciona un Puesto'}\r\n                    inputValue={PositionId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PositionId}\r\n                    optionPlaceHolder={'Selecciona un Puesto'}\r\n                    options={list_positions}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Empleado'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PersonDetailId'}\r\n                    placeHolder={'Selecciona un Empleado'}\r\n                    inputValue={PersonDetailId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PersonDetailId}\r\n                    optionPlaceHolder={'Selecciona un Empleado'}\r\n                    options={list_personal_details}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Area'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'AreasId'}\r\n                    placeHolder={'Selecciona una Area o Departamento'}\r\n                    inputValue={AreasId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.AreasId}\r\n                    optionPlaceHolder={'Selecciona una Area o Departamento'}\r\n                    options={list_areas}\r\n                /> \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}) => {\r\n    return {organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...positionActions,\r\n    ...personalDetailActions,\r\n    ...areaActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);\r\n","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { \r\n    Card, \r\n    CardBody, \r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroup,\r\n    Input,\r\n    Col\r\n} from 'reactstrap'\r\nimport {ReadPosition} from '../components-position'\r\nimport {ApiResponses} from '../components-api'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nimport {Collapse} from '../config-components'\r\nimport './style.css'\r\n\r\nexport const Modals = ({positionId, children, modalTitle, name}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    return (\r\n      <>\r\n        <span role=\"button\" onClick={toggle}>{children}</span>\r\n        <Modal isOpen={modal} toggle={toggle} >\r\n          <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n          <ModalBody>\r\n            <h3>{name}</h3> \r\n            <ReadPosition positionId={positionId} />\r\n          </ModalBody>\r\n          {/* <ModalFooter>\r\n            <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{' '}\r\n            <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n          </ModalFooter> */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport const CardNode = ({positionId,name, employee, area, addChild, updateNode,deleteChild}) => {\r\n    const rArea = area ? area : '';\r\n    return(\r\n        \r\n        <Card>\r\n            <CardBody className=' d-flex justify-content-between'>\r\n                <div className={'mr-5 '}>\r\n                    <div className='font-weight-bold  mb-2' style={{textAlign: 'start'}}>\r\n                        <FaIcons.FaSquare className=\"mr-1 text-muted\" />{name}\r\n                    </div>\r\n                    <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                        {employee ? `${employee.Name} ${employee.LastName} ` :'Empleado'}\r\n                    </div> \r\n                    {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n                </div>\r\n                <div>\r\n                    \r\n                    <div>\r\n                        <Modals positionId={positionId} modalTitle={name} name={name} >\r\n                            <FaIcons.FaEye  className=\"text-secondary\" />\r\n                        </Modals>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div>\r\n                    <div>\r\n                        {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n \r\nclass OrganizationChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.container  = React.createRef();\r\n        this.state = {\r\n          value: ''\r\n        }\r\n      }\r\n\r\n      async componentDidMount() {\r\n        const {\r\n            organizationChartMethods,\r\n            areaMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n        companyId && await areaMethods({companyId: companyId}, 'GetAreasByCompanyIdTaken')\r\n   \r\n       \r\n        this.centerDiagram();\r\n    }\r\n\r\n    \r\n    centerDiagram = () => {\r\n        const element = this.container.current;\r\n        if (element) {\r\n            //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n            element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n        }\r\n    }\r\n\r\n    createOrganigrama =  (organigrama) => {\r\n        let OrganizationChart1 = organigrama?.OrganizationChart1\r\n        if(OrganizationChart1?.length === 0 || OrganizationChart1 === undefined || !OrganizationChart1){\r\n            \r\n            return <div>\r\n                    <Collapse.Node \r\n                        positionId = {organigrama?.Position?.Id}\r\n                        name={organigrama?.Position?.Name ? organigrama?.Position?.Name : 'Sin puesto'} \r\n                        employee = { organigrama.PersonalDetail}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n            </div>\r\n        }\r\n        \r\n        return <Collapse.Node\r\n            positionId = {organigrama?.Position?.Id}\r\n            labelButton={organigrama?.Position?.Name ? organigrama?.Position?.Name : 'Sin puesto'}\r\n            employee = { organigrama.PersonalDetail}\r\n            area = { organigrama.Area}\r\n            addChild={() => this.addChild(organigrama?.Id)}\r\n            updateNode={() => this.updateNode(organigrama?.Id)}\r\n        >\r\n                    {/* <Collapse.Node>\r\n                    \t<CardNode \r\n                    \t    positionId = {organigrama?.Position?.Id}\r\n                    \t    name = {organigrama?.Position?.Name ? organigrama?.Position?.Name : 'Sin puesto'} \r\n                    \t    employee = { organigrama.PersonalDetail}\r\n                    \t    area = { organigrama.Area}\r\n                    \t    addChild={() => this.addChild(organigrama?.Id)}\r\n                    \t    updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    \t/>\r\n                    </Collapse.Node> */}\r\n               \r\n            {\r\n                OrganizationChart1.map((child) => {  \r\n                             \r\n                    return <>\r\n                    \t{this.createOrganigrama(child)}\r\n                    </>\r\n                })\r\n            }\r\n        </Collapse.Node>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addUpChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    getOrganizationChartByArea = async(e) => {\r\n        debugger\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        value === 'general' ? \r\n            await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId') :\r\n            await organizationChartMethods({companyId, areaId: value},'GetOrganizationChartByArea');\r\n\r\n        this.centerDiagram();\r\n       \r\n    }\r\n\r\n    getCompleteOrganizationChart = async() => {\r\n        const {\r\n            organizationChartMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n    }\r\n\r\n    render () {\r\n\r\n        const { \r\n            organizationChartReducer:{\r\n                data: {Id},\r\n                api_actions: {\r\n                    cargando,\r\n                    error\r\n                }\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }, \r\n            hrefBase\r\n        } = this.props\r\n\r\n        return(\r\n            <div >\r\n               \r\n                <ul className=\"list-inline m-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${hrefBase}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \">\r\n                    \r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => this.getOrganizationChartByArea(e)}>\r\n                                <option value='general' >General</option>\r\n                                {\r\n                                    list_areas.map(area => {\r\n                                      \r\n                                        return <option value={area.Id}>\r\n                                            {area.Name}\r\n                                        </option>\r\n                                    })\r\n                                }\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </li>\r\n                </ul>\r\n               \r\n                {\r\n                    cargando \r\n                        ? \r\n                            <ApiResponses.Loader activate={true}/> \r\n                        :\r\n                    error \r\n                        ? \r\n                            <ApiResponses.Error message={error} />\r\n                        :\r\n                    Id \r\n                        ? \r\n                             \r\n                            <div className='container'> \r\n                                <h1>{this.props.organizationChartReducer.data.Area?.Name ? this.props.organizationChartReducer.data.Area?.Name : 'General'}</h1>\r\n                                {\r\n                                    this.createOrganigrama(this.props.organizationChartReducer.data)\r\n                                }\r\n                            </div>\r\n                            \t\r\n                        : \r\n                            <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                        \r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer, areaReducer}) => {\r\n    return {organizationChartReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...areaActions\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","import ComponentOrganizationChart from './OrganizationChart'\r\nimport ComponentUpdateChild from './UpdateChild'\r\nimport ComponentViewOrganizationChart from './ViewOrganizationChart'\r\n\r\nexport const OrganizationChart = ComponentOrganizationChart;\r\nexport const UpdateChild = ComponentUpdateChild;\r\nexport const ViewOrganizationChart = ComponentViewOrganizationChart;","import {OrganizationChart, UpdateChild, ViewOrganizationChart} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {AdminDashboardPages} from './'\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/admin-dashboard/company/${companyId}`}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/admin-dashboard/company/${companyId}/organization-chart`}/>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport { PersonDetail as TemplatesPersonalDetail} from '../templates'\r\n\r\n\r\nexport const ListOfPersonDetails = () =>{\r\n    \r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/admin-dashboard' />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport {Area as TemplateArea} from '../templates'\r\n\r\nexport const ListOfAreas = () =>{\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplateArea.ListOfAreas redirectUser={'/admin-dashboard'} />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentUsers from './Users'\r\nimport * as ComponentSections from './Sections'\r\nimport * as ComponentCourses from './Courses'\r\nimport * as ComponentProducts from './Products'\r\nimport * as ComponentDashboard from './Dashboard'\r\nimport * as ComponentCompany from './Company'\r\nimport * as ComponentPositions from './Position'\r\nimport * as ComponentOrganizationChart from './OrganizationChart'\r\nimport * as ComponentPersonalDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\n\r\nexport const AdminUsersPages = ComponentUsers;\r\nexport const AdminSectionsPages = ComponentSections;\r\nexport const AdminCoursesPages = ComponentCourses;\r\nexport const AdminProductPages = ComponentProducts;\r\nexport const AdminDashboardPages = ComponentDashboard;\r\nexport const AdminCompanyPages = ComponentCompany;\r\nexport const AdminPositionsPages = ComponentPositions;\r\nexport const AdminOrganizationChart = ComponentOrganizationChart;\r\nexport const AdminPersonalDetail = ComponentPersonalDetail;\r\nexport const AdminArea = ComponentArea;\r\n\r\n\r\n\r\n","import {ViewOrganizationChart, UpdateChild} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {DashboardUserTemplate} from './'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/user-dashboard/company/${companyId}`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/user-dashboard/company/${companyId}/organization-chart`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react' \r\nimport {Row} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {Container} from 'reactstrap'\r\nimport {Navbars} from '../../config-components'\r\nimport {\r\n    Company, \r\n    Position as TemplatePosition, \r\n    PersonDetail as TemplatesPersonalDetail,\r\n    Area as TemplateArea\r\n} from '../templates'\r\nimport * as ComponentsOrganizatioChart from './OrganizationChart'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { } from '../templates'\r\n\r\n\r\nexport const DashboardUserTemplate = ({children}) => {\r\n    return(\r\n            <>\r\n                <Navbars.User />\r\n                <section className=\"bg-light h-100 py-6\">\r\n                    <Container>\r\n                        {children}\r\n                    </Container>\r\n                </section>\r\n            </>\r\n    )\r\n}\r\n\r\nexport const DashboardUserPage = () => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const {companyId} = useParams();\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <Company.Indicators companyName={TradeName} companyId={companyId} hrefBase={'user-dashboard'}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPositionPage = () =>{\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatePosition.ListOfPositions \r\n                    reDirect={`/user-dashboard/company/companyId/update-position/positionId`}\r\n                    reDirectBase='/user-dashboard/company/companyId'\r\n                    reDirectCreate='/user-dashboard/company/companyId/create-position'\r\n                />\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserCreatePosition = () =>{\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/user-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect='/user-dashboard/company/companyId/positions'\r\n                    />\r\n                </Row>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPersonDetails = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/user-dashboard' />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfAreas = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplateArea.ListOfAreas redirectUser={'/user-dashboard'} />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserOrganizationChart = ComponentsOrganizatioChart;","// Imports de react.\r\nimport React from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\n// Imports del landing page\r\nimport * as Landings from './pages/landing'\r\nimport {NotFoundPage} from './pages/NotFoundPage'\r\n\r\n// Imports de PageSessions.\r\n//import {LoginPage} from './pages/Login'\r\nimport {\r\n  LoginPage,\r\n  SignUpPage,\r\n  ForgotPassword,  \r\n  CheckYourAccount,\r\n  ChangePasswordPage\r\n} from './pages/session'\r\n\r\n// Imports de Páginas del administrador\r\nimport {\r\n  AdminUsersPages, \r\n  AdminSectionsPages, \r\n  AdminCoursesPages,\r\n  AdminProductPages,\r\n  AdminDashboardPages,\r\n  AdminCompanyPages,\r\n  AdminPositionsPages,\r\n  AdminOrganizationChart,\r\n  AdminPersonalDetail,\r\n  AdminArea\r\n}from './pages/admin'\r\n\r\n/* Imports de Páginas de usario */\r\nimport {\r\n  DashboardUserPage,\r\n  UserOrganizationChart,\r\n  UserListOfPositionPage,\r\n  UserCreatePosition,\r\n  UserListOfPersonDetails,\r\n  UserCreatePersonDetail,\r\n  UserUpdatePersonDetail,\r\n  UserListOfAreas,\r\n  UserCreateArea,\r\n  UserUpdateArea\r\n} from './pages/user'\r\n\r\nimport {OrganizationChart} from './components-organization-chart'\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter >\r\n        <Switch>\r\n          {/* Páginas de Home */}\r\n          <Route  exact path=\"/\" component={Landings.SoftwareAgency}></Route>\r\n          <Route  exact path=\"/products\" component={Landings.Products}></Route>\r\n\r\n         \r\n\r\n          {/* Páginas para el manejo de sesión */}\r\n          <Route  exact path=\"/login\" component={LoginPage}></Route>\r\n          <Route  exact path=\"/sign-up\" component={SignUpPage}></Route>\r\n          <Route  exact path=\"/forgot-password\" component={ForgotPassword}></Route>\r\n          <Route  exact path=\"/check-your-account\" component={CheckYourAccount}></Route>\r\n          <Route  exact path=\"/change-password/:code/:email\" component={ChangePasswordPage}></Route>\r\n  \r\n          {/* Páginas para el admin */}\r\n          <Route  exact path=\"/admin-dashboard\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard/:indicator\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-user/:userId\" component={AdminUsersPages.ReadUser}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-admin/:userId\" component={AdminUsersPages.ReadAdmin}></Route>\r\n          { /* crud empresas */ }\r\n          <Route  exact path=\"/admin-dashboard/create-company/:userId\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId\" component={AdminCompanyPages.Indicators}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/positions\" component={AdminPositionsPages.ListOfPositions}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-position\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-position/:positionId\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={AdminOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart/node/:nodeId\" component={AdminOrganizationChart.UpdateCurrent}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/employees\" component={AdminPersonalDetail.ListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-personal-detail\" component={AdminPersonalDetail.CreatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={AdminPersonalDetail.UpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/areas\" component={AdminArea.ListOfAreas}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-area\" component={AdminArea.CreateArea}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-area/:areaId\" component={AdminArea.UpdateArea}></Route>\r\n\r\n         \r\n          {/* <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={OrganizationChart}></Route> */}\r\n\r\n          <Route  exact path=\"/admin-dashboard/product/:productId/:section\" component={AdminProductPages.EditProduct}></Route>\r\n          { /* crud videos para admins */ }\r\n          <Route  exact path=\"/admin-dashboard/course/:courseId\" component={AdminCoursesPages.EditCourse}></Route>\r\n          <Route  exact path=\"/admin-dashboard/section/:courseId\" component={AdminSectionsPages.CreateSection}></Route>\r\n          <Route exact path=\"/player/watch-class/:productId/:courseId\" component={AdminCoursesPages.WhatchCourse}/>\r\n\r\n          {/* Páginas para dashboard de usuarios */}\r\n          <Route  exact path=\"/user-dashboard/company/:companyId\" component={DashboardUserPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/organization-chart\" component={UserOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/positions\" component={UserListOfPositionPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-position\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-position/:positionId\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/employees\" component={UserListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-personal-detail\" component={UserCreatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={UserUpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/areas\" component={UserListOfAreas}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-area\" component={UserCreateArea}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-area/:areaId\" component={UserUpdateArea}></Route>\r\n\r\n          <Route  exact path=\"/organigrama-prueba\" component={OrganizationChart}></Route>\r\n\r\n\r\n          {/* Vista pare ver un video de un curso */}\r\n          <Route path=\"*\" component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION\r\n} from \"./loginTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    roles: localStorage.getItem(\"role\"),\r\n    grant_type: \"password\",\r\n    username: \"\",\r\n    password: \"\",\r\n    access_token: \"\",\r\n  },\r\n  validations: {\r\n    username: \"\",\r\n    password: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          roles: localStorage.getItem(\"role\"),\r\n          grant_type: \"password\",\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          grant_type: \"password\",\r\n          roles: action.payload.roles,\r\n          username: action.payload.username,\r\n          password: action.payload.password,\r\n          access_token: action.payload.access_token,\r\n          userName: action.payload.userName,\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: \"\",\r\n    Roles: \"\",\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"email\",\r\n    TypeUser: '',\r\n    Idd: \"\",\r\n  },\r\n  validations: {\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"\",\r\n    Idd: \"\",\r\n  },\r\n};\r\n\r\nconst reducer =  (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: \"\",\r\n          Roles: \"\",\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser:\"\"\r\n        },\r\n      };\r\n    case SIGN_UP_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          Roles: action.payload.Roles,\r\n          UserName: action.payload.UserName,\r\n          PhoneNumber: action.payload.PhoneNumber,\r\n          Email: action.payload.Email,\r\n          Password: action.payload.Password,\r\n          ConfirmPassword: action.payload.ConfirmPassword,\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: action.payload.Idd,\r\n          TypeUser: action.payload.TypeUser\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n      };\r\n\r\n      case SIGN_UP_PRELOADED_DATA:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Roles: action.payload.Roles,\r\n            UserName: action.payload.UserName,\r\n            PhoneNumber: action.payload.PhoneNumber,\r\n            Email: action.payload.Email,\r\n            Password: action.payload.Password,\r\n            ConfirmPassword: action.payload.ConfirmPassword,\r\n            ValidateByPhoneOrEmail: \"email\",\r\n            Idd: action.payload.Idd,\r\n            TypeUser: action.payload.TypeUser\r\n          },\r\n          validations: {\r\n            UserName: \"\",\r\n            PhoneNumber: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            ValidateByPhoneOrEmail: \"\",\r\n            Idd: \"\",\r\n            TypeUser: \"\"\r\n          },\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n  } from \"./changePasswordTypes\";\r\n\r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      phoneOrEmail: '',\r\n      Code:'',\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n      usernameOrEmailOrPhoneNumber:'',\r\n    },\r\n    validations: {\r\n      phoneOrEmail: \"\",\r\n      Code:true,\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n    },\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_PASSWORD_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_USER:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              cargando: false,\r\n              error: \"\",\r\n            },\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_CRUD,\r\n    COMPANIES_LIST,\r\n    COMPANY_HANDLE_VALIDATION\r\n  } from \"./companyTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity: '',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      \r\n    },\r\n    validations: {\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity:'',\r\n      fileCover: ''\r\n    },\r\n    list_companies: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COMPANY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COMPANY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity: '',\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity:'',\r\n            fileCover: ''\r\n          },\r\n          list_companies: [],\r\n        };\r\n      case COMPANY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            UserId: action.payload.UserId,\r\n            TradeName:  action.payload.TradeName,\r\n            BusinessName: action.payload.BusinessName,\r\n            BusinessActivity:  action.payload.BusinessActivity,\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: true,\r\n            BusinessName: true,\r\n            BusinessActivity: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COMPANIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_companies: action.payload,\r\n        };\r\n  \r\n      case \"company_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_CRUD,\r\n    POSITIONS_LIST,\r\n    POSITION_HANDLE_VALIDATION\r\n  } from \"./positionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      Description: \"\",\r\n      Description2: \"\",\r\n      CompanyId:'',\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      Description2: \"\",\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    list_positions: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case POSITION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case POSITION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            Description: \"\",\r\n            Description2: \"\",\r\n            CompanyId:'',\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Description2: \"\",\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          list_positions: [],\r\n        };\r\n      case POSITION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            Description: action.payload.Description,\r\n            Description2: action.payload.Description2,\r\n            CompanyId: action.payload.CompanyId,\r\n            Objective: action.payload.Objective,\r\n            Knowledge: action.payload.Knowledge,\r\n            Salary: action.payload.Salary\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Description: action.payload.Description ? true : '',\r\n            Description2: action.payload.Description2 ? true : '',\r\n            Objective: action.payload.Objective ? true: '',\r\n            Knowledge: action.payload.Knowledge ? action.payload.Knowledge: '',\r\n            Salary: action.payload.Salary ? true: ''\r\n          },\r\n          list_positions: [],\r\n        };\r\n  \r\n      case POSITIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_positions: action.payload,\r\n        };\r\n  \r\n      case \"position_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_CRUD,\r\n    ORGANIZATION_CHARTS_LIST,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n    ORGANIZATION_CHART_CHILD\r\n  } from \"./organizationChartTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      PositionId:0,\r\n      CompanyId: 0,\r\n      PersonDetailId:0,\r\n      AreasId: 0,\r\n      PositionChartId: 0,\r\n      OrganizationChart1: [],\r\n      Position: {},\r\n      PersonalDetail: {},\r\n      Area: {}\r\n    },\r\n    child: {\r\n        Id: 0,\r\n        DateCreated:'',\r\n        DateModified:'',\r\n        PositionId:0,\r\n        CompanyId: 0,\r\n        PersonDetailId:0,\r\n        AreasId: 0,\r\n        PositionChartId: 0,\r\n        OrganizationChart1: []\r\n      },\r\n    validations: {\r\n      PositionId: \"\",\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n    },\r\n    list_organization_chart: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ORGANIZATION_CHART_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PositionId:0,\r\n            CompanyId: 0,\r\n            PersonDetailId:0,\r\n            AreasId: 0,\r\n            PositionChartId: 0,\r\n            OrganizationChart1: [],\r\n            Position:{},\r\n            PersonalDetail:{},\r\n            Area: {}\r\n\r\n          },\r\n          child: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PositionId:0,\r\n            CompanyId: 0,\r\n            PersonDetailId:0,\r\n            AreasId: 0,\r\n            PositionChartId: 0,\r\n            OrganizationChart1: [],\r\n            Position:{},\r\n            PersonalDetail:{},\r\n            Area: {}\r\n\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n      case ORGANIZATION_CHART_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PositionId:action.payload.PositionId,\r\n            CompanyId: action.payload.CompanyId,\r\n            PersonDetailId:action.payload.PersonDetailId,\r\n            AreasId: action.payload.AreasId,\r\n            PositionChartId: action.payload.PositionChartId,\r\n            OrganizationChart1: action.payload.OrganizationChart1,\r\n            Position: action.payload.Position,\r\n            PersonalDetail: action.payload.PersonalDetail,\r\n            Area: action.payload.Area\r\n\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n\r\n        case ORGANIZATION_CHART_CHILD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          child: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PositionId:action.payload.PositionId,\r\n            CompanyId: action.payload.CompanyId,\r\n            PersonDetailId:action.payload.PersonDetailId,\r\n            AreasId: action.payload.AreasId,\r\n            PositionChartId: action.payload.PositionChartId,\r\n            OrganizationChart1: action.payload.OrganizationChart1,\r\n            Position: action.payload.Position,\r\n            Area: action.payload.Area\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n  \r\n      case ORGANIZATION_CHARTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_organization_chart: action.payload,\r\n        };\r\n  \r\n      case \"organization_chart_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_CRUD,\r\n    PERSONAL_DETAILS_LIST,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      LastName: \"\",\r\n      SecondLastName:'',\r\n      CompanyId:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      LastName:'',\r\n      SecondLastName:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:''\r\n    },\r\n    list_personal_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PERSONAL_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            LastName: \"\",\r\n            SecondLastName:'',\r\n            CompanyId:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            LastName:'',\r\n            SecondLastName:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:''\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n      case PERSONAL_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            LastName:  action.payload.LastName,\r\n            SecondLastName: action.payload.SecondLastName,\r\n            CompanyId: action.payload.CompanyId,\r\n            RFC: action.payload.RFC,\r\n            Birthdate: action.payload.Birthdate?.slice(0, 10),\r\n            Gender:action.payload.Gender \r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            LastName: action.payload.LastName ? true : '',\r\n            SecondLastName: action.payload.SecondLastName ? true : '',\r\n            RFC: action.payload.RFC ? true : '',\r\n            Birthdate: action.payload.Birthdate ? true : '',\r\n            Gender: action.payload.Gender ? true : ''\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n  \r\n      case PERSONAL_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_personal_details: action.payload,\r\n        };\r\n  \r\n      case \"personal_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_CRUD,\r\n    AREAS_LIST,\r\n    AREA_HANDLE_VALIDATION\r\n  } from \"./areaTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      CompanyId:'',\r\n      Type:'',\r\n     \r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Type:'',\r\n    },\r\n    list_areas: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case AREA_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case AREA_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case AREA_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            CompanyId: \"\",\r\n            Type:'',\r\n           \r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Type:'',\r\n          },\r\n          list_areas: [],\r\n        };\r\n      case AREA_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CompanyId:  action.payload.CompanyId,\r\n            Type:  action.payload.Type,\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Type: action.payload.Type ? true : '',\r\n          },\r\n          list_areas: [],\r\n        };\r\n  \r\n      case AREAS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_areas: action.payload,\r\n        };\r\n  \r\n      case \"area_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_CRUD,\r\n    JOB_DETAILS_LIST,\r\n    JOB_DETAIL_HANDLE_VALIDATION\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      PersonDetailId:'',\r\n      DateAdmission: \"\",\r\n      Contract:'',\r\n      Benefits:'',\r\n      IntegratedSalary:'',\r\n      DailySalary:'',\r\n      Type:''\r\n    },\r\n    validations: {\r\n        DateAdmission: \"\",\r\n        Contract:'',\r\n        Benefits:'',\r\n        IntegratedSalary:'',\r\n        DailySalary:'',\r\n        Type:''\r\n    },\r\n    list_job_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case JOB_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case JOB_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PersonDetailId:'',\r\n            DateAdmission:'',\r\n            Contract:'',\r\n            Benefits:'',\r\n            IntegratedSalary:'',\r\n            DailySalary:'',\r\n            Type:''\r\n          },\r\n          validations: {\r\n              DateAdmission: \"\",\r\n              Contract:'',\r\n              Benefits:'',\r\n              IntegratedSalary:'',\r\n              DailySalary:'',\r\n              Type:''\r\n          },\r\n          list_job_details: [],\r\n        };\r\n      case JOB_DETAIL_CRUD:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PersonDetailId: action.payload.PersonDetailId,\r\n            DateAdmission: action.payload.DateAdmission?.slice(0, 10),\r\n            Contract: action.payload.Contract,\r\n            Benefits: action.payload.Benefits,\r\n            IntegratedSalary: action.payload.IntegratedSalary,\r\n            DailySalary: action.payload.DailySalary,\r\n            Type: action.payload.Type\r\n          },\r\n          validations: {\r\n              DateAdmission: action.payload.DateAdmission ? true : '',\r\n              Contract: action.payload.Contract ? true : '',\r\n              Benefits: action.payload.Benefits ? true : '',\r\n              IntegratedSalary: action.payload.IntegratedSalary ? true : '',\r\n              DailySalary: action.payload.DailySalary ? true : '',\r\n              Type: action.payload.Type ? true : ''\r\n          },\r\n          \r\n          list_job_details: [],\r\n        };\r\n  \r\n      case JOB_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_job_details: action.payload,\r\n        };\r\n  \r\n      case \"personal_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_CRUD,\r\n    CATEGORIES_LIST,\r\n    CATEGORY_HANDLE_VALIDATION\r\n  } from \"./categoryTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_VALIDATION: \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories: [],\r\n        };\r\n      case CATEGORY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories_products: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories_products: [],\r\n        };\r\n      case CATEGORY_PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories_products: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_CRUD,\r\n    PRODUCTS_LIST,\r\n    PRODUCT_HANDLE_VALIDATION\r\n  } from \"./productTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n      Price: '',\r\n      ProductCategoryId:'',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      Categories: []\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      ProductCategoryId:'',\r\n      fileCover: ''\r\n    },\r\n    list_products: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n            Price: '',\r\n            ProductCategoryId:'',\r\n            Blobs:[],\r\n            Categories: [],\r\n            fileCover: ''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Price:'',\r\n            ProductCategoryId:'',\r\n            fileCover: ''\r\n          },\r\n          list_products: [],\r\n        };\r\n      case PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n            Price: action.payload.Price,\r\n            ProductCategoryId:action.payload.ProductCategoryId,\r\n            Blobs: action.payload.Blobs,\r\n            Categories: action.payload.Categories\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n            Price: true,\r\n            ProductCategoryId: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_products: action.payload,\r\n        };\r\n  \r\n      case \"product_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_CRUD,\r\n    PRODUCT_DETAILS_LIST,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      SubTitle:'',\r\n      Description:'',\r\n      ProductId: '',\r\n      BlobId: '',\r\n      fileZip: '',\r\n      Blob: {}\r\n    },\r\n    validations: {\r\n        SubTitle:'',\r\n        Description:'',\r\n        fileZip: ''\r\n    },\r\n    list_product_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            SubTitle:'',\r\n            Description:'',\r\n            ProductId: '',\r\n            BlobId: '',\r\n            fileZip: '',\r\n            Blob: {}\r\n          },\r\n          validations: {\r\n              SubTitle:'',\r\n              Description:'',\r\n              fileZip: ''\r\n          },\r\n          list_product_details: [],\r\n        };\r\n      case PRODUCT_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            SubTitle:action.payload.SubTitle,\r\n            Description:action.payload.Description,\r\n            ProductId: action.payload.ProductId,\r\n            BlobId: action.payload.BlobId,\r\n            Blob: action.payload.Blob\r\n          },\r\n          validations: {\r\n              SubTitle:true,\r\n              Description:true,\r\n              fileZip: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCT_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_product_details: action.payload,\r\n        };\r\n  \r\n      case \"product_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","export const COURSE_CARGANDO = \"course_cargando\";\r\nexport const COURSE_ERROR = \"course_error\";\r\nexport const COURSE_HANDLE_CHANGE = \"course_handle_change\";\r\nexport const COURSE_CLEAN_STATE = \"course_clean_state\";\r\nexport const COURSE_CRUD = \"course_crud\";\r\nexport const COURSES_LIST = \"courses_list\";\r\nexport const COURSE_HANDLE_VALIDATION = \"course_handle_validation\";","import {\r\n    COURSE_CARGANDO,\r\n    COURSE_ERROR,\r\n    COURSE_HANDLE_CHANGE,\r\n    COURSE_CLEAN_STATE,\r\n    COURSE_CRUD,\r\n    COURSES_LIST,\r\n    COURSE_HANDLE_VALIDATION\r\n  } from \"./courseTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    list_courses: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COURSE_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COURSE_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          list_courses: [],\r\n        };\r\n      case COURSE_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COURSES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_courses: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    list_sections: [],\r\n    list_sections_select: []\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case SECTION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case SECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name: \"\",\r\n            CourseId: \"\"\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            CourseId:'',\r\n          },\r\n          list_sections: [],\r\n          list_sections_select: []\r\n        };\r\n      case SECTION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CourseId:action.payload.CourseId,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            CourseId:true,\r\n          },\r\n          list_brands: [],\r\n          list_sections_select: []\r\n        };\r\n  \r\n      case SECTIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections: action.payload,\r\n        };\r\n      case SECTIONS_SELECT:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections_select: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_CRUD,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    ADMIN_USERS_LIST,\r\n  } from \"./adminTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      cargandoUsername: false,\r\n      errorUsername: '',\r\n      cargandoEmail: false,\r\n      errorEmail: '',\r\n      cargandoPhone: false,\r\n      errorPhone: '',\r\n      cargandoPassword: false,\r\n      errorPassword: '',\r\n      cargandoValidateAccount: '',\r\n      errorValidateAccount: '',\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: '',\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    validations: {\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    list_users: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ADMIN_CARGANDO:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload]: true,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            errorValidateAccount: ''\r\n          },\r\n        };\r\n      case ADMIN_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            cargandoValidateAccount: false,\r\n            [action.payload.typeError]: action.payload.messageError,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n              ? [action.payload.e.files[0]]\r\n              : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_VALIDATION:\r\n        return {\r\n            ...state,\r\n            validations: {\r\n              ...state.validations,\r\n              [action.payload.name]: action.payload.isInvalid,\r\n            },\r\n          };\r\n      case ADMIN_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {},\r\n          validations: {},\r\n        };\r\n      case ADMIN_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload.cargando]: false,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            UserName: action.payload.UserName ? action.payload.UserName : '',\r\n            Email: action.payload.Email ? action.payload.Email : '',\r\n            EmailConfirmed: action.payload.EmailConfirmed ? action.payload.EmailConfirmed : '',\r\n            PhoneNumber: action.payload.PhoneNumber ? action.payload.PhoneNumber : '',\r\n          },\r\n          validations: {\r\n            UserName: true,\r\n            Email: true,\r\n            EmailConfirmed: '',\r\n            PhoneNumber: '',\r\n            Password: '',\r\n            ConfirmPassword: '',\r\n          },\r\n        };\r\n  \r\n      case ADMIN_USERS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          list_users: action.payload,\r\n        };\r\n  \r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              errorUsername: '',\r\n              errorEmail: '',\r\n              error: \"\",    \r\n              errorPhone: '',\r\n              errorPassword: '',\r\n              cargando: false,\r\n              cargandoUsername: false,\r\n              cargandoEmail: false,\r\n              cargandoPhone: false,\r\n              cargandoPassword: false,\r\n              errorValidateAccount: '',\r\n              cargandoValidateAccount: false\r\n            },\r\n          };\r\n  \r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    count_products: 0,\r\n    count_courses: 0,\r\n    count_users: 0,\r\n    count_admins: 0,\r\n    count_companies: 0,\r\n    count_positions: 0,\r\n    count_personal_details: 0,\r\n    count_areas: 0\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ANALYTICS_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ANALYTICS_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n  \r\n      case ANALYTICS_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: 0,\r\n        };\r\n  \r\n      case ANALYTICS_COUNT_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_COURSES:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_courses: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_USERS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_users: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_ADMINS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_admins: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_COMPANIES:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_companies: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_POSITIONS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_positions: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_PERSONAL_DETAILS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_personal_details: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_AREAS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_areas: action.payload,\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: 0,\r\n    UserId: \"\",\r\n    DateCreated: \"\",\r\n    DateModified: \"\",\r\n    BlobName: \"\",\r\n    BlobTypeId: \"\",\r\n    ContainerName: \"\",\r\n    IsPrivate: true,\r\n    Uri: null,\r\n    BlobType: null,\r\n    Brand_Blob: [],\r\n    Product_Blob: [],\r\n    BlogPosts: [],\r\n    AspNetUsers: [],\r\n  },\r\n  validations: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case BLOB_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case BLOB_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case BLOB_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n\r\n    case BLOB_HANDLE_VALIDATION:\r\n      let messageError = \"\";\r\n      if (action.payload.props.valueInput === \"\") {\r\n        messageError = \"El campo no puede ir vacio\";\r\n      }\r\n      if (action.payload.props.isInvalid !== \"\") {\r\n        messageError = action.payload.props.isInvalid;\r\n      }\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: messageError,\r\n        },\r\n      };\r\n    case BLOB_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: 0,\r\n          UserId: \"\",\r\n          DateCreated: \"\",\r\n          DateModified: \"\",\r\n          BlobName: \"\",\r\n          BlobTypeId: \"\",\r\n          ContainerName: \"\",\r\n          IsPrivate: true,\r\n          Uri: null,\r\n          BlobType: null,\r\n          Brand_Blob: [],\r\n          Product_Blob: [],\r\n          BlogPosts: [],\r\n          AspNetUsers: [],\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    case BLOB_CRUD:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          UserId: action.payload.UserId,\r\n          DateCreated: action.payload.DateCreated,\r\n          DateModified: action.payload.DateModified,\r\n          BlobName: action.payload.BlobName,\r\n          BlobTypeId: action.payload.BlobTypeId + \"\",\r\n          ContainerName: action.payload.ContainerName,\r\n          IsPrivate: action.payload.IsPrivate,\r\n          Uri: action.payload.Uri,\r\n          BlobType: action.payload.BlobType,\r\n          Brand_Blob: action.payload.Brand_Blob,\r\n          Product_Blob: action.payload.Product_Blob,\r\n          BlogPosts: action.payload.BlogPosts,\r\n          AspNetUsers: action.payload.AspNetUsers,\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","// Imports de redux.\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Components-session.\r\nimport loginReducer from \"../components-session/reducer-login/loginReducer\";\r\nimport signUpReducer from \"../components-session/sign-up-reducer/signUpReducer\";\r\nimport changePasswordReducer from \"../components-session/change-password/reducer/changePasswordReducer\";\r\n\r\n// Components\r\nimport companyReducer from '../components-company/reducer/companyReducer'\r\nimport positionReducer from '../components-position/reducer/positionReducer'\r\nimport organizationChartReducer from '../components-organization-chart/reducer/organizationChartReducer'\r\nimport personalDetailReducer from '../components-personal-detail/reducer/personalDetailReducer'\r\nimport areaReducer from '../components-area/reducer/areaReducer'\r\nimport jobDetailReducer from '../components-job-detail/reducer/jobDetailReducer'\r\n\r\n// Components que tienen que ver con producto.\r\nimport categoryReducer from '../components-category/reducer/categoryReducer'\r\nimport categoryProductReducer from '../components-category-product/reducer/categoryProductReducer'\r\nimport productReducer from '../components-product/reducer/productReducer'\r\nimport productDetailReducer from '../components-product-details/reducer/productDetailReducer'\r\n\r\n\r\n// Componentes que tienen que ver con cursos.\r\nimport courseReducer from '../components-course/reducer/courseReducer'\r\nimport sectionReducer from '../components-section/reducer/sectionReducer'\r\n\r\n// Componentes de administrador.\r\nimport adminReducer from '../components-admin/reducer/adminReducer'\r\n// Components de analiticos.\r\nimport analyticsReducer from '../components-analytics/reducer/analyticsReducer'\r\n\r\n// Componentes de blobs.\r\nimport blobReducer from '../components-blob/blob-reducer/blobReducer'\r\n\r\n// Reducers.\r\nexport default combineReducers({\r\n    // Reducers de sesión.\r\n    loginReducer,\r\n    changePasswordReducer,\r\n    signUpReducer,\r\n    // Components.\r\n    companyReducer,\r\n    positionReducer,\r\n    organizationChartReducer,\r\n    personalDetailReducer,\r\n    categoryReducer,\r\n    categoryProductReducer,\r\n    productReducer,\r\n    productDetailReducer,\r\n    areaReducer,\r\n    jobDetailReducer,\r\n    // Componentes que tienen que ver con cursos.\r\n    courseReducer,\r\n    sectionReducer,\r\n    // Componentes de administrador.\r\n    adminReducer,\r\n    // Componentes de analiticos.\r\n    analyticsReducer,\r\n    // Componentes de blobs\r\n    blobReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './scss/app.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Imports de components-api.\r\nimport {setPathApi} from './components-api/ConfigApi';\r\n\r\n// Imports de redux.\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// Google Fonts\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Poppins:400,600', 'sans-serif']\r\n  }\r\n});\r\n\r\n// Store de reducers.\r\nconst store = createStore(reducers, {}, composeWithDevTools(applyMiddleware(reduxThunk)));\r\n\r\n// Configuración de la ruta del api.\r\nsetPathApi();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n      <App />\r\n    {/* </React.StrictMode> */}\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}