{"version":3,"sources":["img/product.jpg","img/cristian.jpg","img/Jesus.jpg","img/version-4-logo.svg","img/organigrama.jpeg","img/puestos.jpeg","img/descripciones.jpeg","img/procesos.jpeg","img/index.js","config-components/Logos.js","components-api/ConfigApi.js","config-components/Navbars.js","config-components/Cards.js","config-components/DropDowns.js","components-api/ApiResponses.js","config-components/Filter.js","components-api/index.js","config-components/Inputs.js","config-components/Modals.js","config-components/NotFound.js","config-components/RegularExpressions.js","img/tab-1.png","img/tab-2.png","config-components/Tabs.js","config-components/ExternalLinks.js","config-components/index.js","img/hero-xs.png","img/vscode.svg","pages/landing/SoftwareAgency.js","components-product/ReadCardProduct.js","components-product/reducer/productTypes.js","components-product/reducer/productActions.js","components-product/CardProduct.js","components-product/ListOfCardProducts.js","components-product/ListOfProducts.js","components-category/reducer/categoryTypes.js","components-category/reducer/categoryActions.js","components-product/index.js","pages/landing/Products.js","pages/landing/index.js","pages/NotFoundPage.js","components-session/reducer-login/loginTypes.js","components-session/reducer-login/loginActions.js","components-session/Login.js","components-session/sign-up-reducer/signUpTypes.js","components-session/sign-up-reducer/signUpActions.js","components-session/SignUp.js","components-session/change-password/reducer/changePasswordTypes.js","components-session/change-password/reducer/changePasswordActions.js","components-session/change-password/ChangePassword.js","components-session/change-password/ChangePasswordForUser.js","components-session/change-password/SendEmail.js","components-session/index.js","pages/session/index.js","components-analytics/reducer/analyticsTypes.js","components-analytics/reducer/analyticsActions.js","components-admin/Indicators.js","components-admin/reducer/adminTypes.js","components-admin/reducer/adminActions.js","components-admin/ListOfUsers.js","components-admin/UpdateUserInfo.js","components-admin/ValidateAccount.js","components-admin/index.js","pages/admin/Users.js","components-section/reducer/sectionTypes.js","components-section/reducer/sectionActions.js","components-section/Section.js","components-section/ModalSections.js","components-category-product/reducer/categoryProductTypes.js","components-category-product/reducer/categoryProductActions.js","components-blob/blob-reducer/blobType.js","components-blob/blob-reducer/blobActions.js","components-blob/blobUtils.js","components-product/Product.js","components-product/ModalProducts.js","components-section/ListOfSections.js","components-section/index.js","components-section/CrudCourse.js","pages/admin/Dashboard.js","pages/admin/Sections.js","components-course/Course.js","components-course/ListOfCourses.js","components-player/Player.js","components-player/index.js","config-components/Collapse.js","config-components/TabCourse.js","components-course/WatchClass.js","components-course/index.js","pages/admin/Courses.js","components-category-product/CategoryProduct.js","components-category-product/ListOfCategoriesOfProducts.js","components-category/Category.js","components-category/ModalCategory.js","components-product-details/reducer/productDetailsTypes.js","components-product-details/reducer/productDetailActions.js","components-product-details/ProductDetails.js","components-product-details/index.js","pages/admin/Products.js","components-company/reducer/companyTypes.js","components-company/reducer/companyActions.js","components-company/Company.js","components-company/CompanyIndicators.js","components-company/index.js","components-company/ListOfCompanies.js","pages/admin/Company.js","components-position/reducer/positionTypes.js","components-position/reducer/positionActions.js","components-position/Positions.js","components-position/index.js","components-position/ListOfPositions.js","components-position/Responsibilities.js","components-position/ReadPosition.js","pages/admin/Position.js","components-organization-chart/reducer/organizationChartTypes.js","components-organization-chart/reducer/organizationChartActions.js","components-organization-chart/OrganizationChart.js","components-organization-chart/UpdateChild.js","components-organization-chart/index.js","pages/admin/OrganizationChart.js","pages/admin/index.js","pages/user/index.js","App.js","reportWebVitals.js","components-session/reducer-login/loginReducer.js","components-session/sign-up-reducer/signUpReducer.js","components-session/change-password/reducer/changePasswordReducer.js","components-company/reducer/companyReducer.js","components-position/reducer/positionReducer.js","components-organization-chart/reducer/organizationChartReducer.js","components-category/reducer/categoryReducer.js","components-category-product/reducer/categoryProductReducer.js","components-product/reducer/productReducer.js","components-product-details/reducer/productDetailReducer.js","components-course/reducer/courseTypes.js","components-course/reducer/courseReducer.js","components-section/reducer/sectionReducer.js","components-admin/reducer/adminReducer.js","components-analytics/reducer/analyticsReducer.js","components-blob/blob-reducer/blobReducer.js","reducers/index.js","index.js"],"names":["Img","src","width","alt","className","ImgOrganigrama","Organigrama","ImgProcesos","Procesos","ImgPuestos","Puestos","ImgDescripciones","Descripciones","SvgLogo","Logo","ImgProduct","uri","ProductDefault","LogoNavbar","href","to","errorResponse","data","ModelState","Message","error_description","error","errorHandler","messageError","response","status","setLocalStorage","window","open","configHeader","token","localStorage","getItem","headers","Authorization","respuesta","undefined","removeItem","setItem","access_token","roles","userName","axios_api","a","header","apiMethod","body","config","pathApi","toLowerCase","axios","get","post","put","delete","signOff","e","preventDefault","setPathApi","route","Navbars","useState","isOpen","setIsOpen","Navbar","expand","Container","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","NavbarAdmin","light","NavbarBrand","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","User","color","CardAnalytics","title","number","icon","rTitle","rNumber","rIcon","Card","CardBody","DropDownActions","children","labelButton","dropdownOpen","setDropdownOpen","Dropdown","toggle","prevState","Loader","rColor","activate","Spinner","Error","message","UseSearchItems","list","propertiesTable","searchByItem","setSearchItem","query","setQuery","React","useMemo","filteredSome","filter","items","res","map","property","includes","TableFilter","titlesTable","bodyTable","loading","hrefCreate","actions","rHrefCreate","Form","FormGroup","Input","type","placeholder","value","onChange","target","Table","item","action","handleAction","ApiResponses","ComponentApiResponses","useInputState","inputValue","inputChange","setInputChange","setOnChange","InputText","forName","classLabel","textLabel","isMandatory","classMandatory","inputType","inputName","inputId","placeHolder","maxLength","minLength","RE","validateRE","options","optionPlaceHolder","forgotPassword","xs","sm","md","lg","xl","classCol","rFor","rClassLabel","rTextLabel","rIsMandatory","rClassMandatory","rInputType","rInputName","rInputId","rPlaceHolder","rInputValue","rMaxLength","rMinLength","rRE","handleRE","match","re","Col","Label","for","name","id","valid","invalid","option","Id","Name","FormFeedback","validMessage","invalidMessage","InputEmail","label","rName","rLabel","RegularExpressions","RE_EMAIL","InputPassword","RE_PASSWORD","InputFile","ValidateInputs","validations","onValidate","i","length","props","isInvalid","Form1","textButton","textButtonLoading","handleValidations","Button","SwitchSome","some","setSome","ModalForm","content","modalTitle","state","Modal","ModalHeader","ModalBody","ModalDelete","ModalFooter","ModalOpenDelete","clean","modal","setToogle","toggleCancel","NotFound","RE_PASSWORD_MATCHES","RE_EMPTY","Example","activeTab","setActiveTab","tab","tabs","classnames","active","TabContent","TabPane","tabId","Row","Tab1","Tab2","A","Inputs","ComponentInputs","Modals","ComponentModals","ComponentNavbars","ComponentRegularExpressions","AWhatsapp","phone","Landing","Heroxs","WebApps","class","ReadCardProduct","description","categories","category","Badge","PRODUCT_CARGANDO","PRODUCT_ERROR","PRODUCT_HANDLE_CHANGE","PRODUCT_CLEAN_STATE","PRODUCT_CRUD","PRODUCTS_LIST","PRODUCT_HANDLE_VALIDATION","GetProducts","answer","GetProductsByCategoryId","GetProduct","PutProduct","includeBlobs","PostProduct","DeleteProduct","productHandleChange","dispatch","payload","productHandleValidation","validation","productCleanState","productMethods","method","CardProduct","productId","useParams","useDispatch","useSelector","productReducer","Description","Blobs","fileCover","Categories","useEffect","productActions","blobProduct","el","BlobTypeId","URL","createObjectURL","Uri","ListOfCardProducts","list_products","product","ListOfCategories","reDirect","categoryProductId","history","useHistory","api_actions","cargando","openDeleteModal","idProduct","deleteProduct","cleanProduct","cancel","push","CATEGORY_CARGANDO","CATEGORY_ERROR","CATEGORY_HANDLE_CHANGE","CATEGORY_CLEAN_STATE","CATEGORY_CRUD","CATEGORIES_LIST","CATEGORY_HANDLE_VALIDATION","GetCategories","GetCategory","PutCategory","PostCategory","DeleteCategory","categoryHandleChange","categoryHandleValidation","categoryCleanState","categoryMethods","ComponentCardProduct","ComponentListOfCardProducts","ListOfProducts","ComponentListOfProducts","LandingProducts","SoftwareAgency","LandingSoftwareAgency","Products","NotFoundPage","LandingCourses","LOGIN_CARGANDO","LOGIN_ERROR","LOGIN_HANDLE_CHANGE","LOGIN_CLEAN_STATE","LOGIN_USER","LOGIN_HANDLE_VALIDATION","parserJson","obj","jsonSerialize","prop","slice","loginHandleChange","loginHandleValidation","loginCleanState","loginMethods","object","LoginForm","ActionLogin","loginReducer","grant_type","username","password","ModelLogin","handleRedirect","this","Component","mapDispatchToProps","loginActions","connect","SIGN_UP_CARGANDO","SIGN_UP_ERROR","SIGN_UP_HANDLE_CHANGE","SIGN_UP_CLEAN_STATE","SIGN_UP_USER","SIGN_UP_HANDLE_VALIDATION","SIGN_UP_PRELOADED_DATA","signUpHandleChange","signUpHandleValidation","signUpCleanState","signUpPreloadedData","signUpMethods","SignUp","signUpReducer","UserName","Email","PhoneNumber","Password","ConfirmPassword","ValidateByPhoneOrEmail","Roles","TypeUser","role","ModelSignUp","RegExp","signUpActions","CHANGE_PASSWORD_CARGANDO","CHANGE_PASSWORD_ERROR","CHANGE_PASSWORD_HANDLE_CHANGE","CHANGE_PASSWORD_CLEAN_STATE","CHANGE_PASSWORD_USER","CHANGE_PASSWORD_HANDLE_VALIDATION","SetPassword","changePasswordHandleChange","changePasswordHandleValidation","changePasswordCleanState","changePasswordMethods","phoneOrEmail","ChangePassword","changePasswordReducer","NewPassword","ConfirmNewPassword","code","email","modelChangePassword","Code","usernameOrEmailOrPhoneNumber","readonly","changePasswordActions","ChangePasswordForUser","actionChangePasswordForUser","userId","UserId","SendEmail","Login","ComponentLogin","ComponentSignUp","ComponentChangePassword","ComponentVerifyAccount","ComponentSendEmail","ComponentChangePasswordForUser","LayoutSection","classSection","classContainer","classLogo","classCard","classCardBody","LoginPage","ForgotPassword","CheckYourAccount","ChangePasswordPage","SignUpPage","ANALYTICS_CARGANDO","ANALYTICS_ERROR","ANALYTICS_CLEAN_STATE","ANALYTICS_COUNT_PRODUCTS","ANALYTICS_COUNT_COURSES","ANALYTICS_COUNT_USERS","ANALYTICS_COUNT_ADMINS","ANALYTICS_COUNT_COMPANIES","ANALYTICS_COUNT_POSITIONS","analyticsCleanState","analyticsMethods","companyId","Indicators","componentDidMount","analyticsReducer","count_companies","count_users","count_admins","cardAnalytics","analyticsActions","ADMIN_CARGANDO","ADMIN_ERROR","ADMIN_HANDLE_CHANGE","ADMIN_CLEAN_STATE","ADMIN_CRUD","ADMIN_HANDLE_VALIDATION","ADMIN_USERS_LIST","GetUserInfo","GetUsersInfo","roleName","PutContactInfo","ValidateAccount","adminHandleChange","adminHandleValidation","adminCleanState","adminMethods","typeError","ListOfUsers","create","adminReducer","adminActions","list_users","typeUser","UpdateContactInfo","closeModal","contactModel","NewUserName","NewTypeUser","NewPhoneNumber","NewEmail","EmailConfirmed","cargandoValidateAccount","Active","ComponentsListOfUsers","UpdateUserInfo","ComponentUpdateUserInfo","ComponentValidateAccount","ListOfAdmins","CreateAdmin","ReadAdmin","CreateUser","ReadUser","SECTION_CARGANDO","SECTION_ERROR","SECTION_HANDLE_CHANGE","SECTION_CLEAN_STATE","SECTION_CRUD","SECTIONS_LIST","SECTIONS_SELECT","SECTION_HANDLE_VALIDATION","sectionHandleChange","sectionHandleValidation","sectionCleanState","sectionMethods","Section","sectionId","actionSection","sectionReducer","DateCreated","CourseId","courseId","setModal","sectionActions","CreateModalSection","sectionModal","EditSectionModal","section","SectionName","SectionId","DeleteSectionModal","deleteSectionAction","CATEGORY_PRODUCT_CARGANDO","CATEGORY_PRODUCT_ERROR","CATEGORY_PRODUCT_HANDLE_CHANGE","CATEGORY_PRODUCT_CLEAN_STATE","CATEGORY_PRODUCT_CRUD","CATEGORIES_PRODUCTS_LIST","CATEGORY_PRODUCT_HANDLE_VALIDATION","categoryProductHandleChange","categoryProductHandleValidation","categoryProductCleanState","categoryProductMethods","BLOB_CARGANDO","BLOB_ERROR","BLOB_HANDLE_CHANGE","BLOB_HANDLE_VALIDATION","BLOB_CLEAN_STATE","BLOB_CRUD","blobHandleChange","blobHandleValidation","blobCleanState","blobMethods","blob","createFormData","ContainerName","IsPrivate","FormData","set","append","Product","actionBlob","file","blobType","blobs","formData","blobReducer","sendAction","Price","ProductCategoryId","model","actionProduct","fileCoverAnswer","list_categories_products","categoryProductReducer","categoryReducer","list_categories","categoryProductActions","blobActions","categoryActions","CreateProductModal","porductModal","hasSection","EditProductModal","DeleteProductModal","ListOfSections","cleanSection","list_sections","CrudCourse","Dashboard","indicator","page","AdminUsersPages","AdminProductPages","CreateProduct","AdminCompanyPages","ListOfCompanies","AdminSections","TemplateDashboardAdmin","CreateSection","EditCourse","Course","courseReducer","ListOfCourses","Player","url","height","controls","PlayerMedia","ComponentPlayer","CollapseSection","countVideos","videos","time","video","TabCourse","WatchClass","stateProduct","ComponentCourse","ComponentListOfCourses","ComponentWatchClass","CreateCourse","WhatchCourse","CategoryProduct","actionCategoryProduct","ListOfCategoriesProducts","deleteAction","cleanModal","Category","categoryId","actionCategory","CreateCategoryModal","categoryModal","EditCategoryModal","DeleteCategoryModal","PRODUCT_DETAIL_CARGANDO","PRODUCT_DETAIL_ERROR","PRODUCT_DETAIL_HANDLE_CHANGE","PRODUCT_DETAIL_CLEAN_STATE","PRODUCT_DETAIL_CRUD","PRODUCT_DETAILS_LIST","PRODUCT_DETAIL_HANDLE_VALIDATION","GetProductDetails","GetProductDetail","GetProductDetailByProductId","PutProductDetail","PostProductDetail","DeleteProductDetail","productDetailHandleChange","productDetailHandleValidation","productDetailCleanState","productDetailMethods","ProductDetail","productDetailReducer","SubTitle","BlobId","ProductId","actionProductDetail","Blob","fileZip","fileZipAnswer","EditProduct","ProductSection","CategoryProducts","ListOfCategoriesOfProducts","COMPANY_CARGANDO","COMPANY_ERROR","COMPANY_HANDLE_CHANGE","COMPANY_CLEAN_STATE","COMPANY_CRUD","COMPANIES_LIST","COMPANY_HANDLE_VALIDATION","GetCompanies","GetCompany","PutCompany","PostCompany","DeleteCompany","companyHandleChange","companyHandleValidation","companyCleanState","companyMethods","Company","companyReducer","TradeName","BusinessName","BusinessActivity","companyActions","count_positions","count_products","ComponentCompany","CompanyIndicators","ComponentCompanyIndicators","list_companies","CreateCompany","AdminDashboardPages","POSITION_CARGANDO","POSITION_ERROR","POSITION_HANDLE_CHANGE","POSITION_CLEAN_STATE","POSITION_CRUD","POSITIONS_LIST","POSITION_HANDLE_VALIDATION","GetPositions","GetPositionsByCompanyId","GetPosition","PutPosition","PostPosition","DeletePosition","positionHandleChange","positionHandleValidation","positionCleanState","positionMethods","Position","positionId","positionReducer","CompanyId","Objective","Knowledge","Salary","actionPosition","positionActions","ListOfPositions","list_positions","ListOfResponsabilities","arrayDeCadenas","split","splice","ReadPosition","postionActions","CreatePosition","UpdatePosition","ORGANIZATION_CHART_CARGANDO","ORGANIZATION_CHART_ERROR","ORGANIZATION_CHART_HANDLE_CHANGE","ORGANIZATION_CHART_CLEAN_STATE","ORGANIZATION_CHART_CRUD","ORGANIZATION_CHARTS_LIST","ORGANIZATION_CHART_HANDLE_VALIDATION","ORGANIZATION_CHART_CHILD","GetOrganizationCharts","GetOrganizationChart","GetOrganizationChartChild","GetOrganizationChartByCompanyId","PutOrganizationChart","PostOrganizationChart","DeleteOrganizationChart","organizationChartHandleChange","organizationChartHandleValidation","organizationChartCleanState","organizationChartMethods","StyledNode","styled","div","CardNode","addChild","updateNode","deleteChild","CardSubtitle","OrganizationChart","tree","createOrganigrama","organigrama","OrganizationChart1","child","createOrigin","parentId","PositionChartId","nodeId","organizationChartReducer","lineWidth","lineColor","lineBorderRadius","position","organizationChartActions","PositionId","actionOrganizationChart","ComponentOrganizationChart","UpdateChild","ComponentUpdateChild","OrgainaztionChart","UpdateCurrent","ComponentUsers","AdminSectionsPages","ComponentSections","AdminCoursesPages","ComponentCourses","ComponentProducts","ComponentDashboard","AdminPositionsPages","ComponentPositions","AdminOrganizationChart","DashboardUserPage","App","exact","path","component","Landings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","reducer","Idd","nameInput","DateModified","Reducer","files","list_brands","PersonDetailId","AreasId","list_organization_chart","list_product_details","COURSE_CARGANDO","COURSE_ERROR","COURSE_HANDLE_CHANGE","COURSE_CLEAN_STATE","COURSE_CRUD","COURSES_LIST","COURSE_HANDLE_VALIDATION","list_courses","list_sections_select","cargandoUsername","errorUsername","cargandoEmail","errorEmail","cargandoPhone","errorPhone","cargandoPassword","errorPassword","errorValidateAccount","count_courses","BlobName","BlobType","Brand_Blob","Product_Blob","BlogPosts","AspNetUsers","combineReducers","valueInput","WebFont","load","google","families","store","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d2e96a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/product.d9246254.jpg\";","export default __webpack_public_path__ + \"static/media/cristian.319f1962.jpg\";","export default __webpack_public_path__ + \"static/media/Jesus.7acb2fb5.jpg\";","export default __webpack_public_path__ + \"static/media/version-4-logo.e2c73c24.svg\";","export default __webpack_public_path__ + \"static/media/organigrama.b28e5e03.jpeg\";","export default __webpack_public_path__ + \"static/media/puestos.6832c674.jpeg\";","export default __webpack_public_path__ + \"static/media/descripciones.25a448ed.jpeg\";","export default __webpack_public_path__ + \"static/media/procesos.19e7ff14.jpeg\";","import React from 'react'\r\nimport Cristian from './cristian.jpg';\r\nimport Jesus from './Jesus.jpg';\r\nimport ProductDefault from './product.jpg'\r\nimport Logo from './version-4-logo.svg'\r\nimport Organigrama from './organigrama.jpeg'\r\nimport Puestos from './puestos.jpeg'\r\nimport Descripciones from './descripciones.jpeg'\r\nimport Procesos from './procesos.jpeg'\r\n   \r\n\r\n\r\n\r\nconst Img = ({src='', width='', alt='', className=''}) => {\r\n    return (\r\n        <img src={src} width={width} alt={alt} className={className}/>\r\n    )\r\n}\r\n\r\nexport const ImgCristian = ({className}) =>(\r\n    <Img src={Cristian} alt='Cristian photo' className={className}/>\r\n)\r\n\r\nexport const ImgJesus = ({className}) =>(\r\n    <Img src={Jesus} alt='jesus photo' className={className}/>\r\n)\r\n\r\nexport const ImgOrganigrama = ({className}) =>(\r\n    <Img src={Organigrama} alt='Organigrama' className={className}/>\r\n)\r\n\r\nexport const ImgProcesos = ({className}) =>(\r\n    <Img src={Procesos} alt='Procesos' className={className}/>\r\n)\r\n\r\nexport const ImgPuestos = ({className}) =>(\r\n    <Img src={Puestos} alt='Puestos' className={className}/>\r\n)\r\n\r\nexport const ImgDescripciones = ({className}) =>(\r\n    <Img src={Descripciones} alt='Descripciones' className={className}/>\r\n)\r\n\r\nexport const SvgLogo = ({className}) =>(\r\n    <Img src={Logo} width={150} alt='logo version 4' className={className}/>\r\n)\r\n\r\nexport const ImgProduct = ({uri = '', className}) =>(\r\n    <Img src={uri ? uri : ProductDefault} alt='default product' className={className}/>\r\n)\r\n\r\n\r\n    \r\n","//imports de react.\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {SvgLogo} from '../img'\r\n\r\nexport const LogoNavbar = ({href = '/', className=''}) => {\r\n    return (\r\n        <h6 className={`font-weight-bold ${className}`}> <Link to='/' className=\"text-dark\">Version 4</Link> </h6>\r\n    )\r\n}\r\n\r\n\r\nexport const Logo = ({href = '/', className=''}) => {\r\n    return (\r\n        <SvgLogo />\r\n    )\r\n}","// Imports de axios.\r\nimport axios from \"axios\";\r\n\r\n/*\r\n * Función para detectar el tipo de error.\r\n */\r\nexport const errorResponse = (data) => {\r\n  //debugger;\r\n  if (data.ModelState) {\r\n    return data.ModelState[\"\"];\r\n  }\r\n  if (data.Message) {\r\n    return data.Message;\r\n  }\r\n  if (data.error_description) {\r\n    return data.error_description;\r\n  }\r\n  if (data.error) {\r\n    return data.error;\r\n  }\r\n};\r\n\r\n/*\r\n * F.unción para manejar errores.\r\n */\r\nexport const errorHandler = (error) => {\r\n  let messageError = \"\";\r\n  //debugger;\r\n  if (!error.response) {\r\n    messageError = \"Error de conexión\";\r\n  } else {\r\n    switch (error.response.status) {\r\n      case 400:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 404:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 500:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 401:\r\n        setLocalStorage();\r\n        window.open(`https://version4-front.azurewebsites.net/login-expired`, \"_self\");\r\n        break;\r\n      default:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n    }\r\n  }\r\n  return messageError;\r\n};\r\n\r\n/*\r\n * Funcion para manejar el encabezado del token.\r\n */\r\nfunction configHeader(token) {\r\n  if (token) {\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return config;\r\n  }\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\n/*\r\n * Función para setear local storage\r\n */\r\nexport const setLocalStorage = (respuesta) => {\r\n  if (respuesta === undefined) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem(\"token\", respuesta.data.access_token);\r\n  localStorage.setItem(\"role\", respuesta.data.roles);\r\n  localStorage.setItem(\"username\", respuesta.data.userName);\r\n\r\n  return;\r\n};\r\n\r\n/*\r\n * Función para manejar las peticiones del api, reducir y optimizar código\r\n * uri: dirección que vamos a llamar del back\r\n * header: si requiere autenticación el usuario\r\n * apiMethod: get, post, put, delete\r\n * body: cuerpo si lo necesita\r\n */\r\nexport const axios_api = async (\r\n  uri = \"\",\r\n  header,\r\n  apiMethod = \"\",\r\n  body = {}\r\n) => {\r\n  let respuesta = {};\r\n\r\n  if (uri === \"\") {\r\n    return (respuesta = {\r\n      data: \"No se especifico ninguna uri\",\r\n    });\r\n  }\r\n\r\n  const config = configHeader(header);\r\n\r\n  const pathApi = `${localStorage.getItem(\"route\")}${uri}`;\r\n\r\n  switch (apiMethod.toLowerCase()) {\r\n    case \"get\":\r\n      respuesta = await axios.get(pathApi, config);\r\n      break;\r\n    case \"post\":\r\n      respuesta = await axios.post(pathApi, body, config);\r\n      break;\r\n    case \"put\":\r\n      respuesta = await axios.put(pathApi, body, config);\r\n      break;\r\n    case \"delete\":\r\n      respuesta = await axios.delete(pathApi, config);\r\n      break;\r\n    default:\r\n      respuesta = {\r\n        data: \"No se envio ningun ApiMethod\",\r\n      };\r\n      break;\r\n  }\r\n\r\n  return respuesta;\r\n};\r\n\r\nexport const signOff = (e) => {\r\n  e.preventDefault();\r\n  setLocalStorage();\r\n  window.open(`https://version4-front.azurewebsites.net`, \"_self\");\r\n};\r\n\r\n// Metodo para manejar las rutas del api\r\nexport const setPathApi = () => {\r\n  const option = 2;\r\n  let route = \"\";\r\n  switch (option) {\r\n    case 1:\r\n      // Local\r\n      route = \"https://localhost:44356/\";\r\n      break;\r\n    case 2:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    case 3:\r\n      // Production\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    default:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n  }\r\n\r\n  localStorage.setItem(\"route\", route);\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport {Logo} from './Logos'\r\n// Imports de components-api.\r\nimport {signOff} from '../components-api/ConfigApi'\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Navbars = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar expand=\"md\" className=\"fixed-top bg-white border-bottom\">\r\n        <Container>\r\n        {/* <NavbarBrand href=\"/\" className=\"text-dark font-weight-bold\">Version 4</NavbarBrand> */}\r\n        <Logo />\r\n        <NavbarToggler onClick={toggle}><FaIcons.FaBars className=\"lead\" /></NavbarToggler>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"d-flex mr-2\">\r\n              <NavLink href=\"/login\"className=\"btn btn-outline-secondary align-self-center\">Inicia sesión</NavLink>\r\n            </NavItem>\r\n            {/* <NavItem className=\"d-flex\">\r\n              <NavLink href=\"/sign-up\"className=\"btn btn-primary align-self-center\">Regístrate</NavLink>\r\n            </NavItem> */}\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const NavbarAdmin = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar light className=\"bg-white\" expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand href=\"/admin-dashboard\" className=\"text-dark\">Version 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret className=\"text-dark\">\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff} className=\"text-dark\">\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const User = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand href=\"/user-dashboard\">Version 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff}>\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}","// Imports de react.\r\nimport React from 'react'\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CardAnalytics = ({title, number, icon}) => {\r\n    const rTitle = title ? title : 'title';\r\n    const rNumber = number ? number : '0'\r\n    const rIcon = icon ? icon : <FaIcons.FaVideo className=\"mr-2\" />;\r\n    return (\r\n        <Card className=\"border-0 my-3\">\r\n            <CardBody>\r\n                <p className=\"text-muted mb-2\">{rIcon} {rTitle}</p>\r\n                <h5 className=\"display-4 text-dark\">{rNumber}</h5>\r\n                {/* <div className=\"d-inline-block text-success mr-2\"><FaIcons.FaArrowUp className=\"mr-2\" />0%</div><p className=\"text-dark d-inline-block mb-0\">vs los últimos 7 días</p> */}\r\n            </CardBody>\r\n        </Card>   \r\n    )\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from \"reactstrap\";\r\n\r\nexport const DropDownActions = ({children, labelButton}) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n      <DropdownToggle caret color={'link'} className=\"text-dark\">{labelButton}</DropdownToggle>\r\n      <DropdownMenu>{children}</DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const Loader = ({color, activate}) => {\r\n    const rColor = color ? color: 'primary';\r\n    if(activate){\r\n        return(\r\n            <Spinner color={rColor} className=\"align-middle ml-1\" />\r\n        )\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const Error = ({message}) => {\r\n    \r\n    return <>\r\n        {message ? \r\n            <div className='text-danger text-center mb-4'>{message}</div>\r\n        : ''}\r\n    </>;\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {DropdownItem, Form, FormGroup, Input, Table} from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de components.\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\nimport {DropDownActions} from '../config-components/DropDowns'\r\n\r\nexport const UseSearchItems = (list, propertiesTable) => {\r\n  const [searchByItem, setSearchItem] = useState(propertiesTable);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  React.useMemo(() => {\r\n    const filteredSome = list.filter((items) => {\r\n      let res = \"\";\r\n      res += propertiesTable.map((property) => {\r\n        return `${items[property]} `;\r\n      });\r\n      return res.toLowerCase().includes(query.toLowerCase());\r\n    });\r\n    setSearchItem(filteredSome);\r\n  }, [list, query, propertiesTable]);\r\n\r\n  return { query, setQuery, searchByItem };\r\n};\r\n\r\nexport const TableFilter = ({\r\n    title, \r\n    titlesTable,\r\n    propertiesTable,\r\n    bodyTable,\r\n    loading,\r\n    error,\r\n    hrefCreate,\r\n    actions\r\n}) => {\r\n    const rTitle = title ? title : 'Titulo';\r\n    const rHrefCreate= hrefCreate ? hrefCreate : '/admin-dashboard';\r\n\r\n    const { query, setQuery, searchByItem } = UseSearchItems(\r\n        bodyTable,\r\n        propertiesTable\r\n    );\r\n    return (\r\n        <>\r\n            <div className=\"d-flex mb-4\">\r\n                <h3 className=\"flex-grow-1\">{rTitle}</h3>\r\n                \r\n                <div>\r\n                    <Form>\r\n                        <FormGroup className=\"d-flex\">\r\n                            <Input \r\n                                className=\"mr-3\" \r\n                                type=\"text\" \r\n                                placeholder=\"Buscar...\" \r\n                                value={query}\r\n                                onChange={(e) => {\r\n                                    setQuery(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Link to={rHrefCreate} className={'btn btn-primary'}>Crear</Link>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <Table className=\"bg-white\">\r\n                <thead>\r\n                    <tr>\r\n                        {titlesTable.map(title => {\r\n                            return(\r\n                            <th>{title}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    error ? <Error message={error} /> :\r\n                    loading ? <Loader activate={loading}/> : \r\n                    <tbody>\r\n                        {searchByItem?.map(item => {\r\n                            return(\r\n                                <tr>\r\n                                    {propertiesTable?.map(property => {\r\n                                        return <td>{item[property]}</td>\r\n                                    })}\r\n                                        <td>\r\n                                        <DropDownActions \r\n                                            labelButton={<FaIcons.FaEllipsisH />}\r\n                                        >\r\n                                            {actions &&\r\n                                                actions.map( action => {\r\n                                                    return<DropdownItem onClick={() => action.handleAction(item['Id'])}>\r\n                                                        {action.action}\r\n                                                    </DropdownItem>\r\n                                                })\r\n                                            }\r\n                                        </DropDownActions>  \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}      \r\n                    </tbody>\r\n                }               \r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentConfigApi from './ConfigApi'\r\nimport * as ComponentApiResponses from './ApiResponses'\r\n\r\nexport const ConfigApi = ComponentConfigApi;\r\nexport const ApiResponses = ComponentApiResponses;","// Imports de react.\r\nimport React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Input, Label, FormGroup, FormFeedback, Form, Button, Col} from 'reactstrap'\r\nimport {RegularExpressions} from './index'\r\nimport {ApiResponses} from '../components-api'\r\n\r\n\r\n// Hook para manejar el cambio en inputs.\r\nexport const useInputState = (inputValue) => {\r\n    const [inputChange, setInputChange] = useState(inputValue);\r\n    const setOnChange = (e) => {\r\n        setInputChange(e)\r\n    }\r\n    return {inputChange, setOnChange}\r\n}\r\n\r\n\r\n// Input para textos.\r\nexport const InputText = ({forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    placeHolder,\r\n    inputValue,\r\n    onChange,\r\n    maxLength,\r\n    minLength,\r\n    RE,\r\n    validateRE,\r\n    options,\r\n    optionPlaceHolder,\r\n    forgotPassword = false,\r\n    xs='12',\r\n    sm='12',\r\n    md='12',\r\n    lg='12',\r\n    xl='12',\r\n    classCol='px-0'\r\n}) => {\r\n    const rFor = forName ? forName : 'for';\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n    const rPlaceHolder = placeHolder ? placeHolder : '';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rMaxLength = maxLength ? maxLength : 500;\r\n    const rMinLength = minLength ? minLength : 0;\r\n    const rRE = RE ? RE : '';\r\n\r\n    const handleRE = (e) =>{\r\n        \r\n        validateRE = e.target.value.match(rRE.re) ? true : false;\r\n        if(validateRE && e.target.value === '' && isMandatory){\r\n            validateRE = false;\r\n        }\r\n        if(!validateRE && e.target.value === '' && !isMandatory){\r\n            validateRE = '';\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <Col \r\n            xs={xs}\r\n            sm={sm}\r\n            md={md}\r\n            lg={lg}\r\n            xl={xl}\r\n            className={classCol}\r\n        >\r\n            <FormGroup>\r\n                <Label\r\n                    for={rFor}\r\n                    className={`${rClassLabel} d-flex justify-content-between`}\r\n                >\r\n                        <div>\r\n                            {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n                        </div>\r\n                        {forgotPassword && <small>\r\n                            <Link to='/forgot-password'>\r\n                                ¿Olvidaste tu contraseña?\r\n                            </Link>\r\n                        </small>}\r\n                </Label>\r\n                <Input\r\n                    type={rInputType}\r\n                    name={rInputName}\r\n                    id={rInputId}\r\n                    placeholder={rPlaceHolder}\r\n                    value={rInputValue}\r\n                    onChange={(e)=>handleRE(e)}\r\n                    maxLength={rMaxLength}\r\n                    minLength={rMinLength}\r\n                    valid={validateRE === true && true }\r\n                    invalid={validateRE === false && true}\r\n                >\r\n                    {\r\n                        options && \r\n                        <>\r\n                            <option value=\"\">{optionPlaceHolder}</option>\r\n                            {options.map(option => {\r\n                                return <option key={option.Id} value={option.Id}>{option.Name}</option>\r\n                            })}\r\n                        </> \r\n                    }\r\n                </Input>\r\n                <FormFeedback  valid >{validateRE && rRE.validMessage}</FormFeedback>\r\n                <FormFeedback  invalid >{validateRE === false && rRE.invalidMessage}</FormFeedback>\r\n\r\n            </FormGroup>\r\n        </Col>\r\n    )\r\n}\r\n\r\n// Input para correo.\r\nexport const InputEmail = ({name, inputValue, onChange, label, RE, validateRE}) => {\r\n    const rName = name ? name : 'Email';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rLabel = label ? label : 'Email';\r\n    const rRE = RE ? RE : RegularExpressions.RE_EMAIL;\r\n    return <InputText\r\n            forName='Email'\r\n            classLabel='font-weight-bold'\r\n            textLabel={rLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='text'\r\n            inputName={rName}\r\n            inputId='Email'\r\n            placeHolder={`Introduce tu ${rLabel}`}\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={20}\r\n            RE={rRE}\r\n            validateRE={validateRE}\r\n        />\r\n}\r\n\r\nexport const InputPassword = ({\r\n    inputValue, \r\n    onChange, \r\n    validateRE, \r\n    forgotPassword = false,\r\n    RE = RegularExpressions.RE_PASSWORD,\r\n    inputName = 'password',\r\n    textLabel = 'Contraseña'\r\n}) => {\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    return <InputText\r\n            forName='Password'\r\n            classLabel='font-weight-bold'\r\n            textLabel={textLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='password'\r\n            inputName={inputName}\r\n            inputId='password'\r\n            placeHolder='Introduce tu contraseña'\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={1}\r\n            RE={RE}\r\n            validateRE={validateRE}\r\n            forgotPassword={forgotPassword}\r\n        />\r\n}\r\n\r\n\r\nexport const InputFile = ({//forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    onChange,\r\n    RE,\r\n    validateRE,\r\n   \r\n}) => {\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n \r\n    const handleRE = (e) =>{\r\n        if(validateRE && e.target.value === [] && isMandatory){\r\n            validateRE = false;\r\n        }else {\r\n            validateRE = true;\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label\r\n                className={rClassLabel}\r\n            >\r\n                {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n            </Label>\r\n            <Input\r\n                type={rInputType}\r\n                name={rInputName}\r\n                id={rInputId}\r\n                onChange={(e)=>handleRE(e)}\r\n                valid={validateRE === true && true }\r\n                invalid={validateRE === false && true}\r\n            />\r\n            <FormFeedback  valid >{validateRE && 'archivo valido'}</FormFeedback>\r\n            <FormFeedback  invalid >{validateRE === false && 'archivo invalido'}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\n  \r\nexport const ValidateInputs = (validations, e, onValidate) => {\r\n    e.preventDefault()\r\n    for(let i = 0; i < validations.length ; i++){\r\n        if(validations[i] !== '' && validations[i].props.isMandatory === '*' ){\r\n            if(!validations[i].props.validateRE || validations[i].props.validateRE === \"\"){\r\n                let model = {\r\n                    name: validations[i].props.inputName,\r\n                    isInvalid: false\r\n                }\r\n                onValidate(model);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const Form1 = ({children, \r\n    loading, \r\n    error, \r\n    action,\r\n    textButton,\r\n    textButtonLoading,\r\n    handleValidations,\r\n}) => {\r\n    const HandleAction = (e) =>{\r\n        const isValid = ValidateInputs(children, e, handleValidations);\r\n        if(isValid) {\r\n            action();\r\n        }\r\n    }\r\n    return <Form className={'d-flex flex-wrap'}>\r\n        {children}\r\n        <ApiResponses.Error message={error}/> \r\n        {loading ? \r\n            <Button color=\"primary\" className=\"w-100 mb-3\" >{textButtonLoading}<ApiResponses.Loader activate={loading}  color={'light'} /></Button>  :\r\n            <Button color=\"primary\" className=\"w-100 mb-3\" onClick={HandleAction}>{textButton} <ApiResponses.Loader activate={loading}  color={'light'} /></Button>\r\n        }\r\n         \r\n    </Form>\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport const SwitchSome = () => {\r\n  const [some, setSome] = useState(false);\r\n  const toggle = () => {\r\n    setSome(!some)\r\n  }\r\n  return {some, setSome, toggle}\r\n}\r\n\r\nexport const ModalForm  = ({children, content, modalTitle, state}) => {\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody> \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalDelete  = ({children, content, modalTitle, action, state}) => {\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    state.toggle();\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={state.toggle}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalOpenDelete  = ({content, modalTitle, action, clean}) => {\r\n\r\n  const [modal, setToogle] = useState(true);\r\n\r\n  const toggle = () => { \r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    toggle();\r\n  }\r\n\r\n  const toggleCancel = () => {\r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <Modal isOpen={modal} toggle={toggleCancel} >\r\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={toggleCancel}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody,\r\n} from 'reactstrap';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <Card className=\"card-form mx-auto text-center border-0\">\r\n            <CardBody>\r\n                <h4 className=\"display-1 font-weight-bold mb-0\">404</h4>\r\n                <h4 className=\"text-muted mb-4\">Página no encontrada</h4>\r\n                <Link to='/' className=\"btn btn-primary\">Regresar a inicio</Link>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","export const RE_EMAIL = {\r\n    re: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\r\n    validMessage: \"Email correcto\",\r\n    invalidMessage: \"El email necesita un @ y un . para ser valido\",\r\n  };\r\n  \r\n  export const RE_PASSWORD = {\r\n    re: /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i,\r\n    validMessage: \"Contraseña valida\",\r\n    invalidMessage:\r\n      \"La contraseña debe tener más de 8 caracteres, un dígito, una minúscula y una mayúscula  \",\r\n  };\r\n  \r\n  export const RE_PASSWORD_MATCHES = {\r\n    re: \"\",\r\n    validMessage: \"La Contraseña coincide\",\r\n    invalidMessage: \"La contraseña no coincide\",\r\n  };\r\n  \r\n  export const RE_EMPTY = {\r\n    re: /^[^]+$/i,\r\n    validMessage: \"Campo correcto\",\r\n    invalidMessage: \"No puede ir vacio\",\r\n  };\r\n  ","export default __webpack_public_path__ + \"static/media/tab-1.22cb2b5b.png\";","export default __webpack_public_path__ + \"static/media/tab-2.7216be74.png\";","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport Tab1 from '../img/tab-1.png'\r\nimport Tab2 from '../img/tab-2.png'\r\n\r\n\r\nconst Example = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs className=\"mb-2\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Ventas en línea\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Web Apps\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n                <Col lg=\"7\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                        <h3 className=\"font-weight-bold mb-3\">Somos expertos en la creación de páginas web atractivas que aumentan las ventas en línea.</h3>\r\n                        <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam quis tempus dui. Mauris nisl velit, vulputate eu dapibus vitae.</p>\r\n                    </div>\r\n                </Col>\r\n                <Col lg=\"5\" className=\"text-center\">\r\n                    <img src={Tab1} className=\"img-fluid\" alt=\"Aumenta tus ventas en línea\" />\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n            <Row>\r\n                <Col lg=\"7\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                        <h3 className=\"font-weight-bold mb-3\">Desarrollamos tu proyecto con las mejores y más recientes tecnologias.</h3>\r\n                        <p className=\"text-muted\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam quis tempus dui. Mauris nisl velit, vulputate eu dapibus vitae.</p>\r\n                    </div>\r\n                </Col>\r\n                <Col lg=\"5\" className=\"text-center\">\r\n                    <img src={Tab2} className=\"img-fluid\" alt=\"Aplicaciones web modernas\" />\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","import React from 'react'\r\n\r\nexport const A = ({\r\n    href='', \r\n    target='_blank', \r\n    className='',\r\n    children\r\n}) => {\r\n    return (\r\n        <a href={href} target={target} className={className}>{children} </a>\r\n    )\r\n}\r\n\r\nexport const AWhatsapp = ({phone, message,  target='_blank', children, className}) => {\r\n    return(\r\n        <A\r\n            href={`https://api.whatsapp.com/send?phone=${phone}&text=${message}`}\r\n            target={target}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </A>\r\n    )\r\n}","import * as ComponentCards from './Cards'\r\nimport * as ComponentDropDowns from './DropDowns'\r\nimport * as ComponentFilter from './Filter'\r\nimport * as ComponentInputs from './Inputs'\r\nimport * as ComponentModals from './Modals'\r\nimport * as ComponentNavbars from './Navbars'\r\nimport * as ComponentNotFound from './NotFound'\r\nimport * as ComponentRegularExpressions from './RegularExpressions'\r\nimport * as ComponentTabs from './Tabs'\r\nimport * as ComponentLogos from './Logos'\r\nimport {A as Anchor, AWhatsapp as AnchorWhatsapp} from './ExternalLinks'\r\n\r\nexport const Logos = ComponentLogos;\r\nexport const Cards = ComponentCards;\r\nexport const DropDowns = ComponentDropDowns;\r\nexport const Filter = ComponentFilter;\r\nexport const Inputs = ComponentInputs;\r\nexport const Modals = ComponentModals;\r\nexport const Navbars = ComponentNavbars;\r\nexport const NotFound = ComponentNotFound;\r\nexport const RegularExpressions = ComponentRegularExpressions;\r\nexport const Tabs = ComponentTabs;\r\nexport const A = Anchor;\r\nexport const AWhatsapp = AnchorWhatsapp;\r\n","export default __webpack_public_path__ + \"static/media/hero-xs.fab06da0.png\";","export default __webpack_public_path__ + \"static/media/vscode.a1907119.svg\";","// Imports de react.\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, } from 'reactstrap';\r\n\r\n// Imports de config-components.\r\nimport {Navbars} from '../../config-components/Navbars'\r\n\r\nimport { A, AWhatsapp } from '../../config-components'\r\n// } from 'components-links'\r\n\r\n// Imports de assets.\r\nimport Heroxs from '../../img/hero-xs.png'\r\nimport { ImgOrganigrama, ImgPuestos, ImgDescripciones, ImgProcesos} from '../../img'\r\nimport WebApps from '../../img/vscode.svg'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div>\r\n        <Navbars />\r\n        <section id=\"hero\" className=\"bg-light d-flex py-6\">\r\n            <Container className=\"align-self-center\">\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        \r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <h1 className=\"display-4 font-weight-bold mb-3\">Somos expertos en Organización de empresas</h1>\r\n                        <p className=\"text-muted mb-4\">Creamos la Organización en tu empresa con las mejores herramientas tecnologicas, tenemos más de 40 años de experiencia</p>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <img src={Heroxs} className=\"img-fluid d-block d-md-none mt-5\" />\r\n            </Container>\r\n        </section>\r\n\r\n        <section>\r\n            <Container>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgOrganigrama className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Organigrama<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Una buena implementación de la Organización es conocer en detalle los roles que ejercen tus colaboradores.</p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Puestos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos los puestos de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgPuestos src={WebApps} className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgDescripciones className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Perfiles<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Define claramente tus procesos y logra sitematizarlos</p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Procesos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos los puestos de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgProcesos className=\"img-fluid rounded my-4\" />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>  \r\n         \r\n        {/* <section className=\"py-6\">\r\n            <Container>\r\n                <div className=\"tab-container bg-light py-4 px-5\">\r\n                    <Example />\r\n                </div>\r\n            </Container>\r\n        </section>    */}\r\n       \r\n        <section className=\"py-7\">\r\n            <Container>\r\n                <div className=\"w-75 mx-auto text-center mb-5\">\r\n                    <h2 className=\"display-4 font-weight-bold\">\r\n                        <AWhatsapp \r\n                            phone='+525533333279' \r\n                            message={`Hola, Quiero más información`} \r\n                            className=\"text-dark\"\r\n                        >Contáctanos ahora</AWhatsapp>\r\n                    </h2>\r\n                    <p className=\"lead text-muted\">Comienza  y empieza a mejorar tu empresa.</p>\r\n                </div>\r\n            </Container>\r\n        </section>\r\n        <footer className=\"py-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"list-inline-item mr-5\"><Link class=\"text-dark\" ><FaIcons.FaLinkedin className=\"text-dark mr-1\" /> Linkedin</Link></li>\r\n                            \r\n                        </ul>\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"text-right\">\r\n                        <p>© Version 4 2020. Derechos Reservados.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {  Card, CardBody, Badge  } from 'reactstrap';\r\n// Imports de assets.\r\nimport {ImgProduct} from '../img'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ReadCardProduct = ({uri, name='', description='', categories}) => {\r\n    return(\r\n        <Card className=\"border-0 mb-4\">\r\n            <CardBody>\r\n                <ImgProduct uri={uri} className=\"img-fluid rounded mb-3\"/>\r\n                <div className=\"mb-3\">\r\n                    {categories?.length > 0 ? \r\n                        categories.map(category => {\r\n                            return <Badge color=\"light\" className=\"mr-2\">{category.Name}</Badge>\r\n                        })  : ''  \r\n                    }\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"icon-card d-flex bg-light align-self-center mr-3\">\r\n                        <FaIcons.FaShoppingCart className=\"align-self-center mx-auto\" />\r\n                    </div>\r\n                    <div>\r\n                        <h5>{name}</h5>\r\n                        <h6>{description}</h6>\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReadCardProduct;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_CARGANDO = \"product_cargando\";\r\nexport const PRODUCT_ERROR = \"product_error\";\r\nexport const PRODUCT_HANDLE_CHANGE = \"product_handle_change\";\r\nexport const PRODUCT_CLEAN_STATE = \"product_clean_state\";\r\nexport const PRODUCT_CRUD = \"product_crud\";\r\nexport const PRODUCTS_LIST = \"products_list\";\r\nexport const PRODUCT_HANDLE_VALIDATION = \"product_handle_validation\";\r\n\r\n\r\nexport const GetProducts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Products`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProductsByCategoryId = async(data)=> {\r\n    debugger\r\n    const  answer = await axios_api(\r\n        `api/ProductsByCategoryId?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const PutProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}${data.includeBlobs ? ``:``}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_put'};\r\n}\r\n\r\nexport const PostProduct = async(data)=> {\r\n    const  answer = await axios_api(\"api/Product\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const DeleteProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\n\r\n","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_HANDLE_VALIDATION, \r\n    GetProducts,\r\n    GetProductsByCategoryId,\r\n    GetProduct,\r\n    PutProduct,\r\n    PostProduct,\r\n    DeleteProduct\r\n  } from \"./productTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProducts\":\r\n          answer = await GetProducts(); \r\n          break;\r\n\r\n        case 'GetProductsByCategoryId':\r\n          answer = await GetProductsByCategoryId(data); \r\n          break\r\n\r\n        case \"GetProduct\":\r\n          answer = await GetProduct(data);\r\n          break;\r\n\r\n        case \"PutProduct\":\r\n          answer = await PutProduct(data);\r\n          break;\r\n\r\n        case \"PostProduct\":\r\n          answer = await PostProduct(data);\r\n          break;\r\n        \r\n        case \"DeleteProduct\":\r\n          answer = await DeleteProduct(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\n\r\n\r\nconst CardProduct = () => {\r\n    const { productId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n\r\n    const { data:{\r\n        Id,\r\n        Name,\r\n        Description,\r\n        Blobs,\r\n        fileCover,\r\n        Categories\r\n    } } = productReducer;\r\n\r\n    useEffect(() => {\r\n        productId && dispatch(productActions.productMethods({Id: productId}, 'GetProduct'))\r\n    }, [dispatch, productId, Id])\r\n\r\n    const blobProduct = Blobs.filter(el => el.BlobTypeId === 2 )\r\n    return (\r\n        <>\r\n            <ReadCardProduct uri={fileCover ? URL.createObjectURL(fileCover[0]) : blobProduct[0]?.Uri} name={Name} description={Description} categories={Categories}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardProduct;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Col} from 'reactstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\nconst ListOfCardProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n    const { list_products } = productReducer;\r\n    useEffect(() => {\r\n        list_products.length < 1 && dispatch(productActions.productMethods('', 'GetProducts'))\r\n    }, [dispatch, list_products ])\r\n    return (\r\n        <>\r\n            {\r\n                list_products.map(product => {\r\n                    const blobProduct = product.Blobs.filter(el => el.BlobTypeId === 1 )\r\n                    return (\r\n                        <Col lg='4'>\r\n                            <ReadCardProduct uri={blobProduct[0]?.Uri} name={product.Name} description={product.Description} />\r\n                        </Col>\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCardProducts;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\nimport { Modals} from '../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de actions.\r\nimport * as productActions from './reducer/productActions'\r\nconst ListOfCategories = ({title = 'Productos',reDirect, categoryProductId}) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const productReducer = useSelector(state => state.productReducer)\r\n\r\n    const {\r\n        data: {\r\n            Id,\r\n            Name\r\n        },\r\n        api_actions: {cargando, error},\r\n        list_products\r\n    } = productReducer;\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(categoryProductId) {\r\n            dispatch(productActions.productMethods({Id: categoryProductId},'GetProductsByCategoryId'))\r\n        } else {\r\n            dispatch(productActions.productMethods('','GetProducts'))\r\n        }\r\n    }, [dispatch, categoryProductId])\r\n\r\n    const getProduct = (idProduct) => {\r\n        history.push(`${reDirect}/${idProduct}`)\r\n    }\r\n\r\n    const openDeleteModal = async(idProduct) => {\r\n        await dispatch(productActions.productMethods({Id: idProduct},'GetProduct'));\r\n    }\r\n\r\n    const deleteProduct = async() => {\r\n        await dispatch(productActions.productMethods({Id},'DeleteProduct'));\r\n        dispatch(productActions.productCleanState());\r\n        await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    const cleanProduct = async(cancel) => {\r\n        await dispatch(productActions.productCleanState());\r\n        !cancel && await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n        <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n        <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{title}</small></li>\r\n    </ul>\r\n            {Id \r\n                ?  <Modals.ModalOpenDelete \r\n                        content={`Se eliminara el siguiente producto: \"${Name}\" con Id: #${Id}`}\r\n                        modalTitle={`Eliminar Producto ${Name}`}\r\n                        action={deleteProduct}\r\n                        clean={cleanProduct}\r\n                    />\r\n                : ''\r\n            }\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Nombre','Descripción','Acciones']}\r\n                propertiesTable={['Id','Name','Description']}\r\n                hrefCreate={'/admin-dashboard/create-product'}\r\n                bodyTable={list_products}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Producto', handleAction: getProduct },\r\n                    {action: 'Eliminar Producto', handleAction: openDeleteModal }\r\n                ]}\r\n            />\r\n        </>\r\n    )   \r\n}\r\n\r\nexport default ListOfCategories;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const CATEGORY_CARGANDO = \"category_cargando\";\r\nexport const CATEGORY_ERROR = \"category_error\";\r\nexport const CATEGORY_HANDLE_CHANGE = \"category_handle_change\";\r\nexport const CATEGORY_CLEAN_STATE = \"category_clean_state\";\r\nexport const CATEGORY_CRUD = \"category_crud\";\r\nexport const CATEGORIES_LIST = \"categories_list\";\r\nexport const CATEGORY_HANDLE_VALIDATION = \"category_handle_validation\";\r\n\r\nexport const GetCategories = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Categories`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: CATEGORIES_LIST};\r\n}\r\n\r\nexport const GetCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const PutCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'put_category'};\r\n}\r\n\r\nexport const PostCategory = async(data)=> {\r\n    const answer = await axios_api(\"api/Category\", true, \"post\", data);\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const DeleteCategory = async(data)=> {\r\n    const answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_HANDLE_VALIDATION,\r\n    GetCategories,\r\n    GetCategory,\r\n    PutCategory,\r\n    PostCategory,\r\n    DeleteCategory,\r\n  } from \"./categoryTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCategories\":\r\n          answer = await GetCategories();\r\n          break;\r\n\r\n        case \"GetCategory\":\r\n          answer = await GetCategory(data);\r\n          break;\r\n\r\n        case \"PutCategory\":\r\n          answer = await PutCategory(data);\r\n          break;\r\n\r\n        case \"PostCategory\":\r\n          answer = await PostCategory(data);\r\n          break;\r\n        \r\n        case \"DeleteCategory\":\r\n          answer = await DeleteCategory(data)\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import ComponentCardProduct from './CardProduct'\r\nimport ComponentListOfCardProducts from './ListOfCardProducts'\r\nimport ComponentListOfProducts from './ListOfProducts'\r\nimport ComponentAddCategories from './AddCategories'\r\n\r\nexport const CardProduct = ComponentCardProduct;\r\nexport const ListOfCardProducts = ComponentListOfCardProducts;\r\nexport const ListOfProducts = ComponentListOfProducts;\r\nexport const AddCategories = ComponentAddCategories;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {Container, Row} from 'reactstrap'\r\nimport {Navbars} from '../../config-components' \r\nimport {ListOfCardProducts} from '../../components-product'\r\n\r\nconst LandingProducts = () => {\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <section className=\"bg-light py-6\">\r\n                <Container>\r\n                    <Row>\r\n                    <ListOfCardProducts />\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingProducts;\r\n","import LandingSoftwareAgency from './SoftwareAgency'\r\nimport LandingProducts from './Products'\r\nimport LandingCourses from './Courses'\r\n\r\nexport const SoftwareAgency = LandingSoftwareAgency;\r\nexport const Products = LandingProducts;\r\nexport const Courses = LandingCourses;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { Container } from 'reactstrap'\r\n\r\n// Imports de config-components\r\nimport {NotFound} from '../config-components/NotFound'\r\nimport {Navbars} from '../config-components/Navbars'\r\n\r\n\r\nexport const NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <Navbars />\r\n            <div className=\"bg-light py-6\">\r\n                <Container>\r\n                    <NotFound />\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","export const LOGIN_CARGANDO = \"login_cargando\";\r\nexport const LOGIN_ERROR = \"login_error\";\r\nexport const LOGIN_HANDLE_CHANGE = \"login_handle_change\";\r\nexport const LOGIN_CLEAN_STATE = \"login_clean_state\";\r\nexport const LOGIN_USER = \"login_user\";\r\nexport const LOGIN_HANDLE_VALIDATION = \"login_handle_validation\";\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION,\r\n} from \"./loginTypes\";\r\n\r\nimport {\r\n  axios_api,\r\n  errorHandler,\r\n  setLocalStorage,\r\n} from \"../../components-api/ConfigApi\";\r\n\r\n/*\r\n *Metodo para serializar un objeto\r\n */\r\nconst parserJson = (obj) => {\r\n  var jsonSerialize = \"\";\r\n  for (const prop in obj) {\r\n    jsonSerialize += prop + \"=\" + obj[prop] + \"&\";\r\n  }\r\n  jsonSerialize = jsonSerialize.slice(0, -1);\r\n  return jsonSerialize;\r\n};\r\n\r\nexport const loginHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const loginHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const loginCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const loginMethods = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CARGANDO,\r\n  });\r\n  try {\r\n    setLocalStorage();\r\n    const object = parserJson(data);\r\n    const answer = await axios_api(\"Token\", false, \"post\", object);\r\n    setLocalStorage(answer);\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    \r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: LOGIN_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport { RE_EMPTY } from \"../config-components/RegularExpressions\";\r\nimport {InputEmail, InputPassword, Form1} from '../config-components/Inputs'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as loginActions from \"./reducer-login/loginActions\";\r\nclass LoginForm extends Component {\r\n  ActionLogin = async () => {\r\n    const {\r\n      loginMethods,\r\n      loginReducer: {\r\n        data: { grant_type, username, password },\r\n      },\r\n    } = this.props;\r\n    const ModelLogin = {\r\n      grant_type: grant_type,\r\n      username: username,\r\n      password: password,\r\n    };\r\n    await loginMethods(ModelLogin);\r\n    if (this.props.loginReducer.data.access_token) {\r\n      if (localStorage.getItem(\"role\") === \"Admin\") {\r\n        window.open(`/admin-dashboard`, \"_self\");\r\n      }\r\n      if (localStorage.getItem(\"role\") === \"User\") {\r\n        window.open(`/user-dashboard`, \"_self\");\r\n      }\r\n      if (!localStorage.getItem(\"role\")) {\r\n        window.open(`/`, \"_self\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRedirect = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/sign-up\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loginHandleValidation,\r\n      loginHandleChange,\r\n      loginReducer: {\r\n        data: { username, password },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Form1\r\n          loading={cargando}\r\n          error={error}\r\n          action={this.ActionLogin}\r\n          textButton={'Iniciar Sesión'}\r\n          textButtonLoading={'Iniciando sesión...'}\r\n          validations={validations}\r\n          handleValidations={loginHandleValidation}\r\n        >\r\n          <InputEmail  \r\n            name='username'\r\n            inputValue={username}\r\n            onChange={loginHandleChange} \r\n            label='Nombre de usuario o correo'\r\n            RE={RE_EMPTY}\r\n            validateRE={validations.username}\r\n          />\r\n          <InputPassword\r\n            inputValue={password}\r\n            onChange={loginHandleChange}\r\n            validateRE={validations.password}\r\n            forgotPassword={true}\r\n          />\r\n        </Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ loginReducer }) => {\r\n  return { loginReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...loginActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","export const SIGN_UP_CARGANDO = \"sign_up_cargando\";\r\nexport const SIGN_UP_ERROR = \"sign_up_error\";\r\nexport const SIGN_UP_HANDLE_CHANGE = \"sign_up_handle_change\";\r\nexport const SIGN_UP_CLEAN_STATE = \"sign_up_clean_state\";\r\nexport const SIGN_UP_USER = \"sign_up_user\";\r\nexport const SIGN_UP_HANDLE_VALIDATION = \"sign_up_handle_validation\";\r\nexport const SIGN_UP_PRELOADED_DATA = \"sign_up_preloaded_data\";\r\n\r\n\r\n","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const signUpHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const signUpHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const signUpCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const signUpPreloadedData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_PRELOADED_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n\r\n\r\nexport const signUpMethods = (data, token) => async (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CARGANDO,\r\n  });\r\n  try {\r\n    const answer = await axios_api(\"api/Account/Register\", token, \"post\", data);\r\n    dispatch({\r\n      type: SIGN_UP_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: SIGN_UP_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../config-components';\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as signUpActions from \"./sign-up-reducer/signUpActions\";\r\n\r\nclass SignUp extends Component {\r\n  componentDidMount() {\r\n    this.props.signUpReducer.data.Roles = this.props.role;\r\n  }\r\n  action = async () => {\r\n    const {\r\n      signUpMethods,\r\n      signUpCleanState,\r\n      signUpReducer: {\r\n        data: {\r\n          UserName,\r\n          Email,\r\n          PhoneNumber,\r\n          Password,\r\n          ConfirmPassword,\r\n          ValidateByPhoneOrEmail,\r\n          Roles,\r\n          TypeUser\r\n        },\r\n      },\r\n      role,\r\n      reDirect,\r\n      history,\r\n      token\r\n    } = this.props;\r\n\r\n    const ModelSignUp = {\r\n      UserName: UserName,\r\n      Email: Email,\r\n      PhoneNumber: PhoneNumber,\r\n      Password: Password,\r\n      ConfirmPassword: ConfirmPassword,\r\n      ValidateByPhoneOrEmail: ValidateByPhoneOrEmail,\r\n      Roles: Roles,\r\n      TypeUser: TypeUser\r\n    };\r\n\r\n    await signUpMethods(ModelSignUp, token);\r\n   \r\n    if (this.props.signUpReducer.data.Id) {\r\n        role === 'User' \r\n        ? history.push(`${reDirect}/${this.props.signUpReducer.data.Id}`)\r\n        : history.push(reDirect) \r\n        signUpCleanState();\r\n           \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      signUpHandleChange,\r\n      signUpHandleValidation,\r\n      signUpReducer: {\r\n        data: { UserName, Email, Password, ConfirmPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      }\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${Password}$`)\r\n    return (\r\n       <>\r\n            <Inputs.Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.action}\r\n                textButton={'Registrar'}\r\n                textButtonLoading={'Registrando ...'}\r\n                validations={validations}\r\n                handleValidations={signUpHandleValidation}\r\n            >\r\n                <Inputs.InputEmail \r\n                    inputValue={Email}\r\n                    onChange={signUpHandleChange} \r\n                    validateRE={validations.Email}\r\n                />\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre de usuario'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'UserName'}\r\n                    placeHolder={'Introduce un nombre de usuario'}\r\n                    inputValue={UserName}\r\n                    onChange={signUpHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.UserName}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={Password}\r\n                    onChange={signUpHandleChange}\r\n                    validateRE={validations.Password}\r\n                    inputName={'Password'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmPassword}\r\n                    onChange={signUpHandleChange}\r\n                    inputName={'ConfirmPassword'}\r\n                    validateRE={validations.ConfirmPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ signUpReducer }) => {\r\n  return { signUpReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...signUpActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import { axios_api } from \"../../../components-api/ConfigApi\";\r\n\r\nexport const CHANGE_PASSWORD_CARGANDO = \"change_password_cargando\";\r\nexport const CHANGE_PASSWORD_ERROR = \"change_password_error\";\r\nexport const CHANGE_PASSWORD_HANDLE_CHANGE = \"change_password_handle_change\";\r\nexport const CHANGE_PASSWORD_CLEAN_STATE = \"change_password_clean_state\";\r\nexport const CHANGE_PASSWORD_USER = \"change_password_user\";\r\nexport const CHANGE_PASSWORD_HANDLE_VALIDATION = \"change_password_handle_validation\";\r\n\r\nexport const SetPassword = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/SetPassword`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type:'set_password_put'};\r\n}\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n    SetPassword\r\n  } from \"./changePasswordTypes\";\r\n  \r\n  import {\r\n    axios_api,\r\n    errorHandler,\r\n  } from \"../../../components-api/ConfigApi\";\r\n   \r\n  export const changePasswordHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const changePasswordHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CARGANDO,\r\n    });\r\n    try {\r\n      \r\n      let answer;\r\n      let type = CHANGE_PASSWORD_USER;\r\n      switch(method){\r\n        case 'send_email_code':\r\n            let route = `api/Account/SendVerificationCode?phoneOrEmail=${data.phoneOrEmail}&usernameOrEmailOrPhoneNumber=${data.phoneOrEmail}`\r\n            answer= await axios_api( route, false, \"get\");\r\n            break;\r\n        case 'change_password':\r\n            answer= await axios_api( `/api/Account/ResetPassword`, false, \"post\", data);\r\n            break;\r\n        case 'SetPassword' :\r\n            answer= await SetPassword(data)\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n      \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePassword extends Component {\r\n  action = async () => {\r\n    \r\n    const {\r\n      changePasswordMethods, \r\n      changePasswordReducer: { \r\n        data: {\r\n          NewPassword,\r\n          ConfirmNewPassword,\r\n        }\r\n      },\r\n      code,\r\n      email,\r\n      history,\r\n      reDirect\r\n      } = this.props;\r\n\r\n    const modelChangePassword = {\r\n      phoneOrEmail: email,\r\n      Code: code,\r\n      NewPassword: NewPassword,\r\n      ConfirmNewPassword: ConfirmNewPassword,\r\n      usernameOrEmailOrPhoneNumber: email\r\n    }\r\n    await changePasswordMethods(modelChangePassword, 'change_password')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { Code,\r\n          NewPassword,\r\n          ConfirmNewPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n      code\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.action}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Código'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce tu código'}\r\n                    inputValue={code ? code : Code}\r\n                    onChange={changePasswordHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.Code}\r\n                    readonly\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePasswordForUser extends Component {\r\n  actionChangePasswordForUser = async () => {\r\n    const { changePasswordMethods, userId, changePasswordReducer: {data:{ NewPassword,  ConfirmNewPassword}} } = this.props;\r\n    await changePasswordMethods({NewPassword,  ConfirmPassword: ConfirmNewPassword, UserId: userId},'SetPassword');\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: {\r\n            NewPassword,\r\n            ConfirmNewPassword },\r\n            validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.actionChangePasswordForUser}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    textLabel = 'Repite la contraseña'\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordForUser);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass SendEmail extends Component {\r\n  action = async () => {\r\n    const {changePasswordMethods,\r\n        history,\r\n        reDirect\r\n      } = this.props;\r\n     let email =  this.props.changePasswordReducer.data.phoneOrEmail;\r\n    await changePasswordMethods({phoneOrEmail: email}, 'send_email_code')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { phoneOrEmail },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Inputs.Form1\r\n           loading={cargando}\r\n           error={error}\r\n           action={this.action}\r\n           textButton={'Continuar'}\r\n           textButtonLoading={'Enviando Email...'}\r\n           validations={validations}\r\n           handleValidations={changePasswordHandleValidation}\r\n        >\r\n          <Inputs.InputEmail  \r\n            name='phoneOrEmail'\r\n            inputValue={phoneOrEmail}\r\n            onChange={changePasswordHandleChange} \r\n            label='Correo'\r\n            RE={RegularExpressions.RE_EMAIL}\r\n            validateRE={validations.phoneOrEmail}\r\n          />\r\n        </Inputs.Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SendEmail);\r\n","import ComponentLogin from './Login'\r\nimport ComponentSignUp from './SignUp'\r\nimport ComponentChangePassword from './change-password/ChangePassword'\r\nimport ComponentChangePasswordForUser from './change-password/ChangePasswordForUser'\r\nimport ComponentVerifyAccount from './change-password/VerifyAccount'\r\nimport ComponentSendEmail from './change-password/SendEmail'\r\n\r\nexport const Login = ComponentLogin;\r\nexport const SignUp = ComponentSignUp;\r\nexport const ChangePassword = ComponentChangePassword;\r\nexport const VerifyAccount = ComponentVerifyAccount;\r\nexport const SendEmail = ComponentSendEmail;\r\nexport const ChangePasswordForUser = ComponentChangePasswordForUser;\r\n","// Imports de react.\r\nimport React from 'react';\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Container, \r\n    Card, \r\n    CardBody,\r\n} from 'reactstrap';\r\nimport {Logos, Navbars} from '../../config-components'\r\n\r\n\r\n\r\n// Imports de sessión components\r\nimport {Login, SendEmail, ChangePassword, SignUp} from '../../components-session'\r\n\r\nconst LayoutSection = ({children, message='',classSection='', classContainer='', classLogo= '', classCard='', classCardBody = ''}) =>{\r\n    return (\r\n        <section className={classSection}>\r\n            <Container className={ classContainer}>\r\n                <Card className={classCard}>\r\n                    <CardBody className={classCardBody}>\r\n                        {children} \r\n                        {message}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Iniciar sesión</h4>     \r\n                        <Login />   \r\n                        <p className=\"text-center mb-0\">¿No tienes una cuenta? <Link to='/sign-up'>Crea una cuenta</Link></p>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ForgotPassword = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-0\">Restablecer contraseña</h4>     \r\n                        <p className=\"text-muted\">Ingresa el email que tienes registrado</p>\r\n                        <SendEmail\r\n                            history={history}\r\n                            reDirect='/check-your-account'\r\n                        />   \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const CheckYourAccount = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Revisa tu correo</h4>     \r\n                        <p className=\"text-muted\">Te hemos enviado código a tu email, si no \r\n                            lo ves en tu bandeja de entrada, revisa en spam y correos no deseados.</p> \r\n                        <Link to=\"/login\"  className=\"btn btn-primary w-100\">Iniciar sesión</Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ChangePasswordPage = () => {\r\n    const {code, email} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Restablecer Contraseña</h4>    \r\n                        <p className=\"text-muted mb-4\">Ingresa el email que tienes registrado</p>\r\n                        <ChangePassword reDirect='/login' code={code} email={email} history={history}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const SignUpPage = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <LayoutSection\r\n                classSection='bg-light h-100 py-6 mt-5'\r\n                classCard='mx-auto card-form border-0'\r\n                message={\r\n                    <p className=\"text-center mb-0\">¿Ya tienes una cuenta? <Link to='/login'>Inicia Sesión</Link></p>\r\n                }\r\n            >\r\n                <h4 className=\"font-weight-bold mb-4\">Registrate</h4>     \r\n                <SignUp history={history} role='User' reDirect={'/check-your-account'} />\r\n            </LayoutSection>      \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export const ANALYTICS_CARGANDO = \"analytics_cargando\";\r\nexport const ANALYTICS_ERROR = \"analytics_error\";\r\nexport const ANALYTICS_CLEAN_STATE = \"analytics_clean_state\";\r\nexport const ANALYTICS_COUNT_PRODUCTS = \"analytics_count_companiesxxx\";\r\nexport const ANALYTICS_COUNT_COURSES = \"analytics_count_courses\";\r\nexport const ANALYTICS_COUNT_USERS = \"analytics_count_users\";\r\nexport const ANALYTICS_COUNT_ADMINS = \"analytics_count_admins\";\r\nexport const ANALYTICS_COUNT_COMPANIES = \"analytics_count_companies\";\r\nexport const ANALYTICS_COUNT_POSITIONS = \"analytics_count_positions\";\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const analyticsCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const analyticsMethods = (method, data='') => async (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type;\r\n      switch (method) {\r\n        case \"count_products\":\r\n            answer = await axios_api(`api/CountProducts`, true, \"get\");\r\n            type = ANALYTICS_COUNT_PRODUCTS;\r\n            break;\r\n        case \"count_courses\":\r\n          answer = await axios_api(`api/CountProductsByCategoryId?id=${data.Id}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COURSES;\r\n          break;\r\n        case \"count_users\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=User&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_USERS;\r\n          break;\r\n        case \"count_admins\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=Admin&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_ADMINS;\r\n          break;\r\n        case \"count_companies\":\r\n          answer = await axios_api(`api/CountCompanies`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COMPANIES;\r\n          break;\r\n        case \"count_positions\":\r\n          answer = await axios_api(`api/CountPositions?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_POSITIONS;\r\n          break;\r\n        default:\r\n            break\r\n  \r\n          \r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ANALYTICS_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods} = this.props;\r\n        await analyticsMethods('count_courses', {Id:6})\r\n        await analyticsMethods('count_users')\r\n        await analyticsMethods('count_admins')\r\n        await analyticsMethods('count_companies')\r\n    }\r\n    render(){\r\n        const {\r\n           \r\n            count_companies,\r\n            count_users,\r\n            count_admins,\r\n            api_actions:{\r\n                cargando,\r\n            }\r\n        } = this.props.analyticsReducer;\r\n        const cardAnalytics = [\r\n            {\r\n                id: '4-a',\r\n                title: 'Admins',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_admins,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/admins'\r\n            },\r\n            {\r\n                id: '2-a',\r\n                title: 'Usuarios',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_users,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/users'\r\n            },\r\n            {\r\n                id: '1-a',\r\n                title: 'Empresas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_companies,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: '/admin-dashboard/companies'\r\n            },       \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer}) => {\r\n    return {analyticsReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ADMIN_CARGANDO = \"admin_cargando\";\r\nexport const ADMIN_ERROR = \"admin_error\";\r\nexport const ADMIN_HANDLE_CHANGE = \"admin_handle_change\";\r\nexport const ADMIN_CLEAN_STATE = \"admin_clean_state\";\r\nexport const ADMIN_CRUD = \"admin_crud\";\r\nexport const ADMIN_HANDLE_VALIDATION = \"admin_handle_validation\";\r\nexport const ADMIN_USERS_LIST = \"admins_list\";\r\n\r\nexport const GetUserInfo = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Account/UserInfo?userId=${data.userId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n\r\nexport const GetUsersInfo = async(data) =>{\r\n    const answer = await axios_api(\r\n        `api/Account/UsersInfo?roleName=${data.roleName}`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type:ADMIN_USERS_LIST};\r\n}\r\n\r\nexport const PutContactInfo = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/PutContactInfo`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type:'contact_info_put'};\r\n}\r\n\r\nexport const ValidateAccount = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/ValidateAccount`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    GetUserInfo,\r\n    PutContactInfo,\r\n    GetUsersInfo,\r\n    ValidateAccount\r\n  } from \"./adminTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const adminHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const adminHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const adminCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const adminMethods = (data, method, loading = 'cargando', typeError = 'error') => async (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CARGANDO,\r\n      payload: loading //? {cargando: loading} : {cargando: 'cargando'}\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetUserInfo\":\r\n            answer = await GetUserInfo(data);\r\n            break;\r\n        case \"GetUsersInfo\":\r\n            answer = await GetUsersInfo(data);\r\n            break;\r\n        case \"PutContactInfo\":\r\n            answer = await PutContactInfo(data)\r\n            break;\r\n        case \"ValidateAccount\":\r\n            answer = await ValidateAccount(data);\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n     \r\n      dispatch({\r\n        type: answer.type,\r\n        payload: answer.res.data,\r\n      });\r\n    } catch (error) {    \r\n      let messageError = errorHandler(error);\r\n      let objectError = {\r\n        messageError: messageError,\r\n        typeError : typeError //? typeError : 'error'\r\n      }\r\n      dispatch({\r\n        type: ADMIN_ERROR,\r\n        payload: objectError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as adminActions from './reducer/adminActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfUsers = ({roleName = 'User', title='Usuarios', create='/create-user'}) => {\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(adminActions.adminMethods({roleName: roleName},'GetUsersInfo'))\r\n    }, [dispatch, roleName])\r\n    \r\n    const getUser = (userId) => {\r\n        let typeUser = roleName === 'User' ? 'user' : 'admin'\r\n        history.push(`/admin-dashboard-read-${typeUser}/${userId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_users\r\n    } = adminReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Usuarios</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Usuario','Acciones']}\r\n                propertiesTable={['Id','UserName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_users}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Usuario', handleAction: getUser },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfUsers;\r\n\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components\r\nimport { Inputs, RegularExpressions } from '../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as adminActions from \"./reducer/adminActions\";\r\n\r\nclass UpdateContactInfo extends Component {\r\n    async componentDidMount() {\r\n        const { adminMethods, userId } = this.props;\r\n        await adminMethods({userId},'GetUserInfo' ); \r\n    }\r\n    action = async () => {\r\n        const { \r\n            adminMethods, \r\n            userId, \r\n            adminReducer: {\r\n                data:{ \r\n                    Email, \r\n                    PhoneNumber,\r\n                    UserName,\r\n                    TypeUser \r\n                }\r\n            },\r\n            closeModal\r\n        } = this.props;\r\n\r\n        const contactModel= {\r\n            NewUserName: UserName,\r\n            NewTypeUser: TypeUser,\r\n            NewPhoneNumber: PhoneNumber,\r\n            NewEmail: Email,\r\n            UserId: userId\r\n        }\r\n\r\n        await adminMethods( contactModel,'PutContactInfo')\r\n        \r\n        const {\r\n            adminReducer: {\r\n            api_actions: { error },  \r\n            },\r\n        } = this.props;\r\n\r\n        if(error){\r\n\r\n        }else{\r\n            closeModal && closeModal();\r\n        }\r\n        \r\n    };\r\n\r\n    async componentWillUnmount(){\r\n        const { adminCleanState, adminMethods, userId } = this.props;\r\n        adminCleanState();\r\n        await adminMethods({userId},'GetUserInfo')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            adminHandleChange,\r\n            adminHandleValidation,\r\n            adminReducer: {\r\n                data: { Email, PhoneNumber, UserName },\r\n                validations,\r\n                api_actions: { cargando, error },   \r\n            }\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <Inputs.Form1\r\n                     loading={cargando}\r\n                     error={error}\r\n                     action={this.action}\r\n                     textButton={'Actualizar'}\r\n                     textButtonLoading={'Actualizando ...'}\r\n                     validations={validations}\r\n                     handleValidations={adminHandleValidation}\r\n                >\r\n                    <Inputs.InputEmail \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Email'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='email'\r\n                        inputName={'Email'}\r\n                        placeHolder={'Introduce un Email'}\r\n                        inputValue={Email}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.Email}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Nombre de usuario'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'UserName'}\r\n                        placeHolder={'Introduce un nombre de usuario'}\r\n                        inputValue={UserName}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.UserName}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Celular'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'PhoneNumber'}\r\n                        placeHolder={'Introduce un Celular'}\r\n                        inputValue={PhoneNumber}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.PhoneNumber}\r\n                    />\r\n                    \r\n                </Inputs.Form1>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ adminReducer }) => {\r\n  return { adminReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...adminActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateContactInfo);\r\n","import React, {useEffect} from 'react'\r\nimport {Button } from 'reactstrap'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as adminActions from './reducer/adminActions'\r\nimport {ApiResponses} from '../components-api'\r\nconst ValidateAccount = ({title}) => {\r\n    const {userId} = useParams();\r\n    const dispatch = useDispatch();\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(adminActions.adminMethods({userId},'GetUserInfo'))\r\n    // }, [dispatch, userId])\r\n\r\n    const {\r\n        data:{\r\n            EmailConfirmed,\r\n        },\r\n        api_actions:{\r\n            cargando,\r\n            error, \r\n            cargandoValidateAccount\r\n        }\r\n    } = adminReducer\r\n\r\n    if(cargando){\r\n        return <></>\r\n    }\r\n    const action = () =>{\r\n        dispatch(adminActions.adminMethods({Active: !EmailConfirmed, UserId: userId},'ValidateAccount'), 'cargandoValidateAccount')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h5 className=\"font-weight-bold mb-3\">Cuenta: {EmailConfirmed}</h5>\r\n            <Button className={`btn btn-${EmailConfirmed ? 'success' : 'danger'}`} onClick={action}> \r\n                {EmailConfirmed ? 'Validada' : 'No Validada'} <ApiResponses.Loader activate={cargandoValidateAccount}/> \r\n            </Button>\r\n            {error && <ApiResponses.Error message={error}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidateAccount;","import ComponentIdicators from './Indicators'\r\nimport ComponentsListOfUsers from './ListOfUsers' \r\nimport ComponentReadUser from './ReadUser'\r\nimport ComponentUpdateUserInfo from './UpdateUserInfo'\r\nimport ComponentValidateAccount from './ValidateAccount'\r\n\r\n\r\nexport const Indicators = ComponentIdicators;\r\nexport const ListOfUsers = ComponentsListOfUsers;\r\nexport const ReadUser = ComponentReadUser;\r\nexport const UpdateUserInfo = ComponentUpdateUserInfo;\r\nexport const ValidateAccount = ComponentValidateAccount;\r\n","import React from 'react'\r\nimport {Row, Col, Card, CardBody, Container} from 'reactstrap'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {ListOfUsers as Users, UpdateUserInfo, ValidateAccount} from '../../components-admin'\r\nimport {SignUp, ChangePasswordForUser} from '../../components-session/'\r\nimport {Navbars} from '../../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfUsers = () => {\r\n    return (\r\n        <>\r\n            <Users />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ListOfAdmins = () => {\r\n    return (\r\n        <>\r\n            <Users \r\n                roleName='Admin' \r\n                title='Administradores'\r\n                create='/create-admin'\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateAdmin = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Administrador</h5>\r\n                            <SignUp history={history} role='Admin' reDirect={'/admin-dashboard/admins'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadAdmin = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Admin</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n             </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateUser = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/users\" className=\"text-muted\">Usuarios</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear usuario</small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Usuario</h5>\r\n                            <SignUp history={history} role='User' reDirect={'/admin-dashboard/create-company'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadUser = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Usuario</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser userId={userId}/>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","export const SECTION_CARGANDO = \"section_cargando\";\r\nexport const SECTION_ERROR = \"section_error\";\r\nexport const SECTION_HANDLE_CHANGE = \"section_handle_change\";\r\nexport const SECTION_CLEAN_STATE = \"section_clean_state\";\r\nexport const SECTION_CRUD = \"section_crud\";\r\nexport const SECTIONS_LIST = \"sections_list\";\r\nexport const SECTIONS_SELECT = \"sections_list_select\";\r\nexport const SECTION_HANDLE_VALIDATION = \"section_handle_validation\";","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const sectionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const sectionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const sectionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const sectionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = SECTION_CRUD;\r\n      switch (method) {\r\n        case \"get_list_sections_select\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_SELECT;\r\n          break;\r\n        case \"get_list_sections\":\r\n          answer = await axios_api(\r\n            `api/Sections`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id_with_products\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseIdWithProducts?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n\r\n        case \"get_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n\r\n        case \"put_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_section\":\r\n          answer = await axios_api(\"api/Section\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: SECTION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nclass Section extends Component {\r\n    componentDidMount = async() =>{\r\n        const {sectionId, sectionMethods} = this.props;\r\n        sectionId && await sectionMethods({Id: sectionId}, 'get_section')\r\n    }\r\n    actionSection = async () => {\r\n        const {\r\n            sectionMethods, \r\n            sectionCleanState,\r\n            sectionReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                CourseId\r\n            }},\r\n            reDirect,\r\n            history,\r\n            courseId,\r\n            setModal\r\n        } = this.props\r\n        if(Id){\r\n            await sectionMethods({Id, Name, DateCreated, CourseId }, 'put_section')\r\n        }else{\r\n            await sectionMethods({ Name, CourseId: courseId}, 'post_section')\r\n        }\r\n        if(this.props.sectionReducer.data.Id){\r\n            sectionCleanState()\r\n            await sectionMethods({Id: courseId ? courseId : CourseId },'get_list_sections_by_course_id_with_products');\r\n            setModal && setModal()\r\n            reDirect && history.push(reDirect)\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            sectionHandleValidation,\r\n            sectionHandleChange,\r\n            sectionReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionSection}\r\n                textButton={Id ? 'Actualizar Sección' : 'Agregar Sección'}\r\n                textButtonLoading={Id ? 'Actualizando Sección...' : 'Agregando Sección...'}\r\n                validations={validations}\r\n                handleValidations={sectionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sección'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Sección'}\r\n                    inputValue={Name}\r\n                    onChange={sectionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({sectionReducer}) => {\r\n    return {sectionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...sectionActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Section from './Section'\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateModalSection = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n   \r\n    if(sectionModal.some){\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n    \r\n    return (\r\n        <ModalForm\r\n            state={sectionModal}\r\n            modalTitle={'Crear Sección'}\r\n            content={\r\n                <Section \r\n                    courseId={courseId}\r\n                    setModal={ sectionModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditSectionModal = ({section}) => {\r\n    const sectionModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            state={sectionModal}\r\n            modalTitle={`Editar Sección: ${section.SectionName}`}\r\n            content={<Section sectionId={section.SectionId} />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteSectionModal = ({section, courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n    const deleteSectionAction = async (sectionId) => {\r\n        await dispatch(sectionActions.sectionMethods({Id: sectionId},'delete_section'));\r\n        await dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'));\r\n    }\r\n    \r\n    return (\r\n        <ModalDelete \r\n            state={sectionModal}\r\n            modalTitle={`Eliminar Sección: ${section.SectionName}`}\r\n            content={`La siguiente sección \"${section.SectionName}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={() => deleteSectionAction(section.SectionId)}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","export const CATEGORY_PRODUCT_CARGANDO = \"category_products_cargando\";\r\nexport const CATEGORY_PRODUCT_ERROR = \"category_products_error\";\r\nexport const CATEGORY_PRODUCT_HANDLE_CHANGE = \"category_products_handle_change\";\r\nexport const CATEGORY_PRODUCT_CLEAN_STATE = \"category_products_clean_state\";\r\nexport const CATEGORY_PRODUCT_CRUD = \"category_products_crud\";\r\nexport const CATEGORIES_PRODUCTS_LIST = \"categories_products_list\";\r\nexport const CATEGORY_PRODUCT_HANDLE_VALIDATION = \"category_products_handle_validation\";\r\n\r\n\r\n\r\n\r\n","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryProductHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryProductHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = CATEGORY_PRODUCT_CRUD;\r\n      switch (method) {\r\n\r\n        case \"get_list_categories_products\":\r\n          answer = await axios_api(\r\n            `api/ProductCategories`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = CATEGORIES_PRODUCTS_LIST;\r\n          break;\r\n\r\n        case \"get_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n        \r\n        case \"put_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_category_product\":\r\n          answer = await axios_api(\"api/ProductCategory\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","export const BLOB_CARGANDO = \"blob_cargando\";\r\nexport const BLOB_ERROR = \"blob_error\";\r\nexport const BLOB_HANDLE_CHANGE = \"blob_handle_change\";\r\nexport const BLOB_HANDLE_VALIDATION = \"blob_handle_validation\";\r\nexport const BLOB_CLEAN_STATE = \"blob_clean_state\";\r\nexport const BLOB_CRUD = \"blob_crud\";\r\n","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const blobHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const blobHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const blobCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const blobMethods = (data, method) => async (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CARGANDO,\r\n  });\r\n  try {\r\n    let answer;\r\n    let type = BLOB_CRUD;\r\n    switch (method) {\r\n      case \"post_blob\":\r\n        answer = await axios_api(`api/Blob`, true, \"post\", data);\r\n        break;\r\n      case \"put_blob\":\r\n        answer = await axios_api(\r\n          `api/Blob?id=${data.id}`,\r\n          true,\r\n          \"put\",\r\n          data.blob\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    //answer = { data: answer.data[0], status: answer.status };\r\n    dispatch({\r\n      type: type,\r\n      payload: answer.data[0],\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: BLOB_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","/*\r\n * Funciones para el manejo de archivos y form datas\r\n */\r\n\r\nexport const b64toBlob = (b64Data, contentType = \"\", sliceSize = 512) => {\r\n  let byteCharacters = atob(b64Data);\r\n  let byteArrays = [];\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    let slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n    let byteNumbers = new Array(slice.length);\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i);\r\n    }\r\n\r\n    let byteArray = new Uint8Array(byteNumbers);\r\n\r\n    byteArrays.push(byteArray);\r\n  }\r\n\r\n  let blob = new Blob(byteArrays, { type: contentType });\r\n  return blob;\r\n};\r\n\r\n/*\r\n * creamos un blob\r\n */\r\nexport const createBlob = (dataUri) => {\r\n  let block = dataUri.split(\";\");\r\n  let contentType = block[0].split(\":\")[1];\r\n  let realData = block[1].split(\",\")[1];\r\n  const blob = b64toBlob(realData, contentType);\r\n  return blob;\r\n};\r\n\r\n/*\r\n * Convertimos un blob a form data\r\n */\r\nexport const createFormData = (\r\n  blob,\r\n  BlobTypeId = 1,\r\n  ContainerName = \"publicproducts\",\r\n  IsPrivate = true,\r\n  UserId = \"\"\r\n) => {\r\n  const data = new FormData();\r\n  data.set(\"BlobTypeId\", BlobTypeId);\r\n  data.set(\"ContainerName\", ContainerName);\r\n  data.set(\"IsPrivate\", IsPrivate);\r\n  //   if (localStorage.getItem(\"role\") === \"Admin\") {\r\n  //     data.set(\"UserId\", UserId);\r\n  //   }\r\n  data.append(\"file\", blob);\r\n  return data;\r\n};\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as categoryProductActions from '../components-category-product/reducer/categoryProductActions'\r\nimport * as categoryActions from '../components-category/reducer/categoryActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Product extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, categoryProductMethods, categoryMethods} = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        await categoryProductMethods(\"\", 'get_list_categories_products');\r\n        await categoryMethods(\"\",\"GetCategories\")\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    ProductCategoryId, \r\n                    fileCover,\r\n                    Categories\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            categoryProductReducer:{\r\n                list_categories_products\r\n            },\r\n            blobReducer,\r\n            categoryReducer:{\r\n                list_categories\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'ProductCategoryId'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={ProductCategoryId}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.ProductCategoryId}\r\n                    optionPlaceHolder={'Selecciona un tipo de producto'}\r\n                    options={list_categories_products}\r\n                /> \r\n\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Caracteristicas'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Categories'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={Categories}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Categories}\r\n                    optionPlaceHolder={'Selecciona caracteristicas'}\r\n                    options={list_categories}\r\n                /> */}\r\n                \r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer, categoryProductReducer, blobReducer, categoryReducer}) => {\r\n    return {productReducer, categoryProductReducer, blobReducer, categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...categoryProductActions,\r\n    ...blobActions,\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Product from './Product'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateProductModal = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const porductModal = SwitchSome();\r\n\r\n    if(porductModal.some){\r\n        dispatch(productActions.productCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={porductModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Product \r\n                    courseId={courseId} \r\n                    hasSection={true}\r\n                    setModal={porductModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditProductModal = ({product, courseId}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={porductModal}\r\n            modalTitle={`Editar Recurso: ${product.Name}`}\r\n            content={<Product \r\n                productId={product.Id} \r\n                hasSection={true} \r\n                courseId={courseId}\r\n                setModal={porductModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteProductModal = ({product, action}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ porductModal}\r\n            modalTitle={`Eliminar Recurso: ${product.Name}`}\r\n            content={`El siguiente Recurso \"${product.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","// Imports de react.\r\nimport React, { useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Badge} from 'reactstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Import de components.\r\nimport {EditSectionModal, DeleteSectionModal} from './ModalSections'\r\nimport {EditProductModal, DeleteProductModal} from '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\n\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfSections = ({courseId}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [dispatch, courseId])\r\n\r\n    const cleanSection = () => {\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n\r\n    const deleteProductAction = (sectionId) => {\r\n        dispatch(productActions.productMethods({Id: sectionId},'delete_product'))\r\n        dispatch(productActions.productCleanState())\r\n        cleanSection()\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    // if(list_sections.len){\r\n    //     dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n            {list_sections.map(section => {\r\n                 //TODO: implementar nuevo formato para leer lor recursos de de una seción\r\n                 //TODO: Crear reducers de resources.\r\n                return <>\r\n                    <div className=\"border mb-3 p-2\">\r\n                        <div className='d-flex mb-2 p-2 text-left'>\r\n                            <h6 className='flex-grow-1 font-weight-bold mb-0'>{section.SectionName} </h6>\r\n                            <div>\r\n                                <EditSectionModal section={section} cleanSection={cleanSection}/>\r\n                                <DeleteSectionModal section={section} courseId={courseId}/>\r\n                            </div>\r\n                        </div>\r\n                    {\r\n                        section.Products && \r\n                        section.Products.map(product => {\r\n                        if(product !== null){\r\n                        return(\r\n                            <Badge color={'light'} className='d-flex mb-2 p-2 text-left'>\r\n                                <p className='flex-grow-1 mb-0'>{product.Name} </p>\r\n                                <div>\r\n                                    <Link to={`/player/watch-class/${product.Id}/${courseId}`}>\r\n                                    <FaIcons.FaEye className=\"mr-2\" />\r\n                                    </Link>\r\n                                    <EditProductModal product={product} courseId={courseId} />\r\n                                    <DeleteProductModal product={product} action={() => deleteProductAction(product.Id)}/>\r\n                                </div>\r\n                            </Badge>\r\n                            )\r\n                        }\r\n                        return '';\r\n                        })\r\n                    }\r\n                    </div>\r\n                </>\r\n            })}\r\n            {error ? <Error message={error}></Error> : ''}\r\n        </>\r\n    )\r\n}\r\n\r\n","import ComponentSection from './Section'\r\nimport * as ComponentListOfSections from './ListOfSections'\r\nimport * as ComponentModalSections from './ModalSections'\r\nimport * as ComponentCrudCourse from './CrudCourse'\r\n\r\nexport const Section =  ComponentSection;\r\nexport const ModalSections = ComponentModalSections;\r\nexport const CrudCourse = ComponentCrudCourse.CrudCourse;\r\nexport const ListOfSections = ComponentListOfSections.ListOfSections;","// Imports de react.\r\nimport React from 'react'\r\n\r\n// Imports de components.\r\nimport {CreateModalSection} from './ModalSections'\r\nimport {ListOfSections} from './ListOfSections'\r\nimport {CreateProductModal} from  '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nexport const CrudCourse = ({courseId}) => {\r\n\r\n    \r\n    return(\r\n        <>\r\n        <div className='d-flex justify-content-between'>\r\n            <h5 className=\"font-weight-bold mb-3\">Crea una sección nueva a tu curso</h5>\r\n            <CreateModalSection courseId={courseId}/>\r\n        </div> \r\n\r\n            <div className='d-flex justify-content-between'>\r\n            <h6 className=\"font-weight-bold mb-3\">Añade videos o documentos a tus secciones</h6>\r\n            <CreateProductModal courseId={courseId}/>\r\n        </div>       \r\n        <ListOfSections courseId={courseId}></ListOfSections>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Container, Row } from 'reactstrap'\r\n\r\n// Imports de config-components.\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\n// Imports de components\r\nimport Indicators from '../../components-admin/Indicators'\r\n\r\nimport {\r\n    AdminUsersPages, AdminCoursesPages, AdminProductPages, AdminCompanyPages\r\n} from './index'\r\n\r\nexport const Dashboard = () => {\r\n    \r\n    let {indicator} = useParams();\r\n    let history = useHistory();\r\n    const AdminSections = (page) =>{\r\n        switch(page){\r\n\r\n            case 'create-admin':\r\n                return <AdminUsersPages.CreateAdmin />\r\n            case 'admins':\r\n                return <AdminUsersPages.ListOfAdmins reDirect={'admin'} history={history} />\r\n            case 'create-user':\r\n                return <AdminUsersPages.CreateUser />\r\n            case 'users':\r\n                return <AdminUsersPages.ListOfUsers reDirect={'section'} history={history} />\r\n                 \r\n            case 'create-product':\r\n                return <AdminProductPages.CreateProduct />\r\n            case 'companies':\r\n                return <AdminCompanyPages.ListOfCompanies />\r\n            \r\n            default:\r\n                return <>\r\n                    <Row className=\"mb-4\">\r\n                        <Indicators />\r\n                    </Row>\r\n                </>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           AdminSections(indicator)\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const TemplateDashboardAdmin = ({children}) => {\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           children\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}","// Imports de react.\r\nimport React from 'react' \r\nimport { useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {CrudCourse} from '../../components-section'\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const CreateSection = () => {\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <Row>\r\n                <Col lg=\"8\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <CrudCourse  courseId={courseId} ></CrudCourse>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            {/* <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/> */}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Course extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, } = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        this.props.productReducer.data.ProductCategoryId = 6;\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            //TODO: revisar porque al crear el curso truena\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}${this.props.courseReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    fileCover,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer,  blobReducer}) => {\r\n    return {productReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);","// Imports de react.\r\nimport React from 'react'\r\n\r\nimport {ListOfProducts} from '../components-product'\r\n\r\nconst ListOfCourses = ({reDirect}) => {\r\n    return(\r\n        <ListOfProducts \r\n            title={'Cursos'} \r\n            categoryProductId={6} \r\n            reDirect={reDirect}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ListOfCourses\r\n\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\n\r\nexport const Player = ({\r\n    url = 'https://Version 4storage.blob.core.windows.net/publicproducts/5ad7523a-cf4e-4dfa-8942-6c6fa1a86744.mp4'\r\n}) => {\r\n    return (\r\n        <div> \r\n            <ReactPlayer \r\n                url={url}\r\n                width='100%'\r\n                height='100%'\r\n                controls\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import * as ComponentPlayer from './Player'\r\n\r\nexport const PlayerMedia = ComponentPlayer;","import React, { useState } from 'react';\r\nimport { Collapse } from 'reactstrap';\r\n\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst CollapseSection = ({\r\n  title = 'Sección',\r\n  countVideos = '0',\r\n  videos = [],\r\n  time = '30 min'\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n        <div onClick={toggle} className=\"d-flex bg-light border-bottom pointer p-3\">\r\n            <div className=\"flex-grow-1\">\r\n                <p className=\"font-weight-bold mb-0\">{title}</p>\r\n                <small>{countVideos} | {time}</small>\r\n            </div>\r\n            <div>\r\n                <FaIcons.FaChevronDown />\r\n            </div>\r\n        </div>\r\n      <Collapse isOpen={isOpen} className=\"p-3\">\r\n        {\r\n          videos.map((video, i ) => {\r\n            return (\r\n              <div className=\"d-flex mb-3\">\r\n                  {/*   <div className=\"mr-3\">\r\n                      <input type=\"checkbox\" class=\"\" id=\"\" />\r\n                  </div> */}\r\n                  <div>\r\n                      <p className=\"mb-0\">{`${i+1}. ${video.Name}`}</p>\r\n                      <small className=\"text-muted\"><FaIcons.FaPlayCircle className=\"mr-2\" /> 5 min</small>\r\n                  </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollapseSection;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Container } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst TabCourse = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Descripción General\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Sporte\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab} className=\"py-4\">\r\n        <TabPane tabId=\"1\">\r\n            <Container>\r\n                <h5>Acerca de este curso</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">  \r\n            <Container>\r\n                <h5>Soporte y ayuda</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabCourse;","import React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Navbars} from '../config-components'\r\nimport {PlayerMedia} from '../components-player'\r\nimport { Row, Col } from 'reactstrap';\r\nimport CollapseSection from '../config-components/Collapse'\r\nimport TabCourse from '../config-components/TabCourse'\r\n\r\nimport * as productActions from '../components-product/reducer/productActions';\r\nimport * as sectionActions from '../components-section/reducer/sectionActions';\r\n\r\n\r\nexport const WatchClass = () => {\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n    const stateProduct = useSelector(state => state.productReducer)\r\n    const dispatch = useDispatch();\r\n    const {productId, courseId} = useParams();\r\n    useEffect(() => {\r\n        dispatch(productActions.productMethods({Id: productId},'get_product'));\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [productId, courseId, dispatch])\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    return (\r\n        <div>\r\n            <Navbars.NavbarAdmin /> \r\n            <Row className=\"no-gutters\">\r\n                <Col lg=\"8\">\r\n                    <PlayerMedia.Player \r\n                        url={stateProduct.data.Blobs?.length > 0 \r\n                            ? stateProduct.data.Blobs[0].Uri\r\n                            : ''\r\n                    }\r\n                    />  \r\n                    <TabCourse />\r\n                </Col>\r\n                <Col lg=\"4\" className=\"border-left\">\r\n                    <div>\r\n                        <div className=\"p-3 border-bottom shadow-sm\">\r\n                            <h6 className=\"font-weight-bold mb-0\">Contenido del curso</h6>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                {list_sections.map(section => {\r\n                                    return (\r\n                                        <CollapseSection \r\n                                            title={section.SectionName} \r\n                                            countVideos={section.Products.length} \r\n                                            videos={section.Products}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                                \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import ComponentCourse from './Course'\r\nimport ComponentListOfCourses from './ListOfCourses'\r\nimport * as ComponentWatchClass from './WatchClass'\r\n\r\n\r\nexport const Course = ComponentCourse ;\r\nexport const ListOfCourses = ComponentListOfCourses ;\r\nexport const PlayerMedia = ComponentWatchClass;\r\n","// Imports de react.\r\nimport React from 'react' \r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {ListOfCourses as Courses, Course, PlayerMedia} from '../../components-course'\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfCourses = ({reDirect, history}) =>{\r\n    return (\r\n        <Courses reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCourse = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <Card className=\"border-0\">\r\n            <CardBody className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\">Crea un curso nuevo</h5>\r\n                <Course reDirect={'/admin-dashboard/section/'} history={history}/>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const WhatchCourse = () => {\r\n    return (\r\n        <>\r\n            <PlayerMedia.WatchClass /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    const history = useHistory();\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\n\r\nclass CategoryProduct extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryProductId, categoryProductMethods} = this.props;\r\n        categoryProductId && await categoryProductMethods({Id: categoryProductId}, 'get_category_product')\r\n    }\r\n    actionCategoryProduct = async () => {\r\n        const {\r\n            categoryProductMethods, \r\n            categoryProductCleanState,\r\n            categoryProductReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryProductMethods({Id: Id, Name: Name}, 'put_category_product')\r\n\r\n        }else{\r\n            await categoryProductMethods({Name: Name}, 'post_category_product')\r\n        }\r\n        if(this.props.categoryProductReducer.data.Id){\r\n            categoryProductCleanState()\r\n            await categoryProductMethods('','get_list_categories_products');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryProductHandleValidation,\r\n            categoryProductHandleChange,\r\n            categoryProductReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategoryProduct}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryProductHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Categoria de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryProductHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryProduct);","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport {Badge} from 'reactstrap'\r\n\r\n// Import de components.\r\nimport CategoryProduct from './CategoryProduct'\r\n\r\n// Imports de config-components.\r\nimport {ModalForm, ModalDelete} from '../config-components/Modals'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass ListOfCategoriesProducts extends Component {\r\n    componentDidMount = async () => {\r\n        const {categoryProductMethods} = this.props;\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    deleteAction = async (categoryProductId) => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        await categoryProductMethods({Id: categoryProductId},'delete_category_product');\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    cleanModal = async () => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            categoryProductReducer: { \r\n                api_actions: {cargando, error},\r\n                list_categories_products\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n                {list_categories_products.map(category => {\r\n                    return <Badge color={'light'} className='d-inline-block mr-2 p-2'>\r\n                        <span className='mr-2'>{category.Name} </span>\r\n                        {/* <ModalForm \r\n                            key={category.Id}\r\n                            clean={this.cleanModal}\r\n                            modalTitle={`Editar Categoria: ${category.Name}`}\r\n                            content={<CategoryProduct categoryProductId={category.Id}></CategoryProduct>}\r\n                        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm> */}\r\n                        {/* <ModalDelete \r\n                            key={category.Id}\r\n                            modalTitle={`Eliminar Categoría: ${category.Name}`}\r\n                            content={`La siguiente categoría \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n                            action={() => this.deleteAction(category.Id)}\r\n                        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete> */}\r\n                     </Badge>\r\n                   \r\n                })}\r\n                {error ? <Error message={error}></Error> : ''}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfCategoriesProducts);","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nclass Category extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryId, categoryMethods} = this.props;\r\n        categoryId && await categoryMethods({Id: categoryId}, 'GetCategory')\r\n    }\r\n    actionCategory = async () => {\r\n        const {\r\n            categoryMethods, \r\n            categoryCleanState,\r\n            categoryReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryMethods({Id: Id, Name: Name}, 'PutCategory')\r\n\r\n        }else{\r\n            await categoryMethods({Name: Name}, 'PostCategory')\r\n        }\r\n        if(this.props.categoryReducer.data.Id){\r\n            categoryCleanState()\r\n            await categoryMethods('','GetCategories');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryHandleValidation,\r\n            categoryHandleChange,\r\n            categoryReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategory}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Añade caracteristicas para seleccionar en los proyectos'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryReducer}) => {\r\n    return {categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Category from './Category'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateCategoryModal = ({category}) => {\r\n    const dispatch = useDispatch()\r\n    const categoryModal = SwitchSome();\r\n\r\n    if(categoryModal.some){\r\n        dispatch(categoryActions.categoryCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={categoryModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Category \r\n                    category={category} \r\n                    hasSection={true}\r\n                    setModal={categoryModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditCategoryModal = ({category}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={categoryModal}\r\n            modalTitle={`Editar Recurso: ${category.Name}`}\r\n            content={<Category \r\n                categoryId={category.Id} \r\n                hasSection={true} \r\n                setModal={categoryModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteCategoryModal = ({category, action}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ categoryModal}\r\n            modalTitle={`Eliminar Recurso: ${category.Name}`}\r\n            content={`El siguiente Recurso \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_DETAIL_CARGANDO = \"product_detail_cargando\";\r\nexport const PRODUCT_DETAIL_ERROR = \"product_detail_error\";\r\nexport const PRODUCT_DETAIL_HANDLE_CHANGE = \"product_detail_handle_change\";\r\nexport const PRODUCT_DETAIL_CLEAN_STATE = \"product_detail_clean_state\";\r\nexport const PRODUCT_DETAIL_CRUD = \"product_detail_crud\";\r\nexport const PRODUCT_DETAILS_LIST = \"product_details_list\";\r\nexport const PRODUCT_DETAIL_HANDLE_VALIDATION = \"product_detail_handle_validation\";\r\n\r\nexport const GetProductDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/ProductDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCT_DETAILS_LIST};\r\n}\r\n\r\nexport const GetProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const GetProductDetailByProductId = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetailByProductId?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_detail_put'};\r\n}\r\n\r\nexport const PostProductDetail = async(data)=> {\r\n    const  answer = await axios_api(\"api/ProductDetail\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION, \r\n    GetProductDetails,\r\n    GetProductDetail,\r\n    GetProductDetailByProductId,\r\n    PutProductDetail,\r\n    PostProductDetail,\r\n    DeleteProductDetail,\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProductDetails\":\r\n          answer = await GetProductDetails(); \r\n          break;\r\n\r\n        case \"GetProductDetail\":\r\n          answer = await GetProductDetail(data);\r\n          break;\r\n\r\n        case \"GetProductDetailByProductId\":\r\n          answer = await GetProductDetailByProductId(data);\r\n          break;\r\n        case \"PutProductDetail\":\r\n          answer = await PutProductDetail(data);\r\n          break;\r\n\r\n        case \"PostProductDetail\":\r\n          answer = await PostProductDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteProductDetail\":\r\n          answer = await DeleteProductDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productDetailActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\n\r\nclass ProductDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productDetailMethods} = this.props;\r\n        productId && await productDetailMethods({Id: productId}, 'GetProductDetailByProductId');\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            productDetailMethods, \r\n            productDetailReducer: {data : {\r\n                Id,\r\n                SubTitle,\r\n                DateCreated,\r\n                Description, \r\n                BlobId\r\n            }},\r\n            productId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            SubTitle: SubTitle ? SubTitle : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            ProductId: productId ? productId : '',\r\n            BlobId: BlobId ? BlobId : '',\r\n        }\r\n        await productDetailMethods(model, action);\r\n    }\r\n\r\n    actionProductDetail = async () => {\r\n        const {\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blob,\r\n                    fileZip\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileZip?.length &&  Blob){\r\n                let fileZipAnswer = await this.actionBlob(fileZip, 1 ,[Blob]);\r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            } else{\r\n                let fileZipAnswer = fileZip?.length && await this.actionBlob(fileZip, 1); \r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            }\r\n        }else{\r\n            let fileZipAnswer = fileZip.length && await this.actionBlob(fileZip, 1); \r\n            this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n            fileZipAnswer &&  await this.sendAction('PostProductDetail')\r\n        }\r\n        if(this.props.productDetailReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productDetailReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productDetailHandleValidation,\r\n            productDetailHandleChange,\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    SubTitle,\r\n                    Description, \r\n                    fileZip\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                <Form1\r\n                    loading={\r\n                        cargando \r\n                            ? cargando : \r\n                            blobReducer.api_actions.cargando \r\n                            ? blobReducer.api_actions.cargando \r\n                            : false \r\n                        }\r\n                    error={error}\r\n                    action={this.actionProductDetail}\r\n                    textButton={Id ? 'Guardar Detalle' : 'Agregar Detalle'}\r\n                    textButtonLoading={Id ? 'Guardando Detalle...' : 'Agregando Detalle...'}\r\n                    validations={validations}\r\n                    handleValidations={productDetailHandleValidation}\r\n                >\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Subtitulo'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'SubTitle'}\r\n                        placeHolder={'Introduce un subtitulo '}\r\n                        inputValue={SubTitle}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={50}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.SubTitle}\r\n                    />\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Detalles'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='textarea'\r\n                        inputName={'Description'}\r\n                        placeHolder={'Introduce detalles'}\r\n                        inputValue={Description}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={500}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.Description}\r\n                    />\r\n                    <InputFile\r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Sube un .zip con tus archivos'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='file'\r\n                        inputName='fileZip'\r\n                        inputId='fileZip-video'\r\n                        inputValue={fileZip ? fileZip : ''}\r\n                        onChange={productDetailHandleChange}\r\n                        validateRE={validations.fileZip}\r\n                    /> \r\n                </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productDetailReducer,  blobReducer}) => {\r\n    return {productDetailReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","import ComponentProductDetail from './ProductDetails'\r\n\r\nexport const ProductDetail = ComponentProductDetail;","// Imports de react\r\nimport React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {Row, Col, Card, CardBody} from 'reactstrap'\r\n\r\n// Imports de componentes.\r\nimport {CardProduct, ListOfProducts as Products, AddCategories} from '../../components-product'\r\nimport Product from '../../components-product/Product'\r\nimport CategoryProduct from '../../components-category-product/CategoryProduct'\r\nimport ListOfCategoriesOfProducts from '../../components-category-product/ListOfCategoriesOfProducts'\r\nimport {Category, ListOfCategories} from '../../components-category'\r\nimport {ProductDetail} from '../../components-product-details'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfProducts = () => {\r\n    return(\r\n        <Products reDirect={'/admin-dashboard/product'}/>\r\n    )\r\n}\r\n\r\nexport const CreateProduct = () => {\r\n    const history = useHistory();  \r\n    return (\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear producto</small></li>\r\n        </ul>\r\n        <Row>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Crea un producto nuevo</h5>\r\n                        <Product reDirect={`/admin-dashboard/product`} history={history}/>\r\n                        \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <CardProduct />\r\n                \r\n                {/* <Card className=\"border-0\">\r\n                    <CardBody>\r\n                        <Category />\r\n                        <ListOfCategories/>\r\n                    </CardBody>\r\n                </Card> */}\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditProduct = () => {\r\n    let {productId,section} = useParams();\r\n    const history = useHistory();\r\n\r\n    const ProductSection = (section) => {\r\n        switch(section){\r\n            case 'cover':\r\n                return <>\r\n                <h5 className=\"font-weight-bold mb-3\">Edita este producto </h5>\r\n                <Product productId={productId} history={history}/>\r\n                </>\r\n            case 'detail':\r\n                return <div>\r\n                    <h5 className=\"font-weight-bold mb-3\">Sube detalle del producto </h5>\r\n                    <ProductDetail productId={productId} />\r\n                </div>\r\n                \r\n            default:\r\n                return <Product productId={productId} history={history}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Editar producto</small></li>\r\n            </ul>\r\n             <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <Link to={`/admin-dashboard/product/${productId}/cover`}>producto </Link>/ \r\n                            <Link  to={`/admin-dashboard/product/${productId}/detail`}> detalle</Link>\r\n                            \r\n                            {\r\n                                ProductSection(section)\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg=\"6\">\r\n                    <CardProduct />\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <AddCategories />\r\n                        </CardBody>\r\n                    </Card> */}\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <Category />\r\n                            <ListOfCategories/>\r\n                        </CardBody>\r\n                    </Card> */}\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CategoryProducts = () =>{\r\n    return (\r\n        <>\r\n            <CategoryProduct />\r\n            <ListOfCategoriesOfProducts></ListOfCategoriesOfProducts>\r\n        </>\r\n    )\r\n}\r\n\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const COMPANY_CARGANDO = \"company_cargando\";\r\nexport const COMPANY_ERROR = \"company_error\";\r\nexport const COMPANY_HANDLE_CHANGE = \"company_handle_change\";\r\nexport const COMPANY_CLEAN_STATE = \"company_clean_state\";\r\nexport const COMPANY_CRUD = \"company_crud\";\r\nexport const COMPANIES_LIST = \"companies_list\";\r\nexport const COMPANY_HANDLE_VALIDATION = \"company_handle_validation\";\r\n\r\nexport const GetCompanies = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Companies`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\n\r\nexport const GetCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const PutCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'company_put'};\r\n}\r\n\r\nexport const PostCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const DeleteCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_HANDLE_VALIDATION, \r\n    GetCompanies,\r\n    GetCompany,\r\n    PutCompany,\r\n    PostCompany,\r\n    DeleteCompany\r\n  } from \"./companyTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const companyHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const companyHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const companyCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const companyMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCompanies\":\r\n          answer = await GetCompanies(); \r\n          break;\r\n\r\n        case \"GetCompany\":\r\n          answer = await GetCompany(data);\r\n          break;\r\n\r\n        case \"PutCompany\":\r\n          answer = await PutCompany(data);\r\n          break;\r\n\r\n        case \"PostCompany\":\r\n          answer = await PostCompany(data);\r\n          break;\r\n        \r\n        case \"DeleteCompany\":\r\n          answer = await DeleteCompany(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nclass Company extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {companyId, companyMethods} = this.props;\r\n        companyId && await companyMethods({Id: companyId}, 'GetCompany');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            companyMethods, \r\n            companyReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                TradeName,\r\n                BusinessName, \r\n                BusinessActivity,\r\n                UserId\r\n            }},\r\n            userId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            TradeName: TradeName ? TradeName : '',\r\n            BusinessName: BusinessName ? BusinessName : '',\r\n            BusinessActivity: BusinessActivity ? BusinessActivity : 0,\r\n            UserId: UserId ? UserId : userId\r\n        }\r\n        await companyMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            companyReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutCompany');\r\n        }else{\r\n            await this.sendAction('PostCompany')\r\n        }\r\n        if(this.props.companyReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.companyReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            companyHandleValidation,\r\n            companyHandleChange,\r\n            companyReducer: {\r\n                data : {\r\n                    Id, \r\n                    TradeName,\r\n                    BusinessName,\r\n                    BusinessActivity, \r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Empresa' : 'Crear Empresa'}\r\n                textButtonLoading={Id ? 'Guardando Empresa...' : 'Crear Empresa...'}\r\n                validations={validations}\r\n                handleValidations={companyHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre Comercial'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'TradeName'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={TradeName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.TradeName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Razón social'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'BusinessName'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={BusinessName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessName}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Actividad'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'BusinessActivity'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={BusinessActivity}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessActivity} \r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({companyReducer}) => {\r\n    return {companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...companyActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods, companyMethods, companyId} = this.props;\r\n        await analyticsMethods('count_positions', {companyId})\r\n        await companyMethods({Id:companyId},'GetCompany')\r\n    }\r\n    render(){\r\n        const {\r\n            count_positions,\r\n            count_products,\r\n            api_actions:{\r\n                cargando,\r\n            },\r\n            \r\n        } = this.props.analyticsReducer;\r\n        \r\n        const cardAnalytics = [\r\n            \r\n            {\r\n                id: '1-p',\r\n                title: 'Puestos',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_positions,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: `/admin-dashboard/company/${this.props.companyId}/positions`\r\n            },\r\n            {\r\n                id: '2-p',\r\n                title: 'Empleados',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_products,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: '/admin-dashboard/company/employees'\r\n            }, \r\n            {\r\n                id: '3-p',\r\n                title: 'Organigrama',\r\n                number: 'Ver',\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: `/admin-dashboard/company/${this.props.companyId}/organization-chart`\r\n            },      \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer, companyReducer}) => {\r\n    return {analyticsReducer, companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n    ...companyActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import ComponentCompany from './Company'\r\nimport ComponentCompanyIndicators from './CompanyIndicators'\r\nimport ComponentListOfCompanies from './ListOfCompanies'\r\n\r\n\r\nexport const Company = ComponentCompany;\r\nexport const CompanyIndicators = ComponentCompanyIndicators;\r\nexport const ListOfCompanies = ComponentListOfCompanies;","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfCompanies = ({ title='Empresas', create='/create-company'}) => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(companyActions.companyMethods('','GetCompanies'))\r\n    }, [dispatch])\r\n    \r\n    const getCompany = (companyId) => {\r\n        history.push(`/admin-dashboard/company/${companyId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_companies\r\n    } = companyReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Empresas</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Empresa','Acciones']}\r\n                propertiesTable={['Id','TradeName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_companies}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empresa', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCompanies;\r\n\r\n","import {Company, CompanyIndicators, ListOfCompanies as Companies} from '../../components-company'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\n\r\nexport const ListOfCompanies = ({reDirect, history}) =>{\r\n    return (\r\n        <Companies reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCompany = () => {\r\n    const {userId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Crea una Empresa</h5>\r\n                                <Company userId={userId} history={history} reDirect={'/admin-dashboard/company'} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Indicators = () => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const {companyId} = useParams();\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <h2>Empresa: {TradeName}</h2>\r\n                <Row className=\"mb-4\">\r\n                    <CompanyIndicators companyId={companyId}/>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const POSITION_CARGANDO = \"position_cargando\";\r\nexport const POSITION_ERROR = \"position_error\";\r\nexport const POSITION_HANDLE_CHANGE = \"position_handle_change\";\r\nexport const POSITION_CLEAN_STATE = \"position_clean_state\";\r\nexport const POSITION_CRUD = \"position_crud\";\r\nexport const POSITIONS_LIST = \"position_list\";\r\nexport const POSITION_HANDLE_VALIDATION = \"position_handle_validation\";\r\n\r\nexport const GetPositions = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Positions`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\nexport const GetPositionsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PositionsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\n\r\nexport const GetPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const PutPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'position_put'};\r\n}\r\n\r\nexport const PostPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const DeletePosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_HANDLE_VALIDATION, \r\n    GetPositions,\r\n    GetPositionsByCompanyId,\r\n    GetPosition,\r\n    PutPosition,\r\n    PostPosition,\r\n    DeletePosition\r\n  } from \"./positionTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const positionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const positionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const positionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const positionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPositions\":\r\n          answer = await GetPositions(); \r\n          break;\r\n\r\n        case \"GetPositionsByCompanyId\":\r\n          answer = await GetPositionsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPosition\":\r\n          answer = await GetPosition(data);\r\n          break;\r\n\r\n        case \"PutPosition\":\r\n          answer = await PutPosition(data);\r\n          break;\r\n\r\n        case \"PostPosition\":\r\n          answer = await PostPosition(data);\r\n          break;\r\n        \r\n        case \"DeletePosition\":\r\n          answer = await DeletePosition(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: POSITION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nclass Position extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {positionId, positionMethods} = this.props;\r\n        positionId && await positionMethods({Id: positionId}, 'GetPosition');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            positionMethods, \r\n            positionReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                Description,\r\n                CompanyId,\r\n                Objective,\r\n                Knowledge,\r\n                Salary\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            Description: Description ? Description : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Objective: Objective ? Objective : '',\r\n            Knowledge: Knowledge ? Knowledge : '',\r\n            Salary: Salary ? Salary : ''\r\n        }\r\n        await positionMethods(model, action);\r\n    }\r\n\r\n    actionPosition = async () => {\r\n        const {\r\n            positionCleanState,\r\n            positionReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPosition');\r\n        }else{\r\n            await this.sendAction('PostPosition')\r\n        }\r\n        if(this.props.positionReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            positionCleanState()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            positionHandleValidation,\r\n            positionHandleChange,\r\n            positionReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Description,\r\n                    Objective,\r\n                    Salary\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPosition}\r\n                textButton={Id ? 'Guardar Puesto' : 'Crear Puesto'}\r\n                textButtonLoading={Id ? 'Guardando PUesto...' : 'Creando Puesto...'}\r\n                validations={validations}\r\n                handleValidations={positionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Objetivo'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Objective'}\r\n                    placeHolder={'Introduce el objetivo del puesto'}\r\n                    inputValue={Objective}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Objective}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Responsabilidades'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce la descripción del puesto'}\r\n                    inputValue={Description}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sueldo'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Salary'}\r\n                    placeHolder={'Introduce un sueldo'}\r\n                    inputValue={Salary}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Salary}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({positionReducer}) => {\r\n    return {positionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...positionActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Position);\r\n","import ComponentPosition from './Positions'\r\nimport ComponentListOfPositions from './ListOfPositions'\r\nimport ComponentListOfResponsabilities from './Responsibilities'\r\nimport ComponentReadPosition from './ReadPosition'\r\nexport const Position = ComponentPosition;\r\nexport const ListOfPositions = ComponentListOfPositions;\r\nexport const ListOfResponsabilities = ComponentListOfResponsabilities; \r\nexport const ReadPosition = ComponentReadPosition; ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfPositions = ({ title='Puestos', create='/create-position'}) => {\r\n    const positionReducer = useSelector(state => state.positionReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(positionActions.positionMethods({companyId},'GetPositionsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (positionId) => {\r\n        history.push(`/admin-dashboard/company/${companyId}/update-position/${positionId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_positions\r\n    } = positionReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/admin-dashboard/company/${companyId}`} className=\"text-muted\">mis indicadores</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Puesto','Acciones']}\r\n                propertiesTable={['Id','Name']}\r\n                hrefCreate={`/admin-dashboard/company/${companyId}${create}`}\r\n                bodyTable={list_positions}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Puesto', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPositions;\r\n\r\n","import React from 'react'\r\n\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst ListOfResponsabilities = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description}} = positionReducer;\r\n    let arrayDeCadenas = Description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n    return(\r\n        <ul>\r\n            {arrayDeCadenas.map(item => {\r\n                return (\r\n                        <li>{item}</li>\r\n                    )\r\n                }    \r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListOfResponsabilities;","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as postionActions from './reducer/positionActions'\r\nconst ReadPosition = ({positionId}) => {\r\n    debugger\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { data:{\r\n        Description,\r\n        Salary,\r\n        Objective\r\n    }} = positionReducer;\r\n    useEffect(() => {\r\n        dispatch(postionActions.positionMethods({Id: positionId},'GetPosition'))\r\n        return () => {\r\n            dispatch(postionActions.positionCleanState());\r\n        }\r\n    }, [dispatch, positionId])\r\n    let arrayDeCadenas = Description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n    return (\r\n        <div>\r\n            <div className='mb-2'>\r\n                <div className={'text-dark'}>Objetivo:</div>\r\n                <div className={'text-muted'}>{Objective}</div>\r\n            </div>\r\n            <div className='mb-2'>\r\n                <div className={'text-dark'}>Responsabilidades:</div>\r\n                <ul>\r\n                    {arrayDeCadenas.map(item => {\r\n                        return (\r\n                                <li className='text-muted'>{item}</li>\r\n                            )\r\n                        }    \r\n                    )}\r\n                </ul>\r\n            </div>\r\n            <div className='mb-4'>\r\n                <div className={'text-dark'}>Sueldo:</div>\r\n                <div className={'text-muted'}>${Salary}</div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPosition;","import {Position, ListOfPositions as Positions, ListOfResponsabilities} from '../../components-position'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\n\r\nexport const ListOfPositions = ({reDirect, history}) =>{\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <AdminDashboardPages.TemplateDashboardAdmin>\r\n        <h2>Empresa: {TradeName}</h2>\r\n\r\n            <Positions reDirect={reDirect} history={history} />\r\n        </AdminDashboardPages.TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Crea un Puesto</h5>\r\n                                <Position companyId={companyId} history={history} reDirect={`/admin-dashboard/company/${companyId}/positions`} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Responsabilidades</h5>\r\n                                <ListOfResponsabilities />      \r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdatePosition = () => {\r\n    const {companyId, positionId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Actualiza este Puesto</h5>\r\n                                <Position positionId={positionId} companyId={companyId} history={history} reDirect={`/admin-dashboard/company/${companyId}/positions`} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Responsabilidades</h5>\r\n                                <ListOfResponsabilities />\r\n                                \r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ORGANIZATION_CHART_CARGANDO = \"organization_chart_cargando\";\r\nexport const ORGANIZATION_CHART_ERROR = \"organization_chart_error\";\r\nexport const ORGANIZATION_CHART_HANDLE_CHANGE = \"organization_chart_handle_change\";\r\nexport const ORGANIZATION_CHART_CLEAN_STATE = \"organization_chart_clean_state\";\r\nexport const ORGANIZATION_CHART_CRUD = \"organization_chart_crud\";\r\nexport const ORGANIZATION_CHARTS_LIST = \"organization_charts_list\";\r\nexport const ORGANIZATION_CHART_HANDLE_VALIDATION = \"organization_chart_handle_validation\";\r\nexport const ORGANIZATION_CHART_CHILD = 'organization_chart_child'\r\n\r\nexport const GetOrganizationCharts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationCharts`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHARTS_LIST};\r\n}\r\n\r\nexport const GetOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const GetOrganizationChartChild = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartByCompanyId = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByCompanyId?companyId=${data.companyId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const PutOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'organization_chart_put'};\r\n}\r\n\r\nexport const PostOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const DeleteOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION, \r\n    GetOrganizationCharts,\r\n    GetOrganizationChart,\r\n    GetOrganizationChartChild,\r\n    GetOrganizationChartByCompanyId,\r\n    PutOrganizationChart,\r\n    PostOrganizationChart,\r\n    DeleteOrganizationChart\r\n  } from \"./organizationChartTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const organizationChartHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const organizationChartHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetOrganizationCharts\":\r\n            answer = await GetOrganizationCharts(); \r\n            break;\r\n\r\n        case \"GetOrganizationChart\":\r\n            answer = await GetOrganizationChart(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartChild\":\r\n            answer = await GetOrganizationChartChild(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartByCompanyId\":\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n            break;\r\n\r\n        case \"PutOrganizationChart\":\r\n          answer = await PutOrganizationChart(data);\r\n          break;\r\n\r\n        case \"PostOrganizationChart\":\r\n          answer = await PostOrganizationChart(data);\r\n          break;\r\n        \r\n        case \"DeleteOrganizationChart\":\r\n          answer = await DeleteOrganizationChart(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ORGANIZATION_CHART_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { Card,  CardBody, CardTitle, CardSubtitle,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from 'reactstrap'\r\nimport {ReadPosition} from '../components-position'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\n\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\nconst StyledNode = styled.div`\r\n  padding: 5px;\r\n  border-radius: 8px;\r\n  display: inline-block;\r\n`;\r\n\r\nexport const Modals = ({positionId, children, modalTitle, name}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    return (\r\n      <>\r\n        <span role=\"button\" onClick={toggle}>{children}</span>\r\n        <Modal isOpen={modal} toggle={toggle} >\r\n          <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n          <ModalBody>\r\n            <h3>{name}</h3>\r\n            <ReadPosition positionId={positionId} />\r\n          </ModalBody>\r\n          {/* <ModalFooter>\r\n            <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{' '}\r\n            <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n          </ModalFooter> */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport const CardNode = ({positionId,name, description, addChild, updateNode,deleteChild}) => {\r\n    return(\r\n        \r\n        <Card>\r\n          <CardBody>\r\n          <CardSubtitle className='text-muted' >\r\n            {name}\r\n          </CardSubtitle>\r\n          {/* <CardTitle className='text-dark'>\r\n            {description}\r\n          </CardTitle> */}\r\n          <Modals positionId={positionId} modalTitle={name} name={name} description={description}>\r\n            <FaIcons.FaEye className=\"mr-2 text-primary\" />\r\n          </Modals>\r\n          <FaIcons.FaPlusCircle className=\"mr-2 text-success\" onClick={addChild}/>\r\n          <FaIcons.FaEdit className=\"mr-2 text-secondary\" onClick={updateNode}/>\r\n          {deleteChild && <FaIcons.FaMinusCircle className='text-danger' onClick={deleteChild}/>}\r\n          \r\n          </CardBody>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n \r\nclass OrganizationChart extends React.Component {\r\n\r\n    state = {\r\n        tree: ''\r\n    }\r\n    async componentDidMount() {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n      \r\n    }\r\n\r\n   \r\n\r\n    createOrganigrama =  (organigrama) => {\r\n        let OrganizationChart1 = organigrama?.OrganizationChart1\r\n        if(OrganizationChart1?.length === 0 || OrganizationChart1 === undefined || !OrganizationChart1){\r\n            \r\n            return <TreeNode \r\n                label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {organigrama?.Position?.Id}\r\n                        name={organigrama?.Position?.Name ? organigrama?.Position?.Name : 'Sin puesto'} \r\n                        description={organigrama?.Position?.Description}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n                }\r\n            />\r\n        }\r\n        \r\n        return <TreeNode \r\n            label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {organigrama?.Position?.Id}\r\n                        name = {organigrama?.Position?.Name ? organigrama?.Position?.Name : 'Sin puesto'} \r\n                    \r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n            }\r\n        >\r\n            {\r\n                OrganizationChart1.map((child) => {           \r\n                    return this.createOrganigrama(child)\r\n                })\r\n            }\r\n        </TreeNode>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    render () {\r\n\r\n        const { organizationChartReducer:{data: {Id}}, companyId } = this.props\r\n\r\n        return(\r\n            <div>\r\n                <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/admin-dashboard/company/${companyId}`} className=\"text-muted\">mis indicadores</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama</small></li>\r\n            </ul>\r\n                {\r\n                    Id \r\n                        ? <Tree\r\n                            lineWidth={'2px'}\r\n                            lineColor={'gray'}\r\n                            lineBorderRadius={'10px'}\r\n                            label={<StyledNode>\r\n                            <CardNode name={Id} position={'Accionista'} addChild={() => this.addChild(Id)} />\r\n                            </StyledNode>}\r\n                        >\r\n                            {\r\n                                // this.state.tree\r\n                                this.createOrganigrama(this.props.organizationChartReducer.data)\r\n                            }\r\n                        </Tree>\r\n                        : <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                }\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer}) => {\r\n    return {organizationChartReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as positionActions from '../components-position/reducer/positionActions'\r\n\r\n\r\nclass OrganizationChart extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {nodeId, organizationChartMethods, companyId, positionMethods} = this.props;\r\n        nodeId && await organizationChartMethods({Id: nodeId}, 'GetOrganizationChart');\r\n        companyId && await positionMethods({companyId: companyId}, 'GetPositionsByCompanyId')\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            organizationChartMethods, \r\n            organizationChartReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PositionId,\r\n                PositionChartId,\r\n                CompanyId\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PositionId: PositionId ? PositionId : '',\r\n            PositionChartId: PositionChartId ? PositionChartId : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n        }\r\n        await organizationChartMethods(model, action);\r\n    }\r\n\r\n    actionOrganizationChart = async () => {\r\n        const {\r\n            organizationChartCleanState,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutOrganizationChart');\r\n        }\r\n        if(this.props.organizationChartReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            organizationChartCleanState()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            organizationChartHandleValidation,\r\n            organizationChartHandleChange,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id, \r\n                    PositionId\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            positionReducer: {\r\n                list_positions\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionOrganizationChart}\r\n                textButton={ 'Guardar Puesto' }\r\n                textButtonLoading={'Guardando PUesto...' }\r\n                validations={validations}\r\n                handleValidations={organizationChartHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un puesto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PositionId'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={PositionId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PositionId}\r\n                    optionPlaceHolder={'Selecciona un tipo de producto'}\r\n                    options={list_positions}\r\n                /> \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({organizationChartReducer, positionReducer}) => {\r\n    return {organizationChartReducer, positionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...positionActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);\r\n","import ComponentOrganizationChart from './OrganizationChart'\r\nimport ComponentUpdateChild from './UpdateChild'\r\n\r\nexport const OrganizationChart = ComponentOrganizationChart;\r\nexport const UpdateChild = ComponentUpdateChild;","import {OrganizationChart, UpdateChild} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {AdminDashboardPages} from './'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <OrganizationChart companyId={companyId} history={history}/>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/admin-dashboard/company/${companyId}/organization-chart`}/>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentUsers from './Users'\r\nimport * as ComponentSections from './Sections'\r\nimport * as ComponentCourses from './Courses'\r\nimport * as ComponentProducts from './Products'\r\nimport * as ComponentDashboard from './Dashboard'\r\nimport * as ComponentCompany from './Company'\r\nimport * as ComponentPositions from './Position'\r\nimport * as ComponentOrganizationChart from './OrganizationChart'\r\n\r\n\r\nexport const AdminUsersPages = ComponentUsers;\r\nexport const AdminSectionsPages = ComponentSections;\r\nexport const AdminCoursesPages = ComponentCourses;\r\nexport const AdminProductPages = ComponentProducts;\r\nexport const AdminDashboardPages = ComponentDashboard;\r\nexport const AdminCompanyPages = ComponentCompany;\r\nexport const AdminPositionsPages = ComponentPositions;\r\nexport const AdminOrganizationChart = ComponentOrganizationChart;\r\n\r\n\r\n\r\n","import React from 'react' \r\nimport {Container} from 'reactstrap'\r\nimport {Navbars} from '../../config-components'\r\n\r\nexport const DashboardUserPage = () => {\r\n    return (\r\n        <>\r\n            <Navbars.User />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    Se implemento DashboardUser\r\n                </Container>\r\n            </section>  \r\n        </>\r\n    )\r\n}","// Imports de react.\r\nimport React from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\n// Imports del landing page\r\nimport * as Landings from './pages/landing'\r\nimport {NotFoundPage} from './pages/NotFoundPage'\r\n\r\n// Imports de PageSessions.\r\n//import {LoginPage} from './pages/Login'\r\nimport {\r\n  LoginPage,\r\n  SignUpPage,\r\n  ForgotPassword,  \r\n  CheckYourAccount,\r\n  ChangePasswordPage\r\n} from './pages/session'\r\n\r\n// Imports de Páginas del administrador\r\nimport {\r\n  AdminUsersPages, \r\n  AdminSectionsPages, \r\n  AdminCoursesPages,\r\n  AdminProductPages,\r\n  AdminDashboardPages,\r\n  AdminCompanyPages,\r\n  AdminPositionsPages,\r\n  AdminOrganizationChart\r\n}from './pages/admin'\r\n\r\n/* Imports de Páginas de usario */\r\nimport {DashboardUserPage} from './pages/user'\r\n\r\nimport {OrganizationChart} from './components-organization-chart'\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter >\r\n        <Switch>\r\n          {/* Páginas de Home */}\r\n          <Route  exact path=\"/\" component={Landings.SoftwareAgency}></Route>\r\n          <Route  exact path=\"/products\" component={Landings.Products}></Route>\r\n\r\n         \r\n\r\n          {/* Páginas para el manejo de sesión */}\r\n          <Route  exact path=\"/login\" component={LoginPage}></Route>\r\n          <Route  exact path=\"/sign-up\" component={SignUpPage}></Route>\r\n          <Route  exact path=\"/forgot-password\" component={ForgotPassword}></Route>\r\n          <Route  exact path=\"/check-your-account\" component={CheckYourAccount}></Route>\r\n          <Route  exact path=\"/change-password/:code/:email\" component={ChangePasswordPage}></Route>\r\n  \r\n          {/* Páginas para el admin */}\r\n          <Route  exact path=\"/admin-dashboard\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard/:indicator\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-user/:userId\" component={AdminUsersPages.ReadUser}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-admin/:userId\" component={AdminUsersPages.ReadAdmin}></Route>\r\n          { /* crud empresas */ }\r\n          <Route  exact path=\"/admin-dashboard/create-company/:userId\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId\" component={AdminCompanyPages.Indicators}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/positions\" component={AdminPositionsPages.ListOfPositions}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-position\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-position/:positionId\" component={AdminPositionsPages.UpdatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={AdminOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart/node/:nodeId\" component={AdminOrganizationChart.UpdateCurrent}></Route>\r\n          {/* <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={OrganizationChart}></Route> */}\r\n\r\n          <Route  exact path=\"/admin-dashboard/product/:productId/:section\" component={AdminProductPages.EditProduct}></Route>\r\n          { /* crud videos para admins */ }\r\n          <Route  exact path=\"/admin-dashboard/course/:courseId\" component={AdminCoursesPages.EditCourse}></Route>\r\n          <Route  exact path=\"/admin-dashboard/section/:courseId\" component={AdminSectionsPages.CreateSection}></Route>\r\n          <Route exact path=\"/player/watch-class/:productId/:courseId\" component={AdminCoursesPages.WhatchCourse}/>\r\n\r\n          {/* Páginas para dashboard de usuarios */}\r\n          <Route  exact path=\"/user-dashboard\" component={DashboardUserPage}></Route>\r\n\r\n          <Route  exact path=\"/organigrama-prueba\" component={OrganizationChart}></Route>\r\n\r\n\r\n          {/* Vista pare ver un video de un curso */}\r\n          <Route path=\"*\" component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION\r\n} from \"./loginTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    roles: localStorage.getItem(\"role\"),\r\n    grant_type: \"password\",\r\n    username: \"\",\r\n    password: \"\",\r\n    access_token: \"\",\r\n  },\r\n  validations: {\r\n    username: \"\",\r\n    password: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          roles: localStorage.getItem(\"role\"),\r\n          grant_type: \"password\",\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          grant_type: \"password\",\r\n          roles: action.payload.roles,\r\n          username: action.payload.username,\r\n          password: action.payload.password,\r\n          access_token: action.payload.access_token,\r\n          userName: action.payload.userName,\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: \"\",\r\n    Roles: \"\",\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"email\",\r\n    TypeUser: '',\r\n    Idd: \"\",\r\n  },\r\n  validations: {\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"\",\r\n    Idd: \"\",\r\n  },\r\n};\r\n\r\nconst reducer =  (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: \"\",\r\n          Roles: \"\",\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser:\"\"\r\n        },\r\n      };\r\n    case SIGN_UP_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          Roles: action.payload.Roles,\r\n          UserName: action.payload.UserName,\r\n          PhoneNumber: action.payload.PhoneNumber,\r\n          Email: action.payload.Email,\r\n          Password: action.payload.Password,\r\n          ConfirmPassword: action.payload.ConfirmPassword,\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: action.payload.Idd,\r\n          TypeUser: action.payload.TypeUser\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n      };\r\n\r\n      case SIGN_UP_PRELOADED_DATA:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Roles: action.payload.Roles,\r\n            UserName: action.payload.UserName,\r\n            PhoneNumber: action.payload.PhoneNumber,\r\n            Email: action.payload.Email,\r\n            Password: action.payload.Password,\r\n            ConfirmPassword: action.payload.ConfirmPassword,\r\n            ValidateByPhoneOrEmail: \"email\",\r\n            Idd: action.payload.Idd,\r\n            TypeUser: action.payload.TypeUser\r\n          },\r\n          validations: {\r\n            UserName: \"\",\r\n            PhoneNumber: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            ValidateByPhoneOrEmail: \"\",\r\n            Idd: \"\",\r\n            TypeUser: \"\"\r\n          },\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n  } from \"./changePasswordTypes\";\r\n\r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      phoneOrEmail: '',\r\n      Code:'',\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n      usernameOrEmailOrPhoneNumber:'',\r\n    },\r\n    validations: {\r\n      phoneOrEmail: \"\",\r\n      Code:true,\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n    },\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_PASSWORD_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_USER:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              cargando: false,\r\n              error: \"\",\r\n            },\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_CRUD,\r\n    COMPANIES_LIST,\r\n    COMPANY_HANDLE_VALIDATION\r\n  } from \"./companyTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity: '',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      \r\n    },\r\n    validations: {\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity:'',\r\n      fileCover: ''\r\n    },\r\n    list_companies: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COMPANY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COMPANY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity: '',\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity:'',\r\n            fileCover: ''\r\n          },\r\n          list_companies: [],\r\n        };\r\n      case COMPANY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            UserId: action.payload.UserId,\r\n            TradeName:  action.payload.TradeName,\r\n            BusinessName: action.payload.BusinessName,\r\n            BusinessActivity:  action.payload.BusinessActivity,\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: true,\r\n            BusinessName: true,\r\n            BusinessActivity: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COMPANIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_companies: action.payload,\r\n        };\r\n  \r\n      case \"company_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_CRUD,\r\n    POSITIONS_LIST,\r\n    POSITION_HANDLE_VALIDATION\r\n  } from \"./positionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      Description: \"\",\r\n      CompanyId:'',\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    list_positions: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case POSITION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case POSITION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            Description: \"\",\r\n            CompanyId:'',\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          list_positions: [],\r\n        };\r\n      case POSITION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            Description: action.payload.Description,\r\n            CompanyId: action.payload.CompanyId,\r\n            Objective: action.payload.Objective,\r\n            Knowledge: action.payload.Knowledge,\r\n            Salary: action.payload.Salary\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Description: action.payload.Description ? true : '',\r\n            Objective: action.payload.Objective ? true: '',\r\n            Knowledge: action.payload.Knowledge ? action.payload.Knowledge: '',\r\n            Salary: action.payload.Salary ? true: ''\r\n          },\r\n          list_positions: [],\r\n        };\r\n  \r\n      case POSITIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_positions: action.payload,\r\n        };\r\n  \r\n      case \"position_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_CRUD,\r\n    ORGANIZATION_CHARTS_LIST,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n    ORGANIZATION_CHART_CHILD\r\n  } from \"./organizationChartTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      PositionId:0,\r\n      CompanyId: 0,\r\n      PersonDetailId:0,\r\n      AreasId: 0,\r\n      PositionChartId: 0,\r\n      OrganizationChart1: [],\r\n      Position: {}\r\n    },\r\n    child: {\r\n        Id: 0,\r\n        DateCreated:'',\r\n        DateModified:'',\r\n        PositionId:0,\r\n        CompanyId: 0,\r\n        PersonDetailId:0,\r\n        AreasId: 0,\r\n        PositionChartId: 0,\r\n        OrganizationChart1: []\r\n      },\r\n    validations: {\r\n      PositionId: \"\",\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n    },\r\n    list_organization_chart: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ORGANIZATION_CHART_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PositionId:0,\r\n            CompanyId: 0,\r\n            PersonDetailId:0,\r\n            AreasId: 0,\r\n            PositionChartId: 0,\r\n            OrganizationChart1: [],\r\n            Position:{}\r\n          },\r\n          child: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PositionId:0,\r\n            CompanyId: 0,\r\n            PersonDetailId:0,\r\n            AreasId: 0,\r\n            PositionChartId: 0,\r\n            OrganizationChart1: [],\r\n            Position:{}\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n      case ORGANIZATION_CHART_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PositionId:action.payload.PositionId,\r\n            CompanyId: action.payload.CompanyId,\r\n            PersonDetailId:action.payload.PersonDetailId,\r\n            AreasId: action.payload.AreasId,\r\n            PositionChartId: action.payload.PositionChartId,\r\n            OrganizationChart1: action.payload.OrganizationChart1,\r\n            Position: action.payload.Position\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n\r\n        case ORGANIZATION_CHART_CHILD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          child: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PositionId:action.payload.PositionId,\r\n            CompanyId: action.payload.CompanyId,\r\n            PersonDetailId:action.payload.PersonDetailId,\r\n            AreasId: action.payload.AreasId,\r\n            PositionChartId: action.payload.PositionChartId,\r\n            OrganizationChart1: action.payload.OrganizationChart1,\r\n            Position: action.payload.Position\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n  \r\n  \r\n      case ORGANIZATION_CHARTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_organization_chart: action.payload,\r\n        };\r\n  \r\n      case \"organization_chart_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_CRUD,\r\n    CATEGORIES_LIST,\r\n    CATEGORY_HANDLE_VALIDATION\r\n  } from \"./categoryTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_VALIDATION: \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories: [],\r\n        };\r\n      case CATEGORY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories_products: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories_products: [],\r\n        };\r\n      case CATEGORY_PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories_products: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_CRUD,\r\n    PRODUCTS_LIST,\r\n    PRODUCT_HANDLE_VALIDATION\r\n  } from \"./productTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n      Price: '',\r\n      ProductCategoryId:'',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      Categories: []\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      ProductCategoryId:'',\r\n      fileCover: ''\r\n    },\r\n    list_products: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n            Price: '',\r\n            ProductCategoryId:'',\r\n            Blobs:[],\r\n            Categories: [],\r\n            fileCover: ''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Price:'',\r\n            ProductCategoryId:'',\r\n            fileCover: ''\r\n          },\r\n          list_products: [],\r\n        };\r\n      case PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n            Price: action.payload.Price,\r\n            ProductCategoryId:action.payload.ProductCategoryId,\r\n            Blobs: action.payload.Blobs,\r\n            Categories: action.payload.Categories\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n            Price: true,\r\n            ProductCategoryId: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_products: action.payload,\r\n        };\r\n  \r\n      case \"product_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_CRUD,\r\n    PRODUCT_DETAILS_LIST,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      SubTitle:'',\r\n      Description:'',\r\n      ProductId: '',\r\n      BlobId: '',\r\n      fileZip: '',\r\n      Blob: {}\r\n    },\r\n    validations: {\r\n        SubTitle:'',\r\n        Description:'',\r\n        fileZip: ''\r\n    },\r\n    list_product_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            SubTitle:'',\r\n            Description:'',\r\n            ProductId: '',\r\n            BlobId: '',\r\n            fileZip: '',\r\n            Blob: {}\r\n          },\r\n          validations: {\r\n              SubTitle:'',\r\n              Description:'',\r\n              fileZip: ''\r\n          },\r\n          list_product_details: [],\r\n        };\r\n      case PRODUCT_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            SubTitle:action.payload.SubTitle,\r\n            Description:action.payload.Description,\r\n            ProductId: action.payload.ProductId,\r\n            BlobId: action.payload.BlobId,\r\n            Blob: action.payload.Blob\r\n          },\r\n          validations: {\r\n              SubTitle:true,\r\n              Description:true,\r\n              fileZip: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCT_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_product_details: action.payload,\r\n        };\r\n  \r\n      case \"product_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","export const COURSE_CARGANDO = \"course_cargando\";\r\nexport const COURSE_ERROR = \"course_error\";\r\nexport const COURSE_HANDLE_CHANGE = \"course_handle_change\";\r\nexport const COURSE_CLEAN_STATE = \"course_clean_state\";\r\nexport const COURSE_CRUD = \"course_crud\";\r\nexport const COURSES_LIST = \"courses_list\";\r\nexport const COURSE_HANDLE_VALIDATION = \"course_handle_validation\";","import {\r\n    COURSE_CARGANDO,\r\n    COURSE_ERROR,\r\n    COURSE_HANDLE_CHANGE,\r\n    COURSE_CLEAN_STATE,\r\n    COURSE_CRUD,\r\n    COURSES_LIST,\r\n    COURSE_HANDLE_VALIDATION\r\n  } from \"./courseTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    list_courses: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COURSE_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COURSE_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          list_courses: [],\r\n        };\r\n      case COURSE_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COURSES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_courses: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    list_sections: [],\r\n    list_sections_select: []\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case SECTION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case SECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name: \"\",\r\n            CourseId: \"\"\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            CourseId:'',\r\n          },\r\n          list_sections: [],\r\n          list_sections_select: []\r\n        };\r\n      case SECTION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CourseId:action.payload.CourseId,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            CourseId:true,\r\n          },\r\n          list_brands: [],\r\n          list_sections_select: []\r\n        };\r\n  \r\n      case SECTIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections: action.payload,\r\n        };\r\n      case SECTIONS_SELECT:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections_select: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_CRUD,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    ADMIN_USERS_LIST,\r\n  } from \"./adminTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      cargandoUsername: false,\r\n      errorUsername: '',\r\n      cargandoEmail: false,\r\n      errorEmail: '',\r\n      cargandoPhone: false,\r\n      errorPhone: '',\r\n      cargandoPassword: false,\r\n      errorPassword: '',\r\n      cargandoValidateAccount: '',\r\n      errorValidateAccount: '',\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: '',\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    validations: {\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    list_users: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ADMIN_CARGANDO:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload]: true,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            errorValidateAccount: ''\r\n          },\r\n        };\r\n      case ADMIN_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            cargandoValidateAccount: false,\r\n            [action.payload.typeError]: action.payload.messageError,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n              ? [action.payload.e.files[0]]\r\n              : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_VALIDATION:\r\n        return {\r\n            ...state,\r\n            validations: {\r\n              ...state.validations,\r\n              [action.payload.name]: action.payload.isInvalid,\r\n            },\r\n          };\r\n      case ADMIN_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {},\r\n          validations: {},\r\n        };\r\n      case ADMIN_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload.cargando]: false,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            UserName: action.payload.UserName ? action.payload.UserName : '',\r\n            Email: action.payload.Email ? action.payload.Email : '',\r\n            EmailConfirmed: action.payload.EmailConfirmed ? action.payload.EmailConfirmed : '',\r\n            PhoneNumber: action.payload.PhoneNumber ? action.payload.PhoneNumber : '',\r\n          },\r\n          validations: {\r\n            UserName: true,\r\n            Email: true,\r\n            EmailConfirmed: '',\r\n            PhoneNumber: '',\r\n            Password: '',\r\n            ConfirmPassword: '',\r\n          },\r\n        };\r\n  \r\n      case ADMIN_USERS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          list_users: action.payload,\r\n        };\r\n  \r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              errorUsername: '',\r\n              errorEmail: '',\r\n              error: \"\",    \r\n              errorPhone: '',\r\n              errorPassword: '',\r\n              cargando: false,\r\n              cargandoUsername: false,\r\n              cargandoEmail: false,\r\n              cargandoPhone: false,\r\n              cargandoPassword: false,\r\n              errorValidateAccount: '',\r\n              cargandoValidateAccount: false\r\n            },\r\n          };\r\n  \r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    count_products: 0,\r\n    count_courses: 0,\r\n    count_users: 0,\r\n    count_admins: 0,\r\n    count_companies: 0,\r\n    count_positions: 0\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ANALYTICS_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ANALYTICS_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n  \r\n      case ANALYTICS_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: 0,\r\n        };\r\n  \r\n      case ANALYTICS_COUNT_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_COURSES:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_courses: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_USERS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_users: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_ADMINS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_admins: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_COMPANIES:\r\n        debugger\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_companies: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_POSITIONS:\r\n        debugger\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_positions: action.payload,\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: 0,\r\n    UserId: \"\",\r\n    DateCreated: \"\",\r\n    DateModified: \"\",\r\n    BlobName: \"\",\r\n    BlobTypeId: \"\",\r\n    ContainerName: \"\",\r\n    IsPrivate: true,\r\n    Uri: null,\r\n    BlobType: null,\r\n    Brand_Blob: [],\r\n    Product_Blob: [],\r\n    BlogPosts: [],\r\n    AspNetUsers: [],\r\n  },\r\n  validations: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case BLOB_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case BLOB_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case BLOB_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n\r\n    case BLOB_HANDLE_VALIDATION:\r\n      let messageError = \"\";\r\n      if (action.payload.props.valueInput === \"\") {\r\n        messageError = \"El campo no puede ir vacio\";\r\n      }\r\n      if (action.payload.props.isInvalid !== \"\") {\r\n        messageError = action.payload.props.isInvalid;\r\n      }\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: messageError,\r\n        },\r\n      };\r\n    case BLOB_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: 0,\r\n          UserId: \"\",\r\n          DateCreated: \"\",\r\n          DateModified: \"\",\r\n          BlobName: \"\",\r\n          BlobTypeId: \"\",\r\n          ContainerName: \"\",\r\n          IsPrivate: true,\r\n          Uri: null,\r\n          BlobType: null,\r\n          Brand_Blob: [],\r\n          Product_Blob: [],\r\n          BlogPosts: [],\r\n          AspNetUsers: [],\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    case BLOB_CRUD:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          UserId: action.payload.UserId,\r\n          DateCreated: action.payload.DateCreated,\r\n          DateModified: action.payload.DateModified,\r\n          BlobName: action.payload.BlobName,\r\n          BlobTypeId: action.payload.BlobTypeId + \"\",\r\n          ContainerName: action.payload.ContainerName,\r\n          IsPrivate: action.payload.IsPrivate,\r\n          Uri: action.payload.Uri,\r\n          BlobType: action.payload.BlobType,\r\n          Brand_Blob: action.payload.Brand_Blob,\r\n          Product_Blob: action.payload.Product_Blob,\r\n          BlogPosts: action.payload.BlogPosts,\r\n          AspNetUsers: action.payload.AspNetUsers,\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","// Imports de redux.\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Components-session.\r\nimport loginReducer from \"../components-session/reducer-login/loginReducer\";\r\nimport signUpReducer from \"../components-session/sign-up-reducer/signUpReducer\";\r\nimport changePasswordReducer from \"../components-session/change-password/reducer/changePasswordReducer\";\r\n\r\n// Components\r\nimport companyReducer from '../components-company/reducer/companyReducer'\r\nimport positionReducer from '../components-position/reducer/positionReducer'\r\nimport organizationChartReducer from '../components-organization-chart/reducer/organizationChartReducer'\r\n\r\n// Components que tienen que ver con producto.\r\nimport categoryReducer from '../components-category/reducer/categoryReducer'\r\nimport categoryProductReducer from '../components-category-product/reducer/categoryProductReducer'\r\nimport productReducer from '../components-product/reducer/productReducer'\r\nimport productDetailReducer from '../components-product-details/reducer/productDetailReducer'\r\n\r\n\r\n// Componentes que tienen que ver con cursos.\r\nimport courseReducer from '../components-course/reducer/courseReducer'\r\nimport sectionReducer from '../components-section/reducer/sectionReducer'\r\n\r\n// Componentes de administrador.\r\nimport adminReducer from '../components-admin/reducer/adminReducer'\r\n// Components de analiticos.\r\nimport analyticsReducer from '../components-analytics/reducer/analyticsReducer'\r\n\r\n// Componentes de blobs.\r\nimport blobReducer from '../components-blob/blob-reducer/blobReducer'\r\n\r\n// Reducers.\r\nexport default combineReducers({\r\n    // Reducers de sesión.\r\n    loginReducer,\r\n    changePasswordReducer,\r\n    signUpReducer,\r\n    // Components.\r\n    companyReducer,\r\n    positionReducer,\r\n    organizationChartReducer,\r\n    categoryReducer,\r\n    categoryProductReducer,\r\n    productReducer,\r\n    productDetailReducer,\r\n    // Componentes que tienen que ver con cursos.\r\n    courseReducer,\r\n    sectionReducer,\r\n    // Componentes de administrador.\r\n    adminReducer,\r\n    // Componentes de analiticos.\r\n    analyticsReducer,\r\n    // Componentes de blobs\r\n    blobReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './scss/app.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Imports de components-api.\r\nimport {setPathApi} from './components-api/ConfigApi';\r\n\r\n// Imports de redux.\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// Google Fonts\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Poppins:400,600', 'sans-serif']\r\n  }\r\n});\r\n\r\n// Store de reducers.\r\nconst store = createStore(reducers, {}, composeWithDevTools(applyMiddleware(reduxThunk)));\r\n\r\n// Configuración de la ruta del api.\r\nsetPathApi();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n      <App />\r\n    {/* </React.StrictMode> */}\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}