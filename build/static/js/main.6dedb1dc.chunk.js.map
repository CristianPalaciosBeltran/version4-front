{"version":3,"sources":["img/product.jpg","img/cristian.jpg","img/Jesus.jpg","img/version-4-logo.svg","img/organigrama.jpeg","img/puestos.jpeg","img/descripciones.jpeg","img/procesos.jpeg","img/index.js","config-components/Logos.js","components-api/ConfigApi.js","config-components/Navbars.js","config-components/Cards.js","config-components/DropDowns.js","components-api/ApiResponses.js","config-components/Filter.js","components-api/index.js","config-components/Inputs.js","config-components/Modals.js","config-components/NotFound.js","config-components/RegularExpressions.js","config-components/Tabs.js","config-components/Lists.js","components-position/reducer/positionTypes.js","components-position/reducer/positionActions.js","components-position/Positions.js","components-position/Responsibilities.js","components-position/index.js","components-position/ListOfPositions.js","components-position/ReadPosition.js","components-organization-chart/reducer/organizationChartTypes.js","components-organization-chart/reducer/organizationChartActions.js","components-area/reducer/areaTypes.js","components-area/reducer/areaActions.js","components-organization-chart/OrganizationChart.js","components-personal-detail/reducer/personalDetailTypes.js","components-personal-detail/reducer/personalDetailActions.js","components-organization-chart/UpdateChild.js","components-organization-chart/ViewOrganizationChart.js","components-organization-chart/index.js","components-organization-chart/ReadChild.js","config-components/Collapse.js","config-components/ExternalLinks.js","config-components/index.js","img/hero-xs.png","img/vscode.svg","pages/landing/SoftwareAgency.js","components-product/ReadCardProduct.js","components-product/reducer/productTypes.js","components-product/reducer/productActions.js","components-product/CardProduct.js","components-product/ListOfCardProducts.js","components-product/ListOfProducts.js","components-category/reducer/categoryTypes.js","components-category/reducer/categoryActions.js","components-product/index.js","pages/landing/Products.js","pages/landing/index.js","pages/NotFoundPage.js","components-session/reducer-login/loginTypes.js","components-session/reducer-login/loginActions.js","components-company/reducer/companyTypes.js","components-company/reducer/companyActions.js","components-session/Login.js","components-session/sign-up-reducer/signUpTypes.js","components-session/sign-up-reducer/signUpActions.js","components-session/SignUp.js","components-session/change-password/reducer/changePasswordTypes.js","components-session/change-password/reducer/changePasswordActions.js","components-session/change-password/ChangePassword.js","components-session/change-password/ChangePasswordForUser.js","components-session/change-password/SendEmail.js","components-session/index.js","pages/session/index.js","components-analytics/reducer/analyticsTypes.js","components-analytics/reducer/analyticsActions.js","components-admin/Indicators.js","components-admin/reducer/adminTypes.js","components-admin/reducer/adminActions.js","components-admin/ListOfUsers.js","components-admin/UpdateUserInfo.js","components-admin/ValidateAccount.js","components-admin/index.js","pages/admin/Users.js","components-section/reducer/sectionTypes.js","components-section/reducer/sectionActions.js","components-section/Section.js","components-section/ModalSections.js","components-category-product/reducer/categoryProductTypes.js","components-category-product/reducer/categoryProductActions.js","components-blob/blob-reducer/blobType.js","components-blob/blob-reducer/blobActions.js","components-blob/blobUtils.js","components-product/Product.js","components-product/ModalProducts.js","components-section/ListOfSections.js","components-section/index.js","components-section/CrudCourse.js","pages/admin/Dashboard.js","pages/admin/Sections.js","components-course/Course.js","components-course/ListOfCourses.js","components-player/Player.js","components-player/index.js","config-components/TabCourse.js","components-course/WatchClass.js","components-course/index.js","pages/admin/Courses.js","components-category-product/CategoryProduct.js","components-category-product/ListOfCategoriesOfProducts.js","components-category/Category.js","components-category/ModalCategory.js","components-product-details/reducer/productDetailsTypes.js","components-product-details/reducer/productDetailActions.js","components-product-details/ProductDetails.js","components-product-details/index.js","pages/admin/Products.js","components-company/Company.js","components-company/CompanyIndicators.js","components-company/index.js","components-company/ListOfCompanies.js","pages/templates/Company.js","components-job-detail/reducer/jobDetailTypes.js","components-job-detail/reducer/jobDetailActions.js","components-job-detail/JobDetails.js","components-job-detail/index.js","pages/templates/JobDetails.js","pages/templates/Position.js","components-personal-detail/ListOfPersonDetails.js","components-personal-detail/PersonDetail.js","components-personal-detail/index.js","pages/templates/PersonalDetail.js","components-area/ListOfAreas.js","components-area/Area.js","components-area/index.js","pages/templates/Area.js","pages/templates/index.js","pages/admin/Company.js","pages/admin/Position.js","pages/admin/OrganizationChart.js","pages/admin/PersonalDetail.js","pages/admin/Area.js","pages/admin/index.js","pages/user/OrganizationChart.js","pages/user/index.js","App.js","reportWebVitals.js","components-session/reducer-login/loginReducer.js","components-session/sign-up-reducer/signUpReducer.js","components-session/change-password/reducer/changePasswordReducer.js","components-company/reducer/companyReducer.js","components-position/reducer/positionReducer.js","components-organization-chart/reducer/organizationChartReducer.js","components-personal-detail/reducer/personalDetailReducer.js","components-area/reducer/areaReducer.js","components-job-detail/reducer/jobDetailReducer.js","components-category/reducer/categoryReducer.js","components-category-product/reducer/categoryProductReducer.js","components-product/reducer/productReducer.js","components-product-details/reducer/productDetailReducer.js","components-course/reducer/courseTypes.js","components-course/reducer/courseReducer.js","components-section/reducer/sectionReducer.js","components-admin/reducer/adminReducer.js","components-analytics/reducer/analyticsReducer.js","components-blob/blob-reducer/blobReducer.js","reducers/index.js","index.js"],"names":["Img","src","width","alt","className","ImgOrganigrama","Organigrama","ImgProcesos","Procesos","ImgPuestos","Puestos","ImgDescripciones","Descripciones","SvgLogo","Logo","ImgProduct","uri","ProductDefault","LogoNavbar","href","to","errorResponse","data","ModelState","Message","error_description","error","errorHandler","messageError","response","status","setLocalStorage","window","open","configHeader","token","localStorage","getItem","headers","Authorization","respuesta","undefined","removeItem","setItem","access_token","roles","userName","axios_api","a","header","apiMethod","body","config","pathApi","toLowerCase","axios","get","post","put","delete","signOff","e","preventDefault","setPathApi","route","Navbars","useState","isOpen","setIsOpen","Navbar","expand","Container","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","NavbarAdmin","light","NavbarBrand","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","User","companyId","useParams","color","CardAnalytics","title","number","icon","rTitle","rNumber","rIcon","Card","CardBody","DropDownActions","children","labelButton","dropdownOpen","setDropdownOpen","Dropdown","toggle","prevState","Loader","rColor","activate","Spinner","Error","message","UseSearchItems","list","propertiesTable","searchByItem","setSearchItem","query","setQuery","React","useMemo","filteredSome","filter","items","res","map","property","includes","TableFilter","titlesTable","bodyTable","loading","hrefCreate","actions","rHrefCreate","Form","FormGroup","Input","type","placeholder","value","onChange","target","Table","item","action","handleAction","ApiResponses","ComponentApiResponses","useInputState","inputValue","inputChange","setInputChange","setOnChange","InputText","forName","classLabel","textLabel","isMandatory","classMandatory","inputType","inputName","inputId","placeHolder","maxLength","minLength","RE","validateRE","options","optionPlaceHolder","forgotPassword","xs","sm","md","lg","xl","classCol","rFor","rClassLabel","rTextLabel","rIsMandatory","rClassMandatory","rInputType","rInputName","rInputId","rPlaceHolder","rInputValue","rMaxLength","rMinLength","rRE","handleRE","match","re","Col","Label","for","name","id","valid","invalid","option","Id","Name","LastName","FormFeedback","validMessage","invalidMessage","InputEmail","label","rName","rLabel","RegularExpressions","RE_EMAIL","InputPassword","RE_PASSWORD","InputFile","ValidateInputs","validations","onValidate","i","length","props","isInvalid","Form1","textButton","textButtonLoading","handleValidations","Button","SwitchSome","some","setSome","ModalForm","content","modalTitle","state","Modal","ModalHeader","ModalBody","ModalDelete","ModalFooter","ModalOpenDelete","clean","modal","setToogle","toggleCancel","NotFound","RE_PASSWORD_MATCHES","RE_EMPTY","Tabs","children1","children2","children3","tab","activeTab","setActiveTab","tabs","classnames","active","TabContent","TabPane","tabId","Row","ShowListFromText","description","arrayDeCadenas","split","splice","POSITION_CARGANDO","POSITION_ERROR","POSITION_HANDLE_CHANGE","POSITION_CLEAN_STATE","POSITION_CRUD","POSITIONS_LIST","POSITION_HANDLE_VALIDATION","GetPositions","answer","GetPositionsByCompanyId","GetPosition","PutPosition","PostPosition","DeletePosition","positionHandleChange","dispatch","payload","positionHandleValidation","validation","positionCleanState","positionMethods","method","Position","componentDidMount","positionId","sendAction","positionReducer","DateCreated","Description","Description2","CompanyId","Objective","Knowledge","Salary","model","actionPosition","reDirect","history","setModal","push","this","api_actions","cargando","Component","mapDispatchToProps","positionActions","connect","ListOfResponsabilities","useSelector","Lists","ListOfDescriptions","ComponentPosition","ListOfPositions","create","useDispatch","useHistory","useEffect","list_positions","replace","ListFromPositions","ComponentsListFromPositions","ReadPosition","postionActions","ORGANIZATION_CHART_CARGANDO","ORGANIZATION_CHART_ERROR","ORGANIZATION_CHART_HANDLE_CHANGE","ORGANIZATION_CHART_CLEAN_STATE","ORGANIZATION_CHART_CRUD","ORGANIZATION_CHARTS_LIST","ORGANIZATION_CHART_HANDLE_VALIDATION","ORGANIZATION_CHART_CHILD","GetOrganizationCharts","GetOrganizationChart","GetPositionFromOrganization","positionChartId","GetOrganizationChartChild","GetOrganizationChartByCompanyId","PutOrganizationChart","PostOrganizationChart","DeleteOrganizationChart","organizationChartHandleChange","organizationChartHandleValidation","organizationChartCleanState","organizationChartMethods","padre","child","PositionChartId","createTree","tree","area","AreasId","Number","areaId","createTreeByArea","fatherPosition","createTreeByFatherPosition","hijos","ChartTree1","AREA_CARGANDO","AREA_ERROR","AREA_HANDLE_CHANGE","AREA_CLEAN_STATE","AREA_CRUD","AREAS_LIST","AREA_HANDLE_VALIDATION","GetAreas","GetAreasByCompanyId","GetAreasByCompanyIdWithoutTaken","GetAreasByCompanyIdTaken","GetArea","PutArea","PutAreaTaken","organizationChartId","PostArea","DeleteArea","areaHandleChange","areaHandleValidation","areaCleanState","areaMethods","cn","bem","StyledNode","styled","div","Modals","role","CardNode","employee","addChild","updateNode","deleteChild","rArea","style","textAlign","OrganizationChart","centerDiagram","element","container","current","scrollLeft","scrollWidth","clientHeight","createOrganigrama","organigrama","PositionName","PersonName","Area","PersonalDetail","createOrigin","addUpChild","parentId","nodeId","getOrganizationChartByArea","getCompleteOrganizationChart","createRef","organizationChartReducer","list_areas","areaReducer","hrefBase","innerRef","lineWidth","lineColor","lineBorderRadius","organizationChartActions","areaActions","PERSONAL_DETAIL_CARGANDO","PERSONAL_DETAIL_ERROR","PERSONAL_DETAIL_HANDLE_CHANGE","PERSONAL_DETAIL_CLEAN_STATE","PERSONAL_DETAIL_CRUD","PERSONAL_DETAILS_LIST","PERSONAL_DETAIL_HANDLE_VALIDATION","GetPersonalDetails","GetPersonalDetailsByCompanyId","GetPersonalDetail","PutPersonalDetail","PostPersonalDetail","DeletePersonalDetail","personalDetailHandleChange","personalDetailHandleValidation","personalDetailCleanState","personalDetailMethods","PositionId","PersonDetailId","actionOrganizationChart","list_personal_details","personalDetailReducer","personalDetailActions","isOpenAux","Node","watchChild","isFirst","ComponentOrganizationChart","UpdateChild","ComponentUpdateChild","ViewOrganizationChart","ComponentViewOrganizationChart","ReadChild","arrayDeCadenas2","read_child","Responsibilities","Competencias","Puntos","Sexo","Birthdate","RFC","DateAdmission","Contract","Benefits","DailySalary","IntegratedSalary","Type","CollapseSection","countVideos","videos","time","video","A","Inputs","ComponentInputs","ComponentModals","ComponentNavbars","ComponentLists","ComponentRegularExpressions","ComponentTabs","ComponentCollapse","AWhatsapp","phone","Landing","Heroxs","WebApps","class","ReadCardProduct","categories","category","Badge","PRODUCT_CARGANDO","PRODUCT_ERROR","PRODUCT_HANDLE_CHANGE","PRODUCT_CLEAN_STATE","PRODUCT_CRUD","PRODUCTS_LIST","PRODUCT_HANDLE_VALIDATION","GetProducts","GetProductsByCategoryId","GetProduct","PutProduct","includeBlobs","PostProduct","DeleteProduct","productHandleChange","productHandleValidation","productCleanState","productMethods","CardProduct","productId","productReducer","Blobs","fileCover","Categories","productActions","blobProduct","el","BlobTypeId","URL","createObjectURL","Uri","ListOfCardProducts","list_products","product","ListOfCategories","categoryProductId","openDeleteModal","idProduct","deleteProduct","cleanProduct","cancel","CATEGORY_CARGANDO","CATEGORY_ERROR","CATEGORY_HANDLE_CHANGE","CATEGORY_CLEAN_STATE","CATEGORY_CRUD","CATEGORIES_LIST","CATEGORY_HANDLE_VALIDATION","GetCategories","GetCategory","PutCategory","PostCategory","DeleteCategory","categoryHandleChange","categoryHandleValidation","categoryCleanState","categoryMethods","ComponentCardProduct","ComponentListOfCardProducts","ListOfProducts","ComponentListOfProducts","LandingProducts","SoftwareAgency","LandingSoftwareAgency","Products","NotFoundPage","LandingCourses","LOGIN_CARGANDO","LOGIN_ERROR","LOGIN_HANDLE_CHANGE","LOGIN_CLEAN_STATE","LOGIN_USER","LOGIN_HANDLE_VALIDATION","parserJson","obj","jsonSerialize","prop","slice","loginHandleChange","loginHandleValidation","loginCleanState","loginMethods","object","COMPANY_CARGANDO","COMPANY_ERROR","COMPANY_HANDLE_CHANGE","COMPANY_CLEAN_STATE","COMPANY_CRUD","COMPANIES_LIST","COMPANY_HANDLE_VALIDATION","GetCompanies","GetCompaniesByUser","GetCompany","PutCompany","PostCompany","DeleteCompany","companyHandleChange","companyHandleValidation","companyCleanState","companyMethods","LoginForm","ActionLogin","loginReducer","grant_type","username","password","ModelLogin","list_companies","companyReducer","handleRedirect","loginActions","companyActions","SIGN_UP_CARGANDO","SIGN_UP_ERROR","SIGN_UP_HANDLE_CHANGE","SIGN_UP_CLEAN_STATE","SIGN_UP_USER","SIGN_UP_HANDLE_VALIDATION","SIGN_UP_PRELOADED_DATA","signUpHandleChange","signUpHandleValidation","signUpCleanState","signUpPreloadedData","signUpMethods","SignUp","signUpReducer","UserName","Email","PhoneNumber","Password","ConfirmPassword","ValidateByPhoneOrEmail","Roles","TypeUser","ModelSignUp","RegExp","signUpActions","CHANGE_PASSWORD_CARGANDO","CHANGE_PASSWORD_ERROR","CHANGE_PASSWORD_HANDLE_CHANGE","CHANGE_PASSWORD_CLEAN_STATE","CHANGE_PASSWORD_USER","CHANGE_PASSWORD_HANDLE_VALIDATION","SetPassword","changePasswordHandleChange","changePasswordHandleValidation","changePasswordCleanState","changePasswordMethods","phoneOrEmail","ChangePassword","changePasswordReducer","NewPassword","ConfirmNewPassword","code","email","modelChangePassword","Code","usernameOrEmailOrPhoneNumber","readonly","changePasswordActions","ChangePasswordForUser","actionChangePasswordForUser","userId","UserId","SendEmail","Login","ComponentLogin","ComponentSignUp","ComponentChangePassword","ComponentVerifyAccount","ComponentSendEmail","ComponentChangePasswordForUser","LayoutSection","classSection","classContainer","classLogo","classCard","classCardBody","LoginPage","ForgotPassword","CheckYourAccount","ChangePasswordPage","SignUpPage","ANALYTICS_CARGANDO","ANALYTICS_ERROR","ANALYTICS_CLEAN_STATE","ANALYTICS_COUNT_PRODUCTS","ANALYTICS_COUNT_COURSES","ANALYTICS_COUNT_USERS","ANALYTICS_COUNT_ADMINS","ANALYTICS_COUNT_COMPANIES","ANALYTICS_COUNT_POSITIONS","ANALYTICS_COUNT_PERSONAL_DETAILS","ANALYTICS_COUNT_AREAS","analyticsCleanState","analyticsMethods","Indicators","analyticsReducer","count_companies","count_users","count_admins","cardAnalytics","analyticsActions","ADMIN_CARGANDO","ADMIN_ERROR","ADMIN_HANDLE_CHANGE","ADMIN_CLEAN_STATE","ADMIN_CRUD","ADMIN_HANDLE_VALIDATION","ADMIN_USERS_LIST","GetUserInfo","GetUsersInfo","roleName","PutContactInfo","ValidateAccount","adminHandleChange","adminHandleValidation","adminCleanState","adminMethods","typeError","ListOfUsers","adminReducer","adminActions","list_users","typeUser","UpdateContactInfo","closeModal","contactModel","NewUserName","NewTypeUser","NewPhoneNumber","NewEmail","EmailConfirmed","cargandoValidateAccount","Active","ComponentsListOfUsers","UpdateUserInfo","ComponentUpdateUserInfo","ComponentValidateAccount","ListOfAdmins","CreateAdmin","ReadAdmin","CreateUser","ReadUser","SECTION_CARGANDO","SECTION_ERROR","SECTION_HANDLE_CHANGE","SECTION_CLEAN_STATE","SECTION_CRUD","SECTIONS_LIST","SECTIONS_SELECT","SECTION_HANDLE_VALIDATION","sectionHandleChange","sectionHandleValidation","sectionCleanState","sectionMethods","Section","sectionId","actionSection","sectionReducer","CourseId","courseId","sectionActions","CreateModalSection","sectionModal","EditSectionModal","section","SectionName","SectionId","DeleteSectionModal","deleteSectionAction","CATEGORY_PRODUCT_CARGANDO","CATEGORY_PRODUCT_ERROR","CATEGORY_PRODUCT_HANDLE_CHANGE","CATEGORY_PRODUCT_CLEAN_STATE","CATEGORY_PRODUCT_CRUD","CATEGORIES_PRODUCTS_LIST","CATEGORY_PRODUCT_HANDLE_VALIDATION","categoryProductHandleChange","categoryProductHandleValidation","categoryProductCleanState","categoryProductMethods","BLOB_CARGANDO","BLOB_ERROR","BLOB_HANDLE_CHANGE","BLOB_HANDLE_VALIDATION","BLOB_CLEAN_STATE","BLOB_CRUD","blobHandleChange","blobHandleValidation","blobCleanState","blobMethods","blob","createFormData","ContainerName","IsPrivate","FormData","set","append","Product","actionBlob","file","blobType","blobs","formData","blobReducer","Price","ProductCategoryId","actionProduct","fileCoverAnswer","list_categories_products","categoryProductReducer","categoryReducer","list_categories","categoryProductActions","blobActions","categoryActions","CreateProductModal","porductModal","hasSection","EditProductModal","DeleteProductModal","ListOfSections","cleanSection","list_sections","CrudCourse","Dashboard","indicator","page","AdminUsersPages","AdminProductPages","CreateProduct","AdminCompanyPages","ListOfCompanies","AdminSections","TemplateDashboardAdmin","CreateSection","EditCourse","Course","courseReducer","ListOfCourses","Player","url","height","controls","PlayerMedia","ComponentPlayer","TabCourse","WatchClass","stateProduct","ComponentCourse","ComponentListOfCourses","ComponentWatchClass","CreateCourse","WhatchCourse","CategoryProduct","actionCategoryProduct","ListOfCategoriesProducts","deleteAction","cleanModal","Category","categoryId","actionCategory","CreateCategoryModal","categoryModal","EditCategoryModal","DeleteCategoryModal","PRODUCT_DETAIL_CARGANDO","PRODUCT_DETAIL_ERROR","PRODUCT_DETAIL_HANDLE_CHANGE","PRODUCT_DETAIL_CLEAN_STATE","PRODUCT_DETAIL_CRUD","PRODUCT_DETAILS_LIST","PRODUCT_DETAIL_HANDLE_VALIDATION","GetProductDetails","GetProductDetail","GetProductDetailByProductId","PutProductDetail","PostProductDetail","DeleteProductDetail","productDetailHandleChange","productDetailHandleValidation","productDetailCleanState","productDetailMethods","ProductDetail","productDetailReducer","SubTitle","BlobId","ProductId","actionProductDetail","Blob","fileZip","fileZipAnswer","EditProduct","ProductSection","CategoryProducts","ListOfCategoriesOfProducts","Company","TradeName","BusinessName","BusinessActivity","count_positions","count_personal_details","count_areas","ComponentCompany","CompanyIndicators","ComponentCompanyIndicators","companyName","JOB_DETAIL_CARGANDO","JOB_DETAIL_ERROR","JOB_DETAIL_HANDLE_CHANGE","JOB_DETAIL_CLEAN_STATE","JOB_DETAIL_CRUD","JOB_DETAILS_LIST","JOB_DETAIL_HANDLE_VALIDATION","GetJobDetails","GetJobDetailByPersonalDetailId","personalDetailId","GetJobDetail","PutJobDetail","PostJobDetail","DeleteJobDetail","jobDetailHandleChange","jobDetailHandleValidation","jobDetailCleanState","jobDetailMethods","JobDetail","jobDetailReducer","actionJobDetail","jobDetailActions","JobDetails","CreateJobDetail","UpdateJobDetail","reDirectBase","reDirectCreate","CreatePosition","ListOfPersonalDetails","redirectUser","PersonDetail","SecondLastName","Gender","actionPersonalDetail","ListOfPersonDetails","ComponentListOfPersonalDetails","ComponentPersonDetail","CreatePersonDetail","ListOfAreas","Taken","ComponentListOfAreas","ComponentArea","CreateArea","ComponentCompanies","ComponentJobDetails","CreateCompany","AdminDashboardPages","OrgainaztionChart","UpdateCurrent","UpdatePersonDetail","UpdateArea","ComponentUsers","AdminSectionsPages","ComponentSections","AdminCoursesPages","ComponentCourses","ComponentProducts","ComponentDashboard","AdminPositionsPages","ComponentPositions","AdminOrganizationChart","AdminPersonalDetail","ComponentPersonalDetail","AdminArea","DashboardUserTemplate","DashboardUserPage","UserListOfPositionPage","UserCreatePosition","UserListOfPersonDetails","UserCreatePersonDetail","UserUpdatePersonDetail","UserListOfAreas","UserCreateArea","UserUpdateArea","UserOrganizationChart","ComponentsOrganizatioChart","App","exact","path","component","Landings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","reducer","Idd","nameInput","DateModified","Reducer","files","list_brands","list_organization_chart","list_job_details","list_product_details","COURSE_CARGANDO","COURSE_ERROR","COURSE_HANDLE_CHANGE","COURSE_CLEAN_STATE","COURSE_CRUD","COURSES_LIST","COURSE_HANDLE_VALIDATION","list_courses","list_sections_select","cargandoUsername","errorUsername","cargandoEmail","errorEmail","cargandoPhone","errorPhone","cargandoPassword","errorPassword","errorValidateAccount","count_products","count_courses","BlobName","BlobType","Brand_Blob","Product_Blob","BlogPosts","AspNetUsers","combineReducers","valueInput","WebFont","load","google","families","store","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dedb1dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/product.d9246254.jpg\";","export default __webpack_public_path__ + \"static/media/cristian.319f1962.jpg\";","export default __webpack_public_path__ + \"static/media/Jesus.7acb2fb5.jpg\";","export default __webpack_public_path__ + \"static/media/version-4-logo.e2c73c24.svg\";","export default __webpack_public_path__ + \"static/media/organigrama.b28e5e03.jpeg\";","export default __webpack_public_path__ + \"static/media/puestos.6832c674.jpeg\";","export default __webpack_public_path__ + \"static/media/descripciones.25a448ed.jpeg\";","export default __webpack_public_path__ + \"static/media/procesos.19e7ff14.jpeg\";","import React from 'react'\r\nimport Cristian from './cristian.jpg';\r\nimport Jesus from './Jesus.jpg';\r\nimport ProductDefault from './product.jpg'\r\nimport Logo from './version-4-logo.svg'\r\nimport Organigrama from './organigrama.jpeg'\r\nimport Puestos from './puestos.jpeg'\r\nimport Descripciones from './descripciones.jpeg'\r\nimport Procesos from './procesos.jpeg'\r\n   \r\n\r\n\r\n\r\nconst Img = ({src='', width='', alt='', className=''}) => {\r\n    return (\r\n        <img src={src} width={width} alt={alt} className={className}/>\r\n    )\r\n}\r\n\r\nexport const ImgCristian = ({className}) =>(\r\n    <Img src={Cristian} alt='Cristian photo' className={className}/>\r\n)\r\n\r\nexport const ImgJesus = ({className}) =>(\r\n    <Img src={Jesus} alt='jesus photo' className={className}/>\r\n)\r\n\r\nexport const ImgOrganigrama = ({className}) =>(\r\n    <Img src={Organigrama} alt='Organigrama' className={className}/>\r\n)\r\n\r\nexport const ImgProcesos = ({className}) =>(\r\n    <Img src={Procesos} alt='Procesos' className={className}/>\r\n)\r\n\r\nexport const ImgPuestos = ({className}) =>(\r\n    <Img src={Puestos} alt='Puestos' className={className}/>\r\n)\r\n\r\nexport const ImgDescripciones = ({className}) =>(\r\n    <Img src={Descripciones} alt='Descripciones' className={className}/>\r\n)\r\n\r\nexport const SvgLogo = ({className}) =>(\r\n    <Img src={Logo} width={150} alt='logo version 4' className={className}/>\r\n)\r\n\r\nexport const ImgProduct = ({uri = '', className}) =>(\r\n    <Img src={uri ? uri : ProductDefault} alt='default product' className={className}/>\r\n)\r\n\r\n\r\n    \r\n","//imports de react.\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {SvgLogo} from '../img'\r\n\r\nexport const LogoNavbar = ({href = '/', className=''}) => {\r\n    return (\r\n        <h6 className={`font-weight-bold ${className}`}> <Link to='/' className=\"text-dark\">Version 4</Link> </h6>\r\n    )\r\n}\r\n\r\n\r\nexport const Logo = ({href = '/', className=''}) => {\r\n    return (\r\n        <SvgLogo />\r\n    )\r\n}","// Imports de axios.\r\nimport axios from \"axios\";\r\n\r\n/*\r\n * Función para detectar el tipo de error.\r\n */\r\nexport const errorResponse = (data) => {\r\n  //debugger;\r\n  if (data.ModelState) {\r\n    return data.ModelState[\"\"];\r\n  }\r\n  if (data.Message) {\r\n    return data.Message;\r\n  }\r\n  if (data.error_description) {\r\n    return data.error_description;\r\n  }\r\n  if (data.error) {\r\n    return data.error;\r\n  }\r\n};\r\n\r\n/*\r\n * F.unción para manejar errores.\r\n */\r\nexport const errorHandler = (error) => {\r\n  let messageError = \"\";\r\n  //debugger;\r\n  if (!error.response) {\r\n    messageError = \"Error de conexión\";\r\n  } else {\r\n    switch (error.response.status) {\r\n      case 400:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 404:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 500:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 401:\r\n        setLocalStorage();\r\n        window.open(`https://version4-front.azurewebsites.net/login-expired`, \"_self\");\r\n        break;\r\n      default:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n    }\r\n  }\r\n  return messageError;\r\n};\r\n\r\n/*\r\n * Funcion para manejar el encabezado del token.\r\n */\r\nfunction configHeader(token) {\r\n  if (token) {\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return config;\r\n  }\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\n/*\r\n * Función para setear local storage\r\n */\r\nexport const setLocalStorage = (respuesta) => {\r\n  if (respuesta === undefined) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem(\"token\", respuesta.data.access_token);\r\n  localStorage.setItem(\"role\", respuesta.data.roles);\r\n  localStorage.setItem(\"username\", respuesta.data.userName);\r\n\r\n  return;\r\n};\r\n\r\n/*\r\n * Función para manejar las peticiones del api, reducir y optimizar código\r\n * uri: dirección que vamos a llamar del back\r\n * header: si requiere autenticación el usuario\r\n * apiMethod: get, post, put, delete\r\n * body: cuerpo si lo necesita\r\n */\r\nexport const axios_api = async (\r\n  uri = \"\",\r\n  header,\r\n  apiMethod = \"\",\r\n  body = {}\r\n) => {\r\n  let respuesta = {};\r\n\r\n  if (uri === \"\") {\r\n    return (respuesta = {\r\n      data: \"No se especifico ninguna uri\",\r\n    });\r\n  }\r\n\r\n  const config = configHeader(header);\r\n\r\n  const pathApi = `${localStorage.getItem(\"route\")}${uri}`;\r\n\r\n  switch (apiMethod.toLowerCase()) {\r\n    case \"get\":\r\n      respuesta = await axios.get(pathApi, config);\r\n      break;\r\n    case \"post\":\r\n      respuesta = await axios.post(pathApi, body, config);\r\n      break;\r\n    case \"put\":\r\n      respuesta = await axios.put(pathApi, body, config);\r\n      break;\r\n    case \"delete\":\r\n      respuesta = await axios.delete(pathApi, config);\r\n      break;\r\n    default:\r\n      respuesta = {\r\n        data: \"No se envio ningun ApiMethod\",\r\n      };\r\n      break;\r\n  }\r\n\r\n  return respuesta;\r\n};\r\n\r\nexport const signOff = (e) => {\r\n  e.preventDefault();\r\n  setLocalStorage();\r\n  window.open(`/`, \"_self\");\r\n};\r\n\r\n// Metodo para manejar las rutas del api\r\nexport const setPathApi = () => {\r\n  const option = 2;\r\n  let route = \"\";\r\n  switch (option) {\r\n    case 1:\r\n      // Local\r\n      route = \"https://localhost:44356/\";\r\n      break;\r\n    case 2:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    case 3:\r\n      // Production\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    default:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n  }\r\n\r\n  localStorage.setItem(\"route\", route);\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport {Logo} from './Logos'\r\n// Imports de components-api.\r\nimport {signOff} from '../components-api/ConfigApi'\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Navbars = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar expand=\"md\" className=\"fixed-top bg-white border-bottom\">\r\n        <Container>\r\n        {/* <NavbarBrand href=\"/\" className=\"text className='text-primary'-dark font-weight-bold\">VERSION 4</NavbarBrand> */}\r\n        <Logo />\r\n        <NavbarToggler onClick={toggle}><FaIcons.FaBars className=\"lead\" /></NavbarToggler>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"d-flex mr-2\">\r\n              <NavLink href=\"/login\"className=\"btn btn-outline-secondary align-self-center\">Empresas</NavLink>\r\n            </NavItem>\r\n            {/* <NavItem className=\"d-flex\">\r\n              <NavLink href=\"/sign-up\"className=\"btn btn-primary align-self-center\">Regístrate</NavLink>\r\n            </NavItem> */}\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const NavbarAdmin = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar light className=\"bg-white\" expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand href=\"/admin-dashboard\" className='text-primary'>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret className=\"text-dark\">\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff} className=\"text-dark\">\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const User = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const {companyId} = useParams();\r\n  return (\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand className='text-primary' href={`/user-dashboard/company/${companyId}`}>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff}>\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}","// Imports de react.\r\nimport React from 'react'\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CardAnalytics = ({title, number, icon}) => {\r\n    const rTitle = title ? title : 'title';\r\n    const rNumber = number ? number : '0'\r\n    const rIcon = icon ? icon : <FaIcons.FaVideo className=\"mr-2\" />;\r\n    return (\r\n        <Card className=\"border-0 my-3\">\r\n            <CardBody>\r\n                <p className=\"text-muted mb-2\">{rIcon} {rTitle}</p>\r\n                <h5 className=\"display-4 text-dark\">{rNumber}</h5>\r\n                {/* <div className=\"d-inline-block text-success mr-2\"><FaIcons.FaArrowUp className=\"mr-2\" />0%</div><p className=\"text-dark d-inline-block mb-0\">vs los últimos 7 días</p> */}\r\n            </CardBody>\r\n        </Card>   \r\n    )\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from \"reactstrap\";\r\n\r\nexport const DropDownActions = ({children, labelButton}) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n      <DropdownToggle caret color={'link'} className=\"text-dark\">{labelButton}</DropdownToggle>\r\n      <DropdownMenu>{children}</DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const Loader = ({color, activate}) => {\r\n    const rColor = color ? color: 'primary';\r\n    if(activate){\r\n        return(\r\n            <Spinner color={rColor} className=\"align-middle ml-1\" />\r\n        )\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const Error = ({message}) => {\r\n    \r\n    return <>\r\n        {message ? \r\n            <div className='text-danger text-center mb-4'>{message}</div>\r\n        : ''}\r\n    </>;\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {DropdownItem, Form, FormGroup, Input, Table} from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de components.\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\nimport {DropDownActions} from '../config-components/DropDowns'\r\n\r\nexport const UseSearchItems = (list, propertiesTable) => {\r\n  const [searchByItem, setSearchItem] = useState(propertiesTable);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  React.useMemo(() => {\r\n    const filteredSome = list.filter((items) => {\r\n      let res = \"\";\r\n      res += propertiesTable.map((property) => {\r\n        return `${items[property]} `;\r\n      });\r\n      return res.toLowerCase().includes(query.toLowerCase());\r\n    });\r\n    setSearchItem(filteredSome);\r\n  }, [list, query, propertiesTable]);\r\n\r\n  return { query, setQuery, searchByItem };\r\n};\r\n\r\nexport const TableFilter = ({\r\n    title, \r\n    titlesTable,\r\n    propertiesTable,\r\n    bodyTable,\r\n    loading,\r\n    error,\r\n    hrefCreate,\r\n    actions\r\n}) => {\r\n    const rTitle = title ? title : 'Titulo';\r\n    const rHrefCreate= hrefCreate ? hrefCreate : '/admin-dashboard';\r\n\r\n    const { query, setQuery, searchByItem } = UseSearchItems(\r\n        bodyTable,\r\n        propertiesTable\r\n    );\r\n    return (\r\n        <>\r\n            <div className=\"d-flex mb-4\">\r\n                <h3 className=\"flex-grow-1\">{rTitle}</h3>\r\n                \r\n                <div>\r\n                    <Form>\r\n                        <FormGroup className=\"d-flex\">\r\n                            <Input \r\n                                className=\"mr-3\" \r\n                                type=\"text\" \r\n                                placeholder=\"Buscar...\" \r\n                                value={query}\r\n                                onChange={(e) => {\r\n                                    setQuery(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Link to={rHrefCreate} className={'btn btn-primary'}>Crear</Link>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <Table className=\"bg-white\">\r\n                <thead>\r\n                    <tr>\r\n                        {titlesTable.map(title => {\r\n                            return(\r\n                            <th>{title}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    error ? <Error message={error} /> :\r\n                    loading ? <Loader activate={loading}/> : \r\n                    <tbody>\r\n                        {searchByItem?.map(item => {\r\n                            return(\r\n                                <tr>\r\n                                    {propertiesTable?.map(property => {\r\n                                        return <td>{item[property]}</td>\r\n                                    })}\r\n                                        <td>\r\n                                        <DropDownActions \r\n                                            labelButton={<FaIcons.FaEllipsisH />}\r\n                                        >\r\n                                            {actions &&\r\n                                                actions.map( action => {\r\n                                                    return<DropdownItem onClick={() => action.handleAction(item['Id'])}>\r\n                                                        {action.action}\r\n                                                    </DropdownItem>\r\n                                                })\r\n                                            }\r\n                                        </DropDownActions>  \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}      \r\n                    </tbody>\r\n                }               \r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentConfigApi from './ConfigApi'\r\nimport * as ComponentApiResponses from './ApiResponses'\r\n\r\nexport const ConfigApi = ComponentConfigApi;\r\nexport const ApiResponses = ComponentApiResponses;","// Imports de react.\r\nimport React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Input, Label, FormGroup, FormFeedback, Form, Button, Col} from 'reactstrap'\r\nimport {RegularExpressions} from './index'\r\nimport {ApiResponses} from '../components-api'\r\n\r\n\r\n// Hook para manejar el cambio en inputs.\r\nexport const useInputState = (inputValue) => {\r\n    const [inputChange, setInputChange] = useState(inputValue);\r\n    const setOnChange = (e) => {\r\n        setInputChange(e)\r\n    }\r\n    return {inputChange, setOnChange}\r\n}\r\n\r\n\r\n// Input para textos.\r\nexport const InputText = ({forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    placeHolder,\r\n    inputValue,\r\n    onChange,\r\n    maxLength,\r\n    minLength,\r\n    RE,\r\n    validateRE,\r\n    options,\r\n    optionPlaceHolder,\r\n    forgotPassword = false,\r\n    xs='12',\r\n    sm='12',\r\n    md='12',\r\n    lg='12',\r\n    xl='12',\r\n    classCol='px-0'\r\n}) => {\r\n    const rFor = forName ? forName : 'for';\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n    const rPlaceHolder = placeHolder ? placeHolder : '';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rMaxLength = maxLength ? maxLength : 524288;\r\n    const rMinLength = minLength ? minLength : 0;\r\n    const rRE = RE ? RE : '';\r\n\r\n    const handleRE = (e) =>{\r\n        \r\n        validateRE = e.target.value.match(rRE.re) ? true : false;\r\n        if(validateRE && e.target.value === '' && isMandatory){\r\n            validateRE = false;\r\n        }\r\n        if(!validateRE && e.target.value === '' && !isMandatory){\r\n            validateRE = '';\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <Col \r\n            xs={xs}\r\n            sm={sm}\r\n            md={md}\r\n            lg={lg}\r\n            xl={xl}\r\n            className={classCol}\r\n        >\r\n            <FormGroup>\r\n                <Label\r\n                    for={rFor}\r\n                    className={`${rClassLabel} d-flex justify-content-between`}\r\n                >\r\n                        <div>\r\n                            {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n                        </div>\r\n                        {forgotPassword && <small>\r\n                            <Link to='/forgot-password'>\r\n                                ¿Olvidaste tu contraseña?\r\n                            </Link>\r\n                        </small>}\r\n                </Label>\r\n                <Input\r\n                    type={rInputType}\r\n                    name={rInputName}\r\n                    id={rInputId}\r\n                    placeholder={rPlaceHolder}\r\n                    value={rInputValue}\r\n                    onChange={(e)=>handleRE(e)}\r\n                    maxLength={rMaxLength}\r\n                    minLength={rMinLength}\r\n                    valid={validateRE === true && true }\r\n                    invalid={validateRE === false && true}\r\n                >\r\n                    {\r\n                        options && \r\n                        <>\r\n                            <option value=\"\">{optionPlaceHolder}</option>\r\n                            {options.map(option => {\r\n                                return <option key={option.Id} value={option.Id}>{option.Name} {option?.LastName ? option?.LastName : ''}</option>\r\n                            })}\r\n                        </> \r\n                    }\r\n                </Input>\r\n                <FormFeedback  valid >{validateRE && rRE.validMessage}</FormFeedback>\r\n                <FormFeedback  invalid >{validateRE === false && rRE.invalidMessage}</FormFeedback>\r\n\r\n            </FormGroup>\r\n        </Col>\r\n    )\r\n}\r\n\r\n// Input para correo.\r\nexport const InputEmail = ({name, inputValue, onChange, label, RE, validateRE}) => {\r\n    const rName = name ? name : 'Email';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rLabel = label ? label : 'Email';\r\n    const rRE = RE ? RE : RegularExpressions.RE_EMAIL;\r\n    return <InputText\r\n            forName='Email'\r\n            classLabel='font-weight-bold'\r\n            textLabel={rLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='text'\r\n            inputName={rName}\r\n            inputId='Email'\r\n            placeHolder={`Introduce tu ${rLabel}`}\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={20}\r\n            RE={rRE}\r\n            validateRE={validateRE}\r\n        />\r\n}\r\n\r\nexport const InputPassword = ({\r\n    inputValue, \r\n    onChange, \r\n    validateRE, \r\n    forgotPassword = false,\r\n    RE = RegularExpressions.RE_PASSWORD,\r\n    inputName = 'password',\r\n    textLabel = 'Contraseña'\r\n}) => {\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    return <InputText\r\n            forName='Password'\r\n            classLabel='font-weight-bold'\r\n            textLabel={textLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='password'\r\n            inputName={inputName}\r\n            inputId='password'\r\n            placeHolder='Introduce tu contraseña'\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={1}\r\n            RE={RE}\r\n            validateRE={validateRE}\r\n            forgotPassword={forgotPassword}\r\n        />\r\n}\r\n\r\n\r\nexport const InputFile = ({//forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    onChange,\r\n    RE,\r\n    validateRE,\r\n   \r\n}) => {\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n \r\n    const handleRE = (e) =>{\r\n        if(validateRE && e.target.value === [] && isMandatory){\r\n            validateRE = false;\r\n        }else {\r\n            validateRE = true;\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label\r\n                className={rClassLabel}\r\n            >\r\n                {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n            </Label>\r\n            <Input\r\n                type={rInputType}\r\n                name={rInputName}\r\n                id={rInputId}\r\n                onChange={(e)=>handleRE(e)}\r\n                valid={validateRE === true && true }\r\n                invalid={validateRE === false && true}\r\n            />\r\n            <FormFeedback  valid >{validateRE && 'archivo valido'}</FormFeedback>\r\n            <FormFeedback  invalid >{validateRE === false && 'archivo invalido'}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\n  \r\nexport const ValidateInputs = (validations, e, onValidate) => {\r\n    e.preventDefault()\r\n    for(let i = 0; i < validations.length ; i++){\r\n        if(validations[i] !== '' && validations[i].props.isMandatory === '*' ){\r\n            if(!validations[i].props.validateRE || validations[i].props.validateRE === \"\"){\r\n                let model = {\r\n                    name: validations[i].props.inputName,\r\n                    isInvalid: false\r\n                }\r\n                onValidate(model);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const Form1 = ({children, \r\n    loading, \r\n    error, \r\n    action,\r\n    textButton,\r\n    textButtonLoading,\r\n    handleValidations,\r\n}) => {\r\n    const HandleAction = (e) =>{\r\n        const isValid = ValidateInputs(children, e, handleValidations);\r\n        if(isValid) {\r\n            action();\r\n        }\r\n    }\r\n    return <Form className={'d-flex flex-wrap'}>\r\n        {children}\r\n        <ApiResponses.Error message={error}/> \r\n        {loading ? \r\n            <Button color=\"primary\" className=\"w-100 mb-3\" >{textButtonLoading}<ApiResponses.Loader activate={loading}  color={'light'} /></Button>  :\r\n            <Button color=\"primary\" className=\"w-100 mb-3\" onClick={HandleAction}>{textButton} <ApiResponses.Loader activate={loading}  color={'light'} /></Button>\r\n        }\r\n         \r\n    </Form>\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport const SwitchSome = () => {\r\n  const [some, setSome] = useState(false);\r\n  const toggle = () => {\r\n    setSome(!some)\r\n  }\r\n  return {some, setSome, toggle}\r\n}\r\n\r\nexport const ModalForm  = ({children, content, modalTitle, state}) => {\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody> \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalDelete  = ({children, content, modalTitle, action, state}) => {\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    state.toggle();\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={state.toggle}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalOpenDelete  = ({content, modalTitle, action, clean}) => {\r\n\r\n  const [modal, setToogle] = useState(true);\r\n\r\n  const toggle = () => { \r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    toggle();\r\n  }\r\n\r\n  const toggleCancel = () => {\r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <Modal isOpen={modal} toggle={toggleCancel} >\r\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={toggleCancel}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody,\r\n} from 'reactstrap';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <Card className=\"card-form mx-auto text-center border-0\">\r\n            <CardBody>\r\n                <h4 className=\"display-1 font-weight-bold mb-0\">404</h4>\r\n                <h4 className=\"text-muted mb-4\">Página no encontrada</h4>\r\n                <Link to='/' className=\"btn btn-primary\">Regresar a inicio</Link>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","export const RE_EMAIL = {\r\n    re: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\r\n    validMessage: \"Email correcto\",\r\n    invalidMessage: \"El email necesita un @ y un . para ser valido\",\r\n  };\r\n  \r\n  export const RE_PASSWORD = {\r\n    re: /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i,\r\n    validMessage: \"Contraseña valida\",\r\n    invalidMessage:\r\n      \"La contraseña debe tener más de 8 caracteres, un dígito, una minúscula y una mayúscula  \",\r\n  };\r\n  \r\n  export const RE_PASSWORD_MATCHES = {\r\n    re: \"\",\r\n    validMessage: \"La Contraseña coincide\",\r\n    invalidMessage: \"La contraseña no coincide\",\r\n  };\r\n  \r\n  export const RE_EMPTY = {\r\n    re: /^[^]+$/i,\r\n    validMessage: \"Campo correcto\",\r\n    invalidMessage: \"No puede ir vacio\",\r\n  };\r\n  ","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nexport const Tabs = ({children1, children2, children3, tab=\"1\"}) => {\r\n  const [activeTab, setActiveTab] = useState(tab);\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs className=\"mb-2\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Posición\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Personal\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Laboral\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                      {children1}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                    {children2}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                    {children3}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport const ShowListFromText = ({description = []}) => {\r\n\r\n    if(!description){\r\n        return 'no hay información';\r\n    }\r\n\r\n    let arrayDeCadenas = description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n\r\n    return(\r\n        <ul>\r\n            {arrayDeCadenas.map(item => {\r\n                return (\r\n                        <li>{item}</li>\r\n                    )\r\n                }    \r\n            )}\r\n        </ul>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const POSITION_CARGANDO = \"position_cargando\";\r\nexport const POSITION_ERROR = \"position_error\";\r\nexport const POSITION_HANDLE_CHANGE = \"position_handle_change\";\r\nexport const POSITION_CLEAN_STATE = \"position_clean_state\";\r\nexport const POSITION_CRUD = \"position_crud\";\r\nexport const POSITIONS_LIST = \"position_list\";\r\nexport const POSITION_HANDLE_VALIDATION = \"position_handle_validation\";\r\n\r\nexport const GetPositions = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Positions`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\nexport const GetPositionsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PositionsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\n\r\nexport const GetPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const PutPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'position_put'};\r\n}\r\n\r\nexport const PostPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const DeletePosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_HANDLE_VALIDATION, \r\n    GetPositions,\r\n    GetPositionsByCompanyId,\r\n    GetPosition,\r\n    PutPosition,\r\n    PostPosition,\r\n    DeletePosition\r\n  } from \"./positionTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const positionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const positionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const positionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const positionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPositions\":\r\n          answer = await GetPositions(); \r\n          break;\r\n\r\n        case \"GetPositionsByCompanyId\":\r\n          answer = await GetPositionsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPosition\":\r\n          answer = await GetPosition(data);\r\n          break;\r\n\r\n        case \"PutPosition\":\r\n          answer = await PutPosition(data);\r\n          break;\r\n\r\n        case \"PostPosition\":\r\n          answer = await PostPosition(data);\r\n          break;\r\n        \r\n        case \"DeletePosition\":\r\n          answer = await DeletePosition(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: POSITION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nclass Position extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {positionId, positionMethods} = this.props;\r\n        positionId && await positionMethods({Id: positionId}, 'GetPosition');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            positionMethods, \r\n            positionReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                Description,\r\n                Description2,\r\n                CompanyId,\r\n                Objective,\r\n                Knowledge,\r\n                Salary\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            Description: Description ? Description : '',\r\n            Description2: Description2 ? Description2 : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Objective: Objective ? Objective : '',\r\n            Knowledge: Knowledge ? Knowledge : '',\r\n            Salary: Salary ? Salary : ''\r\n        }\r\n        await positionMethods(model, action);\r\n    }\r\n\r\n    actionPosition = async () => {\r\n        const {\r\n            positionCleanState,\r\n            positionReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPosition');\r\n        }else{\r\n            await this.sendAction('PostPosition')\r\n        }\r\n        if(this.props.positionReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            positionCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {positionCleanState} = this.props;\r\n        positionCleanState()\r\n\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            positionHandleValidation,\r\n            positionHandleChange,\r\n            positionReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Description,\r\n                    Description2,\r\n                    Objective,\r\n                    Salary\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPosition}\r\n                textButton={Id ? 'Guardar Puesto' : 'Crear Puesto'}\r\n                textButtonLoading={Id ? 'Guardando PUesto...' : 'Creando Puesto...'}\r\n                validations={validations}\r\n                handleValidations={positionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Objetivo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Objective'}\r\n                    placeHolder={'Introduce el objetivo del puesto'}\r\n                    inputValue={Objective}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Objective}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Responsabilidades'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce las responsabilidades del puesto'}\r\n                    inputValue={Description}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Competencias'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description2'}\r\n                    placeHolder={'Introduce información'}\r\n                    inputValue={Description2}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description2}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Puntos'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Salary'}\r\n                    placeHolder={'Introduce puntos'}\r\n                    inputValue={Salary}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Salary}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({positionReducer}) => {\r\n    return {positionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...positionActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Position);\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Lists} from '../config-components'\r\n\r\nexport const ListOfResponsabilities = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description}/>\r\n    )\r\n}\r\n\r\nexport const ListOfDescriptions = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description2}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description2}/>\r\n    )\r\n}\r\n","import ComponentPosition from './Positions'\r\nimport ComponentListOfPositions from './ListOfPositions'\r\nimport * as ComponentsListFromPositions from './Responsibilities'\r\nimport ComponentReadPosition from './ReadPosition'\r\nexport const Position = ComponentPosition;\r\nexport const ListOfPositions = ComponentListOfPositions;\r\nexport const ListFromPositions = ComponentsListFromPositions; \r\nexport const ReadPosition = ComponentReadPosition; ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nconst ListOfPositions = ({ title='Posiciones', reDirect='', create='/create-position'}) => {\r\n    const positionReducer = useSelector(state => state.positionReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(positionActions.positionMethods({companyId},'GetPositionsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (positionId) => {\r\n        //history.push(`/admin-dashboard/company/${companyId}/update-position/${positionId}`)\r\n        history.push(reDirect.replace('positionId', positionId).replace('companyId', companyId))\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_positions\r\n    } = positionReducer;\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Puesto','Acciones']}\r\n                propertiesTable={['Name']}\r\n                //hrefCreate={`/admin-dashboard/company/${companyId}${create}`}\r\n                hrefCreate={create.replace('companyId', companyId)}\r\n                bodyTable={list_positions}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Puesto', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPositions;\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as postionActions from './reducer/positionActions'\r\nconst ReadPosition = ({positionId}) => {\r\n    debugger\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { data:{\r\n        Description,\r\n        Salary,\r\n        Objective\r\n    }} = positionReducer;\r\n    useEffect(() => {\r\n        dispatch(postionActions.positionMethods({Id: positionId},'GetPosition'))\r\n        return () => {\r\n            dispatch(postionActions.positionCleanState());\r\n        }\r\n    }, [dispatch, positionId])\r\n    let arrayDeCadenas = Description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n    return (\r\n        <div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Objetivo:</div>\r\n                <div className={'text-muted'}>{Objective}</div>\r\n            </div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Responsabilidades:</div>\r\n                <ul>\r\n                    {arrayDeCadenas.map(item => {\r\n                        return (\r\n                                <li className='text-muted'>{item}</li>\r\n                            )\r\n                        }    \r\n                    )}\r\n                </ul>\r\n            </div>\r\n            <div className='mb-4'>\r\n                <div className={'text-dark'}>Puntos:</div>\r\n                <div className={'text-muted'}>{Salary ? Salary: 0}</div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPosition;","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ORGANIZATION_CHART_CARGANDO = \"organization_chart_cargando\";\r\nexport const ORGANIZATION_CHART_ERROR = \"organization_chart_error\";\r\nexport const ORGANIZATION_CHART_HANDLE_CHANGE = \"organization_chart_handle_change\";\r\nexport const ORGANIZATION_CHART_CLEAN_STATE = \"organization_chart_clean_state\";\r\nexport const ORGANIZATION_CHART_CRUD = \"organization_chart_crud\";\r\nexport const ORGANIZATION_CHARTS_LIST = \"organization_charts_list\";\r\nexport const ORGANIZATION_CHART_HANDLE_VALIDATION = \"organization_chart_handle_validation\";\r\nexport const ORGANIZATION_CHART_CHILD = 'organization_chart_child'\r\n\r\nexport const GetOrganizationCharts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationCharts`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHARTS_LIST};\r\n}\r\n\r\nexport const GetOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\nexport const GetPositionFromOrganization = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PositionFromOrganization?positionChartId=${data.positionChartId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartChild = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartByCompanyId = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByCompanyId?companyId=${data.companyId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const GetOrganizationChartByArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByArea?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const PutOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'organization_chart_put'};\r\n}\r\n\r\nexport const PostOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const DeleteOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION, \r\n    GetOrganizationCharts,\r\n    GetOrganizationChart,\r\n    GetPositionFromOrganization,\r\n    GetOrganizationChartChild,\r\n    GetOrganizationChartByCompanyId,\r\n    GetOrganizationChartByArea,\r\n    PutOrganizationChart,\r\n    PostOrganizationChart,\r\n    DeleteOrganizationChart\r\n } from \"./organizationChartTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const organizationChartHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const organizationChartHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartMethods = (data, method, loading = '') => async (dispatch) => {\r\n    dispatch({\r\n      type:!loading ? ORGANIZATION_CHART_CARGANDO : loading,\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetOrganizationCharts\":\r\n            answer = await GetOrganizationCharts(); \r\n            break;\r\n\r\n        case \"GetOrganizationChart\":\r\n            answer = await GetOrganizationChart(data);\r\n            break;\r\n\r\n        case \"GetPositionFromOrganization\":\r\n            answer = await GetPositionFromOrganization(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartChild\":\r\n            answer = await GetOrganizationChartChild(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartByCompanyId\":\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n            let padre = answer.res.data.filter(child => child.PositionChartId == null);\r\n            let createTree = tree(padre[0], answer.res.data )\r\n            answer.res.data = createTree\r\n            break;\r\n        case \"GetOrganizationChartByArea\":\r\n            //answer = await GetOrganizationChartByArea(data);\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n            let area = answer.res.data.filter(child => child.AreasId === Number(data.areaId));\r\n            let createTreeByArea = tree(area[0], answer.res.data )\r\n            answer.res.data = createTreeByArea\r\n            break;\r\n        case \"GetOrganizationChartByFatherPosition\":\r\n          answer = await GetOrganizationChartByCompanyId(data);\r\n          let fatherPosition = answer.res.data.filter(child => child.Id === Number(data.positionChartId));\r\n          let createTreeByFatherPosition = tree(fatherPosition[0], answer.res.data )\r\n          answer.res.data = createTreeByFatherPosition\r\n          break;\r\n\r\n        case \"PutOrganizationChart\":\r\n          answer = await PutOrganizationChart(data);\r\n          break;\r\n\r\n        case \"PostOrganizationChart\":\r\n          answer = await PostOrganizationChart(data);\r\n          break;\r\n        \r\n        case \"DeleteOrganizationChart\":\r\n          answer = await DeleteOrganizationChart(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ORGANIZATION_CHART_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  const tree = (padre, hijos) => {\r\n      \r\n      let children = hijos.filter(child => child.PositionChartId == padre.Id);\r\n      if(!children || children?.length === 0 || children === undefined ){\r\n        return padre;\r\n      }\r\n\r\n      padre.ChartTree1 = children.map(child => {\r\n        return tree(child, hijos);\r\n      })\r\n\r\n      return padre;\r\n  }","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const AREA_CARGANDO = \"area_cargando\";\r\nexport const AREA_ERROR = \"area_error\";\r\nexport const AREA_HANDLE_CHANGE = \"area_handle_change\";\r\nexport const AREA_CLEAN_STATE = \"area_clean_state\";\r\nexport const AREA_CRUD = \"area_crud\";\r\nexport const AREAS_LIST = \"area_list\";\r\nexport const AREA_HANDLE_VALIDATION = \"area_handle_validation\";\r\n\r\nexport const GetAreas = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Areas`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdWithoutTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdWithoutTaken?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdTaken?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\n\r\nexport const GetArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const PutArea = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/Area?id=${data.Id}`,\r\n      true,\r\n      \"put\",\r\n      data\r\n    );\r\n  return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PutAreaTaken = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/AreaTaken?areaId=${data.areaId ? data.areaId : 0}&organizationChartId=${data.organizationChartId}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PostArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const DeleteArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_HANDLE_VALIDATION, \r\n    GetAreas,\r\n    GetAreasByCompanyId,\r\n    GetAreasByCompanyIdWithoutTaken,\r\n    GetAreasByCompanyIdTaken,\r\n    GetArea,\r\n    PutAreaTaken,\r\n    PutArea,\r\n    PostArea,\r\n    DeleteArea\r\n  } from \"./areaTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const areaHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const areaHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const areaCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const areaMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetAreas\":\r\n          answer = await GetAreas(); \r\n          break;\r\n\r\n        case \"GetAreasByCompanyId\":\r\n          answer = await GetAreasByCompanyId(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdWithoutTaken\":\r\n          answer = await GetAreasByCompanyIdWithoutTaken(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdTaken\":\r\n          answer = await GetAreasByCompanyIdTaken(data);\r\n          break;\r\n        \r\n        case \"GetArea\":\r\n          answer = await GetArea(data);\r\n          break;\r\n\r\n        case \"PutAreaTaken\":\r\n          answer = await PutAreaTaken(data);\r\n          break;\r\n\r\n        case \"PutArea\":\r\n          answer = await PutArea(data);\r\n          break;\r\n\r\n        case \"PostArea\":\r\n          answer = await PostArea(data);\r\n          break;\r\n        \r\n        case \"DeleteArea\":\r\n          answer = await DeleteArea(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: AREA_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { Card,  CardBody, CardTitle, CardSubtitle,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Col\r\n} from 'reactstrap'\r\nimport {ReadPosition} from '../components-position'\r\nimport {ApiResponses} from '../components-api'\r\nimport {Inputs} from '../config-components'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport bem from 'easy-bem'\r\nimport './style.css'\r\nconst cn = bem('scrollbars-example')\r\nconst COLS = 20\r\nconst ROWS = 20\r\n\r\nconst StyledNode = styled.div`\r\n  padding: 5px;\r\n  border-radius: 8px;\r\n  display: inline-block;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Modals = ({positionId, children, modalTitle, name}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    return (\r\n      <>\r\n        <span role=\"button\" onClick={toggle}>{children}</span>\r\n        <Modal isOpen={modal} toggle={toggle} >\r\n          <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n          <ModalBody>\r\n            <h3>{name}</h3> \r\n            <ReadPosition positionId={positionId} />\r\n          </ModalBody>\r\n          {/* <ModalFooter>\r\n            <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{' '}\r\n            <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n          </ModalFooter> */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport const CardNode = ({positionId,name, employee, area, addChild, updateNode,deleteChild}) => {\r\n    const rArea = area ? area : '';\r\n    return(\r\n        \r\n        <Card>\r\n            <CardBody className=' d-flex justify-content-between'>\r\n                <div className={'mr-5 '}>\r\n                    <div className='font-weight-bold  mb-2' style={{textAlign: 'start'}}>\r\n                        {name}\r\n                    </div>\r\n                    <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                        {employee ? `${employee.Name} ${employee.LastName} ` :'Empleado'}\r\n                    </div> \r\n                    {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n                </div>\r\n                <div>\r\n                    {/* <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div> */}\r\n                    <div>\r\n                        <Modals positionId={positionId} modalTitle={name} name={name} >\r\n                            <FaIcons.FaEye  className=\"text-secondary\" />\r\n                        </Modals>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div>\r\n                    <div>\r\n                        {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n \r\nclass OrganizationChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.container  = React.createRef();\r\n        this.state = {\r\n          value: ''\r\n        }\r\n      }\r\n\r\n      async componentDidMount() {\r\n        const {\r\n            organizationChartMethods,\r\n            areaMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n        companyId && await areaMethods({companyId: companyId}, 'GetAreasByCompanyIdTaken')\r\n   \r\n       \r\n        this.centerDiagram();\r\n    }\r\n\r\n    \r\n    centerDiagram = () => {\r\n        const element = this.container.current;\r\n        if (element) {\r\n            //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n            element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n        }\r\n    }\r\n\r\n    createOrganigrama =  (organigrama) => {\r\n        let ChartTree1 = organigrama?.ChartTree1\r\n        if(ChartTree1?.length === 0 || ChartTree1 === undefined || !ChartTree1){\r\n            \r\n            return <TreeNode \r\n                label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {''}\r\n                        name={organigrama.PositionName} \r\n                        employee = { organigrama.PersonalDetail}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n                }\r\n            />\r\n        }\r\n        \r\n        return <TreeNode \r\n            label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {''}\r\n                        name = {organigrama.PositionName} \r\n                        employee = { organigrama.PersonName}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n            }\r\n        >\r\n            {\r\n                ChartTree1.map((child) => {           \r\n                    return this.createOrganigrama(child)\r\n                })\r\n            }\r\n        </TreeNode>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addUpChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    getOrganizationChartByArea = async(e) => {\r\n        debugger\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        value === 'general' ? \r\n            await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId') :\r\n            await organizationChartMethods({companyId, areaId: value},'GetOrganizationChartByArea');\r\n\r\n        this.centerDiagram();\r\n       \r\n    }\r\n\r\n    getCompleteOrganizationChart = async() => {\r\n        const {\r\n            organizationChartMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n    }\r\n\r\n    render () {\r\n\r\n        const { \r\n            organizationChartReducer:{\r\n                data: {Id},\r\n                api_actions: {\r\n                    cargando,\r\n                    error\r\n                }\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }, \r\n            hrefBase\r\n        } = this.props\r\n\r\n        return(\r\n            <div >\r\n                <ul className=\"list-inline m-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${hrefBase}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \">\r\n                    \r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => this.getOrganizationChartByArea(e)}>\r\n                                <option value='general' >General</option>\r\n                                {\r\n                                    list_areas.map(area => {\r\n                                      \r\n                                        return <option value={area.Id}>\r\n                                            {area.Name}\r\n                                        </option>\r\n                                    })\r\n                                }\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </li>\r\n                </ul>\r\n               \r\n                {\r\n                    cargando \r\n                        ? \r\n                            <ApiResponses.Loader activate={true}/> \r\n                        :\r\n                    error \r\n                        ? \r\n                            <ApiResponses.Error message={error} />\r\n                        :\r\n                    Id \r\n                        ? \r\n                            <div className={cn()}>\r\n                                <ScrollContainer\r\n                              \r\n                                 innerRef={this.container}>\r\n                            \t    <Tree  \r\n                            \t        lineWidth={'2px'}\r\n                            \t        lineColor={'gray'}\r\n                            \t        lineBorderRadius={'10px'}\r\n                            \t        label={\r\n                            \t            <StyledNode>\r\n                            \t               <h1>{this.props.organizationChartReducer.data.Area?.Name ? this.props.organizationChartReducer.data.Area?.Name : 'General'}</h1>\r\n                            \t            </StyledNode>\r\n                            \t        }\r\n                            \t    >\r\n                            \t        {\r\n                            \t            this.createOrganigrama(this.props.organizationChartReducer.data)\r\n                            \t        }\r\n                            \t    </Tree>\r\n                            \t</ScrollContainer>\r\n                            </div>\r\n                        : \r\n                            <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                        \r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer, areaReducer}) => {\r\n    return {organizationChartReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...areaActions\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PERSONAL_DETAIL_CARGANDO = \"personal_detail_cargando\";\r\nexport const PERSONAL_DETAIL_ERROR = \"personal_detail_error\";\r\nexport const PERSONAL_DETAIL_HANDLE_CHANGE = \"personal_detail_handle_change\";\r\nexport const PERSONAL_DETAIL_CLEAN_STATE = \"personal_detail_clean_state\";\r\nexport const PERSONAL_DETAIL_CRUD = \"personal_detail_crud\";\r\nexport const PERSONAL_DETAILS_LIST = \"personal_detail_list\";\r\nexport const PERSONAL_DETAIL_HANDLE_VALIDATION = \"personal_detail_handle_validation\";\r\n\r\nexport const GetPersonalDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\nexport const GetPersonalDetailsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PersonalDetailsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\n\r\nexport const GetPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'personal_detail_put'};\r\n}\r\n\r\nexport const PostPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeletePersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION, \r\n    GetPersonalDetails,\r\n    GetPersonalDetailsByCompanyId,\r\n    GetPersonalDetail,\r\n    PutPersonalDetail,\r\n    PostPersonalDetail,\r\n    DeletePersonalDetail\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const personalDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const personalDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPersonalDetails\":\r\n          answer = await GetPersonalDetails(); \r\n          break;\r\n\r\n        case \"GetPersonalDetailsByCompanyId\":\r\n          answer = await GetPersonalDetailsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPersonalDetail\":\r\n          answer = await GetPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PutPersonalDetail\":\r\n          answer = await PutPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PostPersonalDetail\":\r\n          answer = await PostPersonalDetail(data);\r\n          break;\r\n        \r\n        case \"DeletePersonalDetail\":\r\n          answer = await DeletePersonalDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PERSONAL_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as positionActions from '../components-position/reducer/positionActions'\r\nimport * as personalDetailActions from '../components-personal-detail/reducer/personalDetailActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\n\r\n\r\nclass OrganizationChart extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {\r\n            nodeId, \r\n            organizationChartMethods, \r\n            personalDetailMethods,\r\n            areaMethods,\r\n            companyId, \r\n            positionMethods\r\n        } = this.props;\r\n        nodeId && await organizationChartMethods({Id: nodeId}, 'GetOrganizationChart');\r\n        companyId && await positionMethods({companyId: companyId}, 'GetPositionsByCompanyId')\r\n        companyId && await personalDetailMethods({companyId: companyId}, 'GetPersonalDetailsByCompanyId')\r\n        companyId && await areaMethods({companyId: companyId, areaId: this.props.organizationChartReducer.data.AreasId}, 'GetAreasByCompanyIdWithoutTaken')\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            organizationChartMethods, \r\n            organizationChartReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PositionId,\r\n                PositionChartId,\r\n                CompanyId,\r\n                PersonDetailId,\r\n                AreasId\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        debugger\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PositionId: PositionId ? Number(PositionId) : '',\r\n            PersonDetailId: PersonDetailId ?  Number(PersonDetailId) : '',\r\n            PositionChartId: PositionChartId ?  Number(PositionChartId) : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            AreasId: AreasId ? AreasId : ''\r\n        }\r\n        await organizationChartMethods(model, action);\r\n    }\r\n\r\n    actionOrganizationChart = async () => {\r\n        const {\r\n            areaMethods,\r\n            organizationChartCleanState,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id,\r\n                    AreasId\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            // if(AreasId){\r\n                await areaMethods({areaId: AreasId, organizationChartId: Id}, 'PutAreaTaken')\r\n                //hago taken y hago untaken del area id del organization chart\r\n            // }\r\n            await this.sendAction('PutOrganizationChart');\r\n        }\r\n        if(this.props.organizationChartReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            organizationChartCleanState()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            organizationChartHandleValidation,\r\n            organizationChartHandleChange,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id, \r\n                    PositionId,\r\n                    PersonDetailId,\r\n                    AreasId\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            positionReducer: {\r\n                list_positions\r\n            },\r\n            personalDetailReducer: {\r\n                list_personal_details\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }\r\n\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionOrganizationChart}\r\n                textButton={ 'Guardar Puesto' }\r\n                textButtonLoading={'Guardando Puesto...' }\r\n                validations={validations}\r\n                handleValidations={organizationChartHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Puesto'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PositionId'}\r\n                    placeHolder={'Selecciona un Puesto'}\r\n                    inputValue={PositionId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PositionId}\r\n                    optionPlaceHolder={'Selecciona un Puesto'}\r\n                    options={list_positions}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Empleado'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PersonDetailId'}\r\n                    placeHolder={'Selecciona un Empleado'}\r\n                    inputValue={PersonDetailId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PersonDetailId}\r\n                    optionPlaceHolder={'Selecciona un Empleado'}\r\n                    options={list_personal_details}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Area'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'AreasId'}\r\n                    placeHolder={'Selecciona una Area o Departamento'}\r\n                    inputValue={AreasId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.AreasId}\r\n                    optionPlaceHolder={'Selecciona una Area o Departamento'}\r\n                    options={list_areas}\r\n                /> \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}) => {\r\n    return {organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...positionActions,\r\n    ...personalDetailActions,\r\n    ...areaActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);\r\n","import React  from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { \r\n    FormGroup,\r\n    Input,\r\n    Col\r\n} from 'reactstrap'\r\n\r\nimport {ApiResponses} from '../components-api'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nimport {Collapse} from '../config-components'\r\nimport './style.css'\r\n\r\nclass OrganizationChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.container  = React.createRef();\r\n        this.state = {\r\n          value: ''\r\n        }\r\n      }\r\n\r\n      async componentDidMount() {\r\n        const {\r\n            organizationChartMethods,\r\n            areaMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n        companyId && await areaMethods({companyId: companyId}, 'GetAreasByCompanyIdTaken')\r\n   \r\n       \r\n        this.centerDiagram();\r\n    }\r\n\r\n    \r\n    centerDiagram = () => {\r\n        const element = this.container.current;\r\n        if (element) {\r\n            //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n            element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n        }\r\n    }\r\n\r\n    createOrganigrama =  (organigrama, isOpenAux = false) => {\r\n        let ChartTree1 = organigrama?.ChartTree1\r\n        if(ChartTree1?.length === 0 || ChartTree1 === undefined || !ChartTree1){\r\n            \r\n            return <div>\r\n                    <Collapse.Node \r\n                        positionChartId={organigrama.Id}\r\n                        positionId = {organigrama.PositionId}\r\n                        labelButton={organigrama.PositionName}\r\n                        employee = { organigrama.PersonName}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                        watchChild={() => this.watchChild(organigrama.PositionChartId)}\r\n                        isOpenAux={isOpenAux}\r\n                    />\r\n            </div>\r\n        }\r\n        \r\n        return <Collapse.Node\r\n            positionChartId={organigrama.Id}\r\n            positionId = {organigrama.PositionId}\r\n            labelButton={organigrama.PositionName}\r\n            employee = { organigrama.PersonName}\r\n            area = { organigrama.Area}\r\n            addChild={() => this.addChild(organigrama?.Id)}\r\n            updateNode={() => this.updateNode(organigrama?.Id)}\r\n            watchChild={() => this.watchChild(organigrama.PositionChartId)}\r\n            isFirst={organigrama.PositionChartId}\r\n            isOpenAux={isOpenAux}\r\n        >\r\n            {\r\n                ChartTree1.map((child) => {  \r\n                             \r\n                    return <>\r\n                    \t{this.createOrganigrama(child)}\r\n                    </>\r\n                })\r\n            }\r\n        </Collapse.Node>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addUpChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    getOrganizationChartByArea = async(e) => {\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        value === 'general' ? \r\n            await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId') :\r\n            await organizationChartMethods({companyId, areaId: value},'GetOrganizationChartByArea');\r\n    }\r\n\r\n    watchChild = async(positionChartId) => {\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        await organizationChartMethods({companyId,positionChartId},'GetOrganizationChartByFatherPosition');\r\n    }\r\n\r\n    getCompleteOrganizationChart = async() => {\r\n        const {\r\n            organizationChartMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n    }\r\n\r\n    render () {\r\n\r\n        const { \r\n            organizationChartReducer:{\r\n                data: {Id},\r\n                api_actions: {\r\n                    cargando,\r\n                    error\r\n                }\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }, \r\n            hrefBase\r\n        } = this.props\r\n\r\n        return(\r\n            <div >\r\n               \r\n                <ul className=\"list-inline m-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${hrefBase}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \">\r\n                    \r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => this.getOrganizationChartByArea(e)}>\r\n                                <option value='general' >General</option>\r\n                                {\r\n                                    list_areas.map(area => {\r\n                                      \r\n                                        return <option value={area.Id}>\r\n                                            {area.Name}\r\n                                        </option>\r\n                                    })\r\n                                }\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </li>\r\n                </ul>\r\n               \r\n                {\r\n                    cargando \r\n                        ? \r\n                            <ApiResponses.Loader activate={true}/> \r\n                        :\r\n                    error \r\n                        ? \r\n                            <ApiResponses.Error message={error} />\r\n                        :\r\n                    Id \r\n                        ? \r\n                             \r\n                            <div className='m-4'> \r\n                                {/* <h1>{this.props.organizationChartReducer.data.Area?.Name ? this.props.organizationChartReducer.data.Area?.Name : 'General'}</h1> */}\r\n                                {\r\n                                    this.createOrganigrama(this.props.organizationChartReducer.data, true)\r\n                                }\r\n                            </div>\r\n                            \t\r\n                        : \r\n                            <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                        \r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer, areaReducer}) => {\r\n    return {organizationChartReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...areaActions\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","import ComponentOrganizationChart from './OrganizationChart'\r\nimport ComponentUpdateChild from './UpdateChild'\r\nimport ComponentViewOrganizationChart from './ViewOrganizationChart'\r\nimport ComponentReadChild from './ReadChild'\r\n\r\nexport const OrganizationChart = ComponentOrganizationChart;\r\nexport const UpdateChild = ComponentUpdateChild;\r\nexport const ViewOrganizationChart = ComponentViewOrganizationChart;\r\nexport const ReadChild = ComponentReadChild;","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\n\r\nimport {Tabs} from '../config-components'\r\n\r\nconst ReadChild = ({positionChartId, tab}) => {\r\n    debugger\r\n    const organizationChartReducer = useSelector(state => state.organizationChartReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { read_child } = organizationChartReducer;\r\n    useEffect(() => {\r\n        dispatch(organizationChartActions.organizationChartMethods({positionChartId},'GetPositionFromOrganization', 'loading-child'))\r\n        // return () => {\r\n        //     dispatch(organizationChartActions.organizationChartCleanState());\r\n        // }\r\n    }, [dispatch, positionChartId])\r\n\r\n    let arrayDeCadenas;\r\n    if(read_child.Responsibilities){\r\n        arrayDeCadenas = read_child.Responsibilities.split('-');\r\n        arrayDeCadenas.splice(0, 1);\r\n    } \r\n\r\n    let arrayDeCadenas2;\r\n    if(read_child.Competencias){\r\n        arrayDeCadenas2 = read_child.Competencias.split('-');\r\n        arrayDeCadenas2.splice(0, 1);\r\n    } \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Tabs.Tabs tab={tab}\r\n                children1={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Puesto:</div>\r\n                            <div className={'text-muted'}>{read_child.PositionName}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Responsabilidades:</div>\r\n                            <ul>\r\n                                {arrayDeCadenas ? arrayDeCadenas.map(item => {\r\n                                    return (\r\n                                            <li className='text-muted'>{item}</li>\r\n                                        )\r\n                                    }    \r\n                                ) : 'No hay responsabilidades asignadas a este puesto.'}\r\n                            </ul>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Competencias:</div>\r\n                            <ul>\r\n                                {arrayDeCadenas2 ? arrayDeCadenas2.map(item => {\r\n                                    return (\r\n                                            <li className='text-muted'>{item}</li>\r\n                                        )\r\n                                    }    \r\n                                ) : 'No hay competencias asignadas a este puesto.'}\r\n                            </ul>\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                            <div className={'font-weight-bold'}>Puntos: <span  className={'text-muted'}>{read_child.Puntos ? read_child.Puntos: 0}</span></div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                children2={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>nombre:</div>\r\n                            <div className={'text-muted'}>{read_child.PersonName}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Sexo:</div>\r\n                            <div className={'text-muted'}>{read_child.Sexo}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Fecha de nacimiento:</div>\r\n                            <div className={'text-muted'}>{read_child.Birthdate}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>RFC:</div>\r\n                            <div className={'text-muted'}>{read_child.RFC}</div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                children3={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Fecha de admisión:</div>\r\n                            <div className={'text-muted'}>{read_child.DateAdmission}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Contrato:</div>\r\n                            <div className={'text-muted'}>{read_child.Contract}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Beneficios:</div>\r\n                            <div className={'text-muted'}>{read_child.Benefits}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Salario diario:</div>\r\n                            <div className={'text-muted'}>{read_child.DailySalary}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Salario Integrado:</div>\r\n                            <div className={'text-muted'}>{read_child.IntegratedSalary}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Tipo:</div>\r\n                            <div className={'text-muted'}>{read_child.Type}</div>\r\n                        </div>\r\n                    </>\r\n                }\r\n            ></Tabs.Tabs>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadChild;","import React, { useState } from 'react';\r\nimport { \r\n  Collapse, \r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card, \r\n  CardBody \r\n} from 'reactstrap';\r\nimport {ReadChild} from '../components-organization-chart'\r\nimport {Tabs} from '../config-components'\r\n\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Modals = ({positionChartId, children, tab}) => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <>\r\n      <span role=\"button\" onClick={toggle}>{children}</span>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Información</ModalHeader>\r\n        <ModalBody>\r\n          <ReadChild positionChartId={positionChartId} tab={tab} />\r\n        </ModalBody>\r\n        {/* <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{''}\r\n          <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n        </ModalFooter> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst CollapseSection = ({\r\n  title = 'Sección',\r\n  countVideos = '0',\r\n  videos = [],\r\n  time = '30 min'\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n        <div onClick={toggle} className=\"d-flex bg-light border-bottom pointer p-3\">\r\n            <div className=\"flex-grow-1\">\r\n                <p className=\"font-weight-bold mb-0\">{title}</p>\r\n                <small>{countVideos} | {time}</small>\r\n            </div>\r\n            <div>\r\n                <FaIcons.FaChevronDown />\r\n            </div>\r\n        </div>\r\n      <Collapse isOpen={isOpen} className=\"p-3\">\r\n        {\r\n          videos.map((video, i ) => {\r\n            return (\r\n              <div className=\"d-flex mb-3\">\r\n                  {/*   <div className=\"mr-3\">\r\n                      <input type=\"checkbox\" class=\"\" id=\"\" />\r\n                  </div> */}\r\n                  <div>\r\n                      <p className=\"mb-0\">{`${i+1}. ${video.Name}`}</p>\r\n                      <small className=\"text-muted\"><FaIcons.FaPlayCircle className=\"mr-2\" /> 5 min</small>\r\n                  </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollapseSection;\r\n\r\n\r\n\r\nexport const Node = ({\r\n  isFirst, \r\n  children,\r\n  area,\r\n  labelButton,\r\n  employee,\r\n  addChild,\r\n  updateNode,\r\n  deleteChild,\r\n  positionId,\r\n  name,\r\n  positionChartId,\r\n  watchChild,\r\n  isOpenAux = false\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(isOpenAux);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const rArea = area ? area : '';\r\n  return (\r\n    <div>\r\n      <Card className='card-left mb-2 mr-0 pr-0'>\r\n        <CardBody className='mr-0 pr-0'>\r\n          <div className={'mr-0'}>\r\n            <small>\r\n            {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n            </small>\r\n            <div className='d-flex my-2'>\r\n            \t<div></div>\r\n            \t<div onClick={toggle} className='font-weight-bold  mb-2 pointer mr-2' style={{textAlign: 'start'}}>\r\n                {\r\n                  !isOpen ? \r\n                    <FaIcons.FaChevronCircleRight  className=\"mr-1  text-muted\" /> : \r\n                    <FaIcons.FaChevronCircleDown className=\"mr-1 text-primary\" /> \r\n                }\r\n            \t</div>\r\n                <div  className='text-dark font-weight-bold text-start  mr-5' style={{textAlign: 'start'}}>\r\n                  <Modals positionChartId={positionChartId} tab={\"1\"} modalTitle={name} name={name} >\r\n                    {labelButton}\r\n                  </Modals>\r\n                </div>\r\n              <div className='text-dark text-start mr-5' style={{textAlign: 'start'}}>\r\n                <Modals positionChartId={positionChartId} tab={\"2\"} modalTitle={name} name={name} >\r\n                  {employee ? employee :'Empleado'}\r\n                </Modals>\r\n              </div> \r\n              <div className='mr-2'>\r\n                {\r\n                  isFirst !== null ?\r\n                  <FaIcons.FaEye  className=\"text-secondary\" onClick={watchChild} /> : \r\n                  ''\r\n                }\r\n              </div>\r\n              <div className='mr-2'>\r\n                  <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n              </div>\r\n              <div className='mr-2'>\r\n                  <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n              </div>\r\n              <div className='mr-2'>\r\n                  {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n              </div>\r\n                \r\n            </div>\r\n            <Collapse isOpen={isOpen}>\r\n              \r\n                {children}\r\n               \r\n            </Collapse>\r\n          </div>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const A = ({\r\n    href='', \r\n    target='_blank', \r\n    className='',\r\n    children\r\n}) => {\r\n    return (\r\n        <a href={href} target={target} className={className}>{children} </a>\r\n    )\r\n}\r\n\r\nexport const AWhatsapp = ({phone, message,  target='_blank', children, className}) => {\r\n    return(\r\n        <A\r\n            href={`https://api.whatsapp.com/send?phone=${phone}&text=${message}`}\r\n            target={target}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </A>\r\n    )\r\n}","import * as ComponentCards from './Cards'\r\nimport * as ComponentDropDowns from './DropDowns'\r\nimport * as ComponentFilter from './Filter'\r\nimport * as ComponentInputs from './Inputs'\r\nimport * as ComponentModals from './Modals'\r\nimport * as ComponentNavbars from './Navbars'\r\nimport * as ComponentNotFound from './NotFound'\r\nimport * as ComponentRegularExpressions from './RegularExpressions'\r\nimport * as ComponentTabs from './Tabs'\r\nimport * as ComponentLogos from './Logos'\r\nimport * as ComponentLists from './Lists'\r\nimport * as ComponentCollapse from './Collapse'\r\nimport {A as Anchor, AWhatsapp as AnchorWhatsapp} from './ExternalLinks'\r\n\r\nexport const Logos = ComponentLogos;\r\nexport const Cards = ComponentCards;\r\nexport const DropDowns = ComponentDropDowns;\r\nexport const Filter = ComponentFilter;\r\nexport const Inputs = ComponentInputs;\r\nexport const Modals = ComponentModals;\r\nexport const Navbars = ComponentNavbars;\r\nexport const NotFound = ComponentNotFound;\r\nexport const Lists = ComponentLists;\r\nexport const RegularExpressions = ComponentRegularExpressions;\r\nexport const Tabs = ComponentTabs;\r\nexport const Collapse = ComponentCollapse\r\nexport const A = Anchor;\r\nexport const AWhatsapp = AnchorWhatsapp;\r\n","export default __webpack_public_path__ + \"static/media/hero-xs.fab06da0.png\";","export default __webpack_public_path__ + \"static/media/vscode.a1907119.svg\";","// Imports de react.\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, } from 'reactstrap';\r\n\r\n// Imports de config-components.\r\nimport {Navbars} from '../../config-components/Navbars'\r\n\r\nimport { A, AWhatsapp } from '../../config-components'\r\n// } from 'components-links'\r\n\r\n// Imports de assets.\r\nimport Heroxs from '../../img/hero-xs.png'\r\nimport { ImgOrganigrama, ImgPuestos, ImgDescripciones, ImgProcesos} from '../../img'\r\nimport WebApps from '../../img/vscode.svg'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div>\r\n        <Navbars />\r\n        <section id=\"hero\" className=\"bg-light d-flex py-6\">\r\n            <Container className=\"align-self-center\">\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        \r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <h1 className=\"display-4 font-weight-bold mb-3\">Somos expertos en Organización de empresas</h1>\r\n                        <p className=\"text-muted mb-4\">Creamos la Organización en tu empresa con las mejores herramientas tecnologicas, tenemos más de 40 años de experiencia</p>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <img src={Heroxs} className=\"img-fluid d-block d-md-none mt-5\" />\r\n            </Container>\r\n        </section>\r\n\r\n        <section className='bg-light-2'>\r\n            <Container>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgOrganigrama className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Organigrama<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Una buena implementación de la Organización es conocer en detalle los roles que ejercen tus colaboradores.</p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Puestos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos los puestos de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgPuestos src={WebApps} className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgDescripciones className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Perfiles<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Define claramente tus procesos y logra sitematizarlos</p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Procesos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos las posiciones de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgProcesos className=\"img-fluid rounded my-4\" />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>  \r\n         \r\n        {/* <section className=\"py-6\">\r\n            <Container>\r\n                <div className=\"tab-container bg-light py-4 px-5\">\r\n                    <Example />\r\n                </div>\r\n            </Container>\r\n        </section>    */}\r\n       \r\n        <section className=\"py-7\">\r\n            <Container>\r\n                <div className=\"w-75 mx-auto text-center mb-5\">\r\n                    <p className=\"lead text-muted\">Dedícate a producir y vender, mientras nosotros organizamos tu empresa.</p>\r\n                    <button className=\"btn btn-primary\">\r\n                        <AWhatsapp \r\n                            phone='+525533333279' \r\n                            message={`Hola, Quiero más información`} \r\n                            className=\"text-white\"\r\n                        >Contáctanos </AWhatsapp>\r\n                    </button>\r\n                    \r\n                </div>\r\n            </Container>\r\n        </section>\r\n        <footer className=\"py-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"list-inline-item mr-5\"><Link class=\"text-dark\" ><FaIcons.FaLinkedin className=\"text-dark mr-1\" /> Linkedin</Link></li>\r\n                            \r\n                        </ul>\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"text-right\">\r\n                        <p>© Version 4 2020. Derechos Reservados.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {  Card, CardBody, Badge  } from 'reactstrap';\r\n// Imports de assets.\r\nimport {ImgProduct} from '../img'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ReadCardProduct = ({uri, name='', description='', categories}) => {\r\n    return(\r\n        <Card className=\"border-0 mb-4\">\r\n            <CardBody>\r\n                <ImgProduct uri={uri} className=\"img-fluid rounded mb-3\"/>\r\n                <div className=\"mb-3\">\r\n                    {categories?.length > 0 ? \r\n                        categories.map(category => {\r\n                            return <Badge color=\"light\" className=\"mr-2\">{category.Name}</Badge>\r\n                        })  : ''  \r\n                    }\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"icon-card d-flex bg-light align-self-center mr-3\">\r\n                        <FaIcons.FaShoppingCart className=\"align-self-center mx-auto\" />\r\n                    </div>\r\n                    <div>\r\n                        <h5>{name}</h5>\r\n                        <h6>{description}</h6>\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReadCardProduct;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_CARGANDO = \"product_cargando\";\r\nexport const PRODUCT_ERROR = \"product_error\";\r\nexport const PRODUCT_HANDLE_CHANGE = \"product_handle_change\";\r\nexport const PRODUCT_CLEAN_STATE = \"product_clean_state\";\r\nexport const PRODUCT_CRUD = \"product_crud\";\r\nexport const PRODUCTS_LIST = \"products_list\";\r\nexport const PRODUCT_HANDLE_VALIDATION = \"product_handle_validation\";\r\n\r\n\r\nexport const GetProducts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Products`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProductsByCategoryId = async(data)=> {\r\n    debugger\r\n    const  answer = await axios_api(\r\n        `api/ProductsByCategoryId?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const PutProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}${data.includeBlobs ? ``:``}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_put'};\r\n}\r\n\r\nexport const PostProduct = async(data)=> {\r\n    const  answer = await axios_api(\"api/Product\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const DeleteProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\n\r\n","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_HANDLE_VALIDATION, \r\n    GetProducts,\r\n    GetProductsByCategoryId,\r\n    GetProduct,\r\n    PutProduct,\r\n    PostProduct,\r\n    DeleteProduct\r\n  } from \"./productTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProducts\":\r\n          answer = await GetProducts(); \r\n          break;\r\n\r\n        case 'GetProductsByCategoryId':\r\n          answer = await GetProductsByCategoryId(data); \r\n          break\r\n\r\n        case \"GetProduct\":\r\n          answer = await GetProduct(data);\r\n          break;\r\n\r\n        case \"PutProduct\":\r\n          answer = await PutProduct(data);\r\n          break;\r\n\r\n        case \"PostProduct\":\r\n          answer = await PostProduct(data);\r\n          break;\r\n        \r\n        case \"DeleteProduct\":\r\n          answer = await DeleteProduct(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\n\r\n\r\nconst CardProduct = () => {\r\n    const { productId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n\r\n    const { data:{\r\n        Id,\r\n        Name,\r\n        Description,\r\n        Blobs,\r\n        fileCover,\r\n        Categories\r\n    } } = productReducer;\r\n\r\n    useEffect(() => {\r\n        productId && dispatch(productActions.productMethods({Id: productId}, 'GetProduct'))\r\n    }, [dispatch, productId, Id])\r\n\r\n    const blobProduct = Blobs.filter(el => el.BlobTypeId === 2 )\r\n    return (\r\n        <>\r\n            <ReadCardProduct uri={fileCover ? URL.createObjectURL(fileCover[0]) : blobProduct[0]?.Uri} name={Name} description={Description} categories={Categories}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardProduct;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Col} from 'reactstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\nconst ListOfCardProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n    const { list_products } = productReducer;\r\n    useEffect(() => {\r\n        list_products.length < 1 && dispatch(productActions.productMethods('', 'GetProducts'))\r\n    }, [dispatch, list_products ])\r\n    return (\r\n        <>\r\n            {\r\n                list_products.map(product => {\r\n                    const blobProduct = product.Blobs.filter(el => el.BlobTypeId === 1 )\r\n                    return (\r\n                        <Col lg='4'>\r\n                            <ReadCardProduct uri={blobProduct[0]?.Uri} name={product.Name} description={product.Description} />\r\n                        </Col>\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCardProducts;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\nimport { Modals} from '../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de actions.\r\nimport * as productActions from './reducer/productActions'\r\nconst ListOfCategories = ({title = 'Productos',reDirect, categoryProductId}) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const productReducer = useSelector(state => state.productReducer)\r\n\r\n    const {\r\n        data: {\r\n            Id,\r\n            Name\r\n        },\r\n        api_actions: {cargando, error},\r\n        list_products\r\n    } = productReducer;\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(categoryProductId) {\r\n            dispatch(productActions.productMethods({Id: categoryProductId},'GetProductsByCategoryId'))\r\n        } else {\r\n            dispatch(productActions.productMethods('','GetProducts'))\r\n        }\r\n    }, [dispatch, categoryProductId])\r\n\r\n    const getProduct = (idProduct) => {\r\n        history.push(`${reDirect}/${idProduct}`)\r\n    }\r\n\r\n    const openDeleteModal = async(idProduct) => {\r\n        await dispatch(productActions.productMethods({Id: idProduct},'GetProduct'));\r\n    }\r\n\r\n    const deleteProduct = async() => {\r\n        await dispatch(productActions.productMethods({Id},'DeleteProduct'));\r\n        dispatch(productActions.productCleanState());\r\n        await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    const cleanProduct = async(cancel) => {\r\n        await dispatch(productActions.productCleanState());\r\n        !cancel && await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n        <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n        <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{title}</small></li>\r\n    </ul>\r\n            {Id \r\n                ?  <Modals.ModalOpenDelete \r\n                        content={`Se eliminara el siguiente producto: \"${Name}\" con Id: #${Id}`}\r\n                        modalTitle={`Eliminar Producto ${Name}`}\r\n                        action={deleteProduct}\r\n                        clean={cleanProduct}\r\n                    />\r\n                : ''\r\n            }\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Nombre','Descripción','Acciones']}\r\n                propertiesTable={['Id','Name','Description']}\r\n                hrefCreate={'/admin-dashboard/create-product'}\r\n                bodyTable={list_products}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Producto', handleAction: getProduct },\r\n                    {action: 'Eliminar Producto', handleAction: openDeleteModal }\r\n                ]}\r\n            />\r\n        </>\r\n    )   \r\n}\r\n\r\nexport default ListOfCategories;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const CATEGORY_CARGANDO = \"category_cargando\";\r\nexport const CATEGORY_ERROR = \"category_error\";\r\nexport const CATEGORY_HANDLE_CHANGE = \"category_handle_change\";\r\nexport const CATEGORY_CLEAN_STATE = \"category_clean_state\";\r\nexport const CATEGORY_CRUD = \"category_crud\";\r\nexport const CATEGORIES_LIST = \"categories_list\";\r\nexport const CATEGORY_HANDLE_VALIDATION = \"category_handle_validation\";\r\n\r\nexport const GetCategories = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Categories`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: CATEGORIES_LIST};\r\n}\r\n\r\nexport const GetCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const PutCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'put_category'};\r\n}\r\n\r\nexport const PostCategory = async(data)=> {\r\n    const answer = await axios_api(\"api/Category\", true, \"post\", data);\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const DeleteCategory = async(data)=> {\r\n    const answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_HANDLE_VALIDATION,\r\n    GetCategories,\r\n    GetCategory,\r\n    PutCategory,\r\n    PostCategory,\r\n    DeleteCategory,\r\n  } from \"./categoryTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCategories\":\r\n          answer = await GetCategories();\r\n          break;\r\n\r\n        case \"GetCategory\":\r\n          answer = await GetCategory(data);\r\n          break;\r\n\r\n        case \"PutCategory\":\r\n          answer = await PutCategory(data);\r\n          break;\r\n\r\n        case \"PostCategory\":\r\n          answer = await PostCategory(data);\r\n          break;\r\n        \r\n        case \"DeleteCategory\":\r\n          answer = await DeleteCategory(data)\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import ComponentCardProduct from './CardProduct'\r\nimport ComponentListOfCardProducts from './ListOfCardProducts'\r\nimport ComponentListOfProducts from './ListOfProducts'\r\nimport ComponentAddCategories from './AddCategories'\r\n\r\nexport const CardProduct = ComponentCardProduct;\r\nexport const ListOfCardProducts = ComponentListOfCardProducts;\r\nexport const ListOfProducts = ComponentListOfProducts;\r\nexport const AddCategories = ComponentAddCategories;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {Container, Row} from 'reactstrap'\r\nimport {Navbars} from '../../config-components' \r\nimport {ListOfCardProducts} from '../../components-product'\r\n\r\nconst LandingProducts = () => {\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <section className=\"bg-light py-6\">\r\n                <Container>\r\n                    <Row>\r\n                    <ListOfCardProducts />\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingProducts;\r\n","import LandingSoftwareAgency from './SoftwareAgency'\r\nimport LandingProducts from './Products'\r\nimport LandingCourses from './Courses'\r\n\r\nexport const SoftwareAgency = LandingSoftwareAgency;\r\nexport const Products = LandingProducts;\r\nexport const Courses = LandingCourses;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { Container } from 'reactstrap'\r\n\r\n// Imports de config-components\r\nimport {NotFound} from '../config-components/NotFound'\r\nimport {Navbars} from '../config-components/Navbars'\r\n\r\n\r\nexport const NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <Navbars />\r\n            <div className=\"bg-light py-6\">\r\n                <Container>\r\n                    <NotFound />\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","export const LOGIN_CARGANDO = \"login_cargando\";\r\nexport const LOGIN_ERROR = \"login_error\";\r\nexport const LOGIN_HANDLE_CHANGE = \"login_handle_change\";\r\nexport const LOGIN_CLEAN_STATE = \"login_clean_state\";\r\nexport const LOGIN_USER = \"login_user\";\r\nexport const LOGIN_HANDLE_VALIDATION = \"login_handle_validation\";\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION,\r\n} from \"./loginTypes\";\r\n\r\nimport {\r\n  axios_api,\r\n  errorHandler,\r\n  setLocalStorage,\r\n} from \"../../components-api/ConfigApi\";\r\n\r\n/*\r\n *Metodo para serializar un objeto\r\n */\r\nconst parserJson = (obj) => {\r\n  var jsonSerialize = \"\";\r\n  for (const prop in obj) {\r\n    jsonSerialize += prop + \"=\" + obj[prop] + \"&\";\r\n  }\r\n  jsonSerialize = jsonSerialize.slice(0, -1);\r\n  return jsonSerialize;\r\n};\r\n\r\nexport const loginHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const loginHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const loginCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const loginMethods = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CARGANDO,\r\n  });\r\n  try {\r\n    setLocalStorage();\r\n    const object = parserJson(data);\r\n    const answer = await axios_api(\"Token\", false, \"post\", object);\r\n    setLocalStorage(answer);\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    \r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: LOGIN_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const COMPANY_CARGANDO = \"company_cargando\";\r\nexport const COMPANY_ERROR = \"company_error\";\r\nexport const COMPANY_HANDLE_CHANGE = \"company_handle_change\";\r\nexport const COMPANY_CLEAN_STATE = \"company_clean_state\";\r\nexport const COMPANY_CRUD = \"company_crud\";\r\nexport const COMPANIES_LIST = \"companies_list\";\r\nexport const COMPANY_HANDLE_VALIDATION = \"company_handle_validation\";\r\n\r\nexport const GetCompanies = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Companies`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\nexport const GetCompaniesByUser = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/CompaniesByUser`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\n\r\nexport const GetCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const PutCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'company_put'};\r\n}\r\n\r\nexport const PostCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const DeleteCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_HANDLE_VALIDATION, \r\n    GetCompanies,\r\n    GetCompany,\r\n    PutCompany,\r\n    PostCompany,\r\n    DeleteCompany,\r\n    GetCompaniesByUser\r\n  } from \"./companyTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const companyHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const companyHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const companyCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const companyMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCompanies\":\r\n          answer = await GetCompanies(); \r\n          break;\r\n        case \"GetCompaniesByUser\":\r\n          answer = await GetCompaniesByUser(); \r\n          break;\r\n\r\n        case \"GetCompany\":\r\n          answer = await GetCompany(data);\r\n          break;\r\n\r\n        case \"PutCompany\":\r\n          answer = await PutCompany(data);\r\n          break;\r\n\r\n        case \"PostCompany\":\r\n          answer = await PostCompany(data);\r\n          break;\r\n        \r\n        case \"DeleteCompany\":\r\n          answer = await DeleteCompany(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport { RE_EMPTY } from \"../config-components/RegularExpressions\";\r\nimport {InputEmail, InputPassword, Form1} from '../config-components/Inputs'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as loginActions from \"./reducer-login/loginActions\";\r\nimport * as companyActions from \"../components-company/reducer/companyActions\";\r\nclass LoginForm extends Component {\r\n  ActionLogin = async () => {\r\n    const {\r\n      loginMethods,\r\n      companyMethods,\r\n      loginReducer: {\r\n        data: { grant_type, username, password },\r\n      },\r\n    } = this.props;\r\n    const ModelLogin = {\r\n      grant_type: grant_type,\r\n      username: username,\r\n      password: password,\r\n    };\r\n    await loginMethods(ModelLogin);\r\n    if (this.props.loginReducer.data.access_token) {\r\n      if (localStorage.getItem(\"role\") === \"Admin\") {\r\n        window.open(`/admin-dashboard`, \"_self\");\r\n      }\r\n      if (localStorage.getItem(\"role\") === \"User\") {\r\n        await companyMethods('', 'GetCompaniesByUser')\r\n        const { list_companies} = this.props.companyReducer;\r\n        debugger\r\n        window.open(`/user-dashboard/company/${list_companies[0].Id}`, \"_self\");\r\n      }\r\n      if (!localStorage.getItem(\"role\")) {\r\n        window.open(`/`, \"_self\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRedirect = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/sign-up\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loginHandleValidation,\r\n      loginHandleChange,\r\n      loginReducer: {\r\n        data: { username, password },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Form1\r\n          loading={cargando}\r\n          error={error}\r\n          action={this.ActionLogin}\r\n          textButton={'Iniciar Sesión'}\r\n          textButtonLoading={'Iniciando sesión...'}\r\n          validations={validations}\r\n          handleValidations={loginHandleValidation}\r\n        >\r\n          <InputEmail  \r\n            name='username'\r\n            inputValue={username}\r\n            onChange={loginHandleChange} \r\n            label='Nombre de usuario o correo'\r\n            RE={RE_EMPTY}\r\n            validateRE={validations.username}\r\n          />\r\n          <InputPassword\r\n            inputValue={password}\r\n            onChange={loginHandleChange}\r\n            validateRE={validations.password}\r\n            forgotPassword={true}\r\n          />\r\n        </Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ loginReducer, companyReducer }) => {\r\n  return { loginReducer, companyReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...loginActions,\r\n  ...companyActions\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","export const SIGN_UP_CARGANDO = \"sign_up_cargando\";\r\nexport const SIGN_UP_ERROR = \"sign_up_error\";\r\nexport const SIGN_UP_HANDLE_CHANGE = \"sign_up_handle_change\";\r\nexport const SIGN_UP_CLEAN_STATE = \"sign_up_clean_state\";\r\nexport const SIGN_UP_USER = \"sign_up_user\";\r\nexport const SIGN_UP_HANDLE_VALIDATION = \"sign_up_handle_validation\";\r\nexport const SIGN_UP_PRELOADED_DATA = \"sign_up_preloaded_data\";\r\n\r\n\r\n","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const signUpHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const signUpHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const signUpCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const signUpPreloadedData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_PRELOADED_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n\r\n\r\nexport const signUpMethods = (data, token) => async (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CARGANDO,\r\n  });\r\n  try {\r\n    const answer = await axios_api(\"api/Account/Register\", token, \"post\", data);\r\n    dispatch({\r\n      type: SIGN_UP_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: SIGN_UP_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../config-components';\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as signUpActions from \"./sign-up-reducer/signUpActions\";\r\n\r\nclass SignUp extends Component {\r\n  componentDidMount() {\r\n    this.props.signUpReducer.data.Roles = this.props.role;\r\n  }\r\n  action = async () => {\r\n    const {\r\n      signUpMethods,\r\n      signUpCleanState,\r\n      signUpReducer: {\r\n        data: {\r\n          UserName,\r\n          Email,\r\n          PhoneNumber,\r\n          Password,\r\n          ConfirmPassword,\r\n          ValidateByPhoneOrEmail,\r\n          Roles,\r\n          TypeUser\r\n        },\r\n      },\r\n      role,\r\n      reDirect,\r\n      history,\r\n      token\r\n    } = this.props;\r\n\r\n    const ModelSignUp = {\r\n      UserName: UserName,\r\n      Email: Email,\r\n      PhoneNumber: PhoneNumber,\r\n      Password: Password,\r\n      ConfirmPassword: ConfirmPassword,\r\n      ValidateByPhoneOrEmail: ValidateByPhoneOrEmail,\r\n      Roles: Roles,\r\n      TypeUser: TypeUser\r\n    };\r\n\r\n    await signUpMethods(ModelSignUp, token);\r\n   \r\n    if (this.props.signUpReducer.data.Id) {\r\n        role === 'User' \r\n        ? history.push(`${reDirect}/${this.props.signUpReducer.data.Id}`)\r\n        : history.push(reDirect) \r\n        signUpCleanState();\r\n           \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      signUpHandleChange,\r\n      signUpHandleValidation,\r\n      signUpReducer: {\r\n        data: { UserName, Email, Password, ConfirmPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      }\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${Password}$`)\r\n    return (\r\n       <>\r\n            <Inputs.Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.action}\r\n                textButton={'Registrar'}\r\n                textButtonLoading={'Registrando ...'}\r\n                validations={validations}\r\n                handleValidations={signUpHandleValidation}\r\n            >\r\n                <Inputs.InputEmail \r\n                    inputValue={Email}\r\n                    onChange={signUpHandleChange} \r\n                    validateRE={validations.Email}\r\n                />\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre de usuario'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'UserName'}\r\n                    placeHolder={'Introduce un nombre de usuario'}\r\n                    inputValue={UserName}\r\n                    onChange={signUpHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.UserName}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={Password}\r\n                    onChange={signUpHandleChange}\r\n                    validateRE={validations.Password}\r\n                    inputName={'Password'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmPassword}\r\n                    onChange={signUpHandleChange}\r\n                    inputName={'ConfirmPassword'}\r\n                    validateRE={validations.ConfirmPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ signUpReducer }) => {\r\n  return { signUpReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...signUpActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import { axios_api } from \"../../../components-api/ConfigApi\";\r\n\r\nexport const CHANGE_PASSWORD_CARGANDO = \"change_password_cargando\";\r\nexport const CHANGE_PASSWORD_ERROR = \"change_password_error\";\r\nexport const CHANGE_PASSWORD_HANDLE_CHANGE = \"change_password_handle_change\";\r\nexport const CHANGE_PASSWORD_CLEAN_STATE = \"change_password_clean_state\";\r\nexport const CHANGE_PASSWORD_USER = \"change_password_user\";\r\nexport const CHANGE_PASSWORD_HANDLE_VALIDATION = \"change_password_handle_validation\";\r\n\r\nexport const SetPassword = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/SetPassword`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type:'set_password_put'};\r\n}\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n    SetPassword\r\n  } from \"./changePasswordTypes\";\r\n  \r\n  import {\r\n    axios_api,\r\n    errorHandler,\r\n  } from \"../../../components-api/ConfigApi\";\r\n   \r\n  export const changePasswordHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const changePasswordHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CARGANDO,\r\n    });\r\n    try {\r\n      \r\n      let answer;\r\n      let type = CHANGE_PASSWORD_USER;\r\n      switch(method){\r\n        case 'send_email_code':\r\n            let route = `api/Account/SendVerificationCode?phoneOrEmail=${data.phoneOrEmail}&usernameOrEmailOrPhoneNumber=${data.phoneOrEmail}`\r\n            answer= await axios_api( route, false, \"get\");\r\n            break;\r\n        case 'change_password':\r\n            answer= await axios_api( `/api/Account/ResetPassword`, false, \"post\", data);\r\n            break;\r\n        case 'SetPassword' :\r\n            answer= await SetPassword(data)\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n      \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePassword extends Component {\r\n  action = async () => {\r\n    \r\n    const {\r\n      changePasswordMethods, \r\n      changePasswordReducer: { \r\n        data: {\r\n          NewPassword,\r\n          ConfirmNewPassword,\r\n        }\r\n      },\r\n      code,\r\n      email,\r\n      history,\r\n      reDirect\r\n      } = this.props;\r\n\r\n    const modelChangePassword = {\r\n      phoneOrEmail: email,\r\n      Code: code,\r\n      NewPassword: NewPassword,\r\n      ConfirmNewPassword: ConfirmNewPassword,\r\n      usernameOrEmailOrPhoneNumber: email\r\n    }\r\n    await changePasswordMethods(modelChangePassword, 'change_password')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { Code,\r\n          NewPassword,\r\n          ConfirmNewPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n      code\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.action}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Código'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce tu código'}\r\n                    inputValue={code ? code : Code}\r\n                    onChange={changePasswordHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.Code}\r\n                    readonly\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePasswordForUser extends Component {\r\n  actionChangePasswordForUser = async () => {\r\n    const { changePasswordMethods, userId, changePasswordReducer: {data:{ NewPassword,  ConfirmNewPassword}} } = this.props;\r\n    await changePasswordMethods({NewPassword,  ConfirmPassword: ConfirmNewPassword, UserId: userId},'SetPassword');\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: {\r\n            NewPassword,\r\n            ConfirmNewPassword },\r\n            validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.actionChangePasswordForUser}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    textLabel = 'Repite la contraseña'\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordForUser);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass SendEmail extends Component {\r\n  action = async () => {\r\n    const {changePasswordMethods,\r\n        history,\r\n        reDirect\r\n      } = this.props;\r\n     let email =  this.props.changePasswordReducer.data.phoneOrEmail;\r\n    await changePasswordMethods({phoneOrEmail: email}, 'send_email_code')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { phoneOrEmail },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Inputs.Form1\r\n           loading={cargando}\r\n           error={error}\r\n           action={this.action}\r\n           textButton={'Continuar'}\r\n           textButtonLoading={'Enviando Email...'}\r\n           validations={validations}\r\n           handleValidations={changePasswordHandleValidation}\r\n        >\r\n          <Inputs.InputEmail  \r\n            name='phoneOrEmail'\r\n            inputValue={phoneOrEmail}\r\n            onChange={changePasswordHandleChange} \r\n            label='Correo'\r\n            RE={RegularExpressions.RE_EMAIL}\r\n            validateRE={validations.phoneOrEmail}\r\n          />\r\n        </Inputs.Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SendEmail);\r\n","import ComponentLogin from './Login'\r\nimport ComponentSignUp from './SignUp'\r\nimport ComponentChangePassword from './change-password/ChangePassword'\r\nimport ComponentChangePasswordForUser from './change-password/ChangePasswordForUser'\r\nimport ComponentVerifyAccount from './change-password/VerifyAccount'\r\nimport ComponentSendEmail from './change-password/SendEmail'\r\n\r\nexport const Login = ComponentLogin;\r\nexport const SignUp = ComponentSignUp;\r\nexport const ChangePassword = ComponentChangePassword;\r\nexport const VerifyAccount = ComponentVerifyAccount;\r\nexport const SendEmail = ComponentSendEmail;\r\nexport const ChangePasswordForUser = ComponentChangePasswordForUser;\r\n","// Imports de react.\r\nimport React from 'react';\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Container, \r\n    Card, \r\n    CardBody,\r\n} from 'reactstrap';\r\nimport {Logos, Navbars} from '../../config-components'\r\n\r\n\r\n\r\n// Imports de sessión components\r\nimport {Login, SendEmail, ChangePassword, SignUp} from '../../components-session'\r\n\r\nconst LayoutSection = ({children, message='',classSection='', classContainer='', classLogo= '', classCard='', classCardBody = ''}) =>{\r\n    return (\r\n        <section className={classSection}>\r\n            <Container className={ classContainer}>\r\n                <Card className={classCard}>\r\n                    <CardBody className={classCardBody}>\r\n                        {children} \r\n                        {message}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        {/* <h4 className=\"font-weight-bold mb-4\">Iniciar sesión</h4>      */}\r\n                        <Login />   \r\n                        {/* <p className=\"text-center mb-0\">¿No tienes una cuenta? <Link to='/sign-up'>Crea una cuenta</Link></p> */}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ForgotPassword = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-0\">Restablecer contraseña</h4>     \r\n                        <p className=\"text-muted\">Ingresa el email que tienes registrado</p>\r\n                        <SendEmail\r\n                            history={history}\r\n                            reDirect='/check-your-account'\r\n                        />   \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const CheckYourAccount = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Revisa tu correo</h4>     \r\n                        <p className=\"text-muted\">Te hemos enviado código a tu email, si no \r\n                            lo ves en tu bandeja de entrada, revisa en spam y correos no deseados.</p> \r\n                        <Link to=\"/login\"  className=\"btn btn-primary w-100\">Iniciar sesión</Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ChangePasswordPage = () => {\r\n    const {code, email} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Restablecer Contraseña</h4>    \r\n                        <p className=\"text-muted mb-4\">Ingresa el email que tienes registrado</p>\r\n                        <ChangePassword reDirect='/login' code={code} email={email} history={history}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const SignUpPage = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <LayoutSection\r\n                classSection='bg-light h-100 py-6 mt-5'\r\n                classCard='mx-auto card-form border-0'\r\n                message={\r\n                    <p className=\"text-center mb-0\">¿Ya tienes una cuenta? <Link to='/login'>Inicia Sesión</Link></p>\r\n                }\r\n            >\r\n                <h4 className=\"font-weight-bold mb-4\">Registrate</h4>     \r\n                <SignUp history={history} role='User' reDirect={'/check-your-account'} />\r\n            </LayoutSection>      \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export const ANALYTICS_CARGANDO = \"analytics_cargando\";\r\nexport const ANALYTICS_ERROR = \"analytics_error\";\r\nexport const ANALYTICS_CLEAN_STATE = \"analytics_clean_state\";\r\nexport const ANALYTICS_COUNT_PRODUCTS = \"analytics_count_companiesxxx\";\r\nexport const ANALYTICS_COUNT_COURSES = \"analytics_count_courses\";\r\nexport const ANALYTICS_COUNT_USERS = \"analytics_count_users\";\r\nexport const ANALYTICS_COUNT_ADMINS = \"analytics_count_admins\";\r\nexport const ANALYTICS_COUNT_COMPANIES = \"analytics_count_companies\";\r\nexport const ANALYTICS_COUNT_POSITIONS = \"analytics_count_positions\";\r\nexport const ANALYTICS_COUNT_PERSONAL_DETAILS = \"analytics_count_personal_details\";\r\nexport const ANALYTICS_COUNT_AREAS = \"analytics_count_areas\";\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const analyticsCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const analyticsMethods = (method, data='') => async (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type;\r\n      switch (method) {\r\n        case \"count_products\":\r\n            answer = await axios_api(`api/CountProducts`, true, \"get\");\r\n            type = ANALYTICS_COUNT_PRODUCTS;\r\n            break;\r\n        case \"count_courses\":\r\n          answer = await axios_api(`api/CountProductsByCategoryId?id=${data.Id}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COURSES;\r\n          break;\r\n        case \"count_users\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=User&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_USERS;\r\n          break;\r\n        case \"count_admins\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=Admin&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_ADMINS;\r\n          break;\r\n        case \"count_companies\":\r\n          answer = await axios_api(`api/CountCompanies`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COMPANIES;\r\n          break;\r\n        case \"count_positions\":\r\n          answer = await axios_api(`api/CountPositions?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_POSITIONS;\r\n          break;\r\n        case \"count_personal_details\":\r\n          answer = await axios_api(`api/CountPersonalDetails?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_PERSONAL_DETAILS;\r\n          break;\r\n        case \"count_areas\":\r\n          answer = await axios_api(`api/CountAreas?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_AREAS;\r\n          break;\r\n        default:\r\n            break\r\n  \r\n          \r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ANALYTICS_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods} = this.props;\r\n        await analyticsMethods('count_courses', {Id:6})\r\n        await analyticsMethods('count_users')\r\n        await analyticsMethods('count_admins')\r\n        await analyticsMethods('count_companies')\r\n    }\r\n    render(){\r\n        const {\r\n           \r\n            count_companies,\r\n            count_users,\r\n            count_admins,\r\n            api_actions:{\r\n                cargando,\r\n            }\r\n        } = this.props.analyticsReducer;\r\n        const cardAnalytics = [\r\n            {\r\n                id: '4-a',\r\n                title: 'Admins',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_admins,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/admins'\r\n            },\r\n            {\r\n                id: '2-a',\r\n                title: 'Usuarios',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_users,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/users'\r\n            },\r\n            {\r\n                id: '1-a',\r\n                title: 'Empresas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_companies,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: '/admin-dashboard/companies'\r\n            },       \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer}) => {\r\n    return {analyticsReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ADMIN_CARGANDO = \"admin_cargando\";\r\nexport const ADMIN_ERROR = \"admin_error\";\r\nexport const ADMIN_HANDLE_CHANGE = \"admin_handle_change\";\r\nexport const ADMIN_CLEAN_STATE = \"admin_clean_state\";\r\nexport const ADMIN_CRUD = \"admin_crud\";\r\nexport const ADMIN_HANDLE_VALIDATION = \"admin_handle_validation\";\r\nexport const ADMIN_USERS_LIST = \"admins_list\";\r\n\r\nexport const GetUserInfo = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Account/UserInfo?userId=${data.userId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n\r\nexport const GetUsersInfo = async(data) =>{\r\n    const answer = await axios_api(\r\n        `api/Account/UsersInfo?roleName=${data.roleName}`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type:ADMIN_USERS_LIST};\r\n}\r\n\r\nexport const PutContactInfo = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/PutContactInfo`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type:'contact_info_put'};\r\n}\r\n\r\nexport const ValidateAccount = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/ValidateAccount`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    GetUserInfo,\r\n    PutContactInfo,\r\n    GetUsersInfo,\r\n    ValidateAccount\r\n  } from \"./adminTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const adminHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const adminHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const adminCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const adminMethods = (data, method, loading = 'cargando', typeError = 'error') => async (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CARGANDO,\r\n      payload: loading //? {cargando: loading} : {cargando: 'cargando'}\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetUserInfo\":\r\n            answer = await GetUserInfo(data);\r\n            break;\r\n        case \"GetUsersInfo\":\r\n            answer = await GetUsersInfo(data);\r\n            break;\r\n        case \"PutContactInfo\":\r\n            answer = await PutContactInfo(data)\r\n            break;\r\n        case \"ValidateAccount\":\r\n            answer = await ValidateAccount(data);\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n     \r\n      dispatch({\r\n        type: answer.type,\r\n        payload: answer.res.data,\r\n      });\r\n    } catch (error) {    \r\n      let messageError = errorHandler(error);\r\n      let objectError = {\r\n        messageError: messageError,\r\n        typeError : typeError //? typeError : 'error'\r\n      }\r\n      dispatch({\r\n        type: ADMIN_ERROR,\r\n        payload: objectError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as adminActions from './reducer/adminActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfUsers = ({roleName = 'User', title='Usuarios', create='/create-user'}) => {\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(adminActions.adminMethods({roleName: roleName},'GetUsersInfo'))\r\n    }, [dispatch, roleName])\r\n    \r\n    const getUser = (userId) => {\r\n        let typeUser = roleName === 'User' ? 'user' : 'admin'\r\n        history.push(`/admin-dashboard-read-${typeUser}/${userId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_users\r\n    } = adminReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Usuarios</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Usuario','Acciones']}\r\n                propertiesTable={['Id','UserName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_users}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Usuario', handleAction: getUser },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfUsers;\r\n\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components\r\nimport { Inputs, RegularExpressions } from '../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as adminActions from \"./reducer/adminActions\";\r\n\r\nclass UpdateContactInfo extends Component {\r\n    async componentDidMount() {\r\n        const { adminMethods, userId } = this.props;\r\n        await adminMethods({userId},'GetUserInfo' ); \r\n    }\r\n    action = async () => {\r\n        const { \r\n            adminMethods, \r\n            userId, \r\n            adminReducer: {\r\n                data:{ \r\n                    Email, \r\n                    PhoneNumber,\r\n                    UserName,\r\n                    TypeUser \r\n                }\r\n            },\r\n            closeModal\r\n        } = this.props;\r\n\r\n        const contactModel= {\r\n            NewUserName: UserName,\r\n            NewTypeUser: TypeUser,\r\n            NewPhoneNumber: PhoneNumber,\r\n            NewEmail: Email,\r\n            UserId: userId\r\n        }\r\n\r\n        await adminMethods( contactModel,'PutContactInfo')\r\n        \r\n        const {\r\n            adminReducer: {\r\n            api_actions: { error },  \r\n            },\r\n        } = this.props;\r\n\r\n        if(error){\r\n\r\n        }else{\r\n            closeModal && closeModal();\r\n        }\r\n        \r\n    };\r\n\r\n    async componentWillUnmount(){\r\n        const { adminCleanState, adminMethods, userId } = this.props;\r\n        adminCleanState();\r\n        await adminMethods({userId},'GetUserInfo')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            adminHandleChange,\r\n            adminHandleValidation,\r\n            adminReducer: {\r\n                data: { Email, PhoneNumber, UserName },\r\n                validations,\r\n                api_actions: { cargando, error },   \r\n            }\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <Inputs.Form1\r\n                     loading={cargando}\r\n                     error={error}\r\n                     action={this.action}\r\n                     textButton={'Actualizar'}\r\n                     textButtonLoading={'Actualizando ...'}\r\n                     validations={validations}\r\n                     handleValidations={adminHandleValidation}\r\n                >\r\n                    <Inputs.InputEmail \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Email'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='email'\r\n                        inputName={'Email'}\r\n                        placeHolder={'Introduce un Email'}\r\n                        inputValue={Email}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.Email}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Nombre de usuario'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'UserName'}\r\n                        placeHolder={'Introduce un nombre de usuario'}\r\n                        inputValue={UserName}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.UserName}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Celular'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'PhoneNumber'}\r\n                        placeHolder={'Introduce un Celular'}\r\n                        inputValue={PhoneNumber}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.PhoneNumber}\r\n                    />\r\n                    \r\n                </Inputs.Form1>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ adminReducer }) => {\r\n  return { adminReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...adminActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateContactInfo);\r\n","import React, {useEffect} from 'react'\r\nimport {Button } from 'reactstrap'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as adminActions from './reducer/adminActions'\r\nimport {ApiResponses} from '../components-api'\r\nconst ValidateAccount = ({title}) => {\r\n    const {userId} = useParams();\r\n    const dispatch = useDispatch();\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(adminActions.adminMethods({userId},'GetUserInfo'))\r\n    // }, [dispatch, userId])\r\n\r\n    const {\r\n        data:{\r\n            EmailConfirmed,\r\n        },\r\n        api_actions:{\r\n            cargando,\r\n            error, \r\n            cargandoValidateAccount\r\n        }\r\n    } = adminReducer\r\n\r\n    if(cargando){\r\n        return <></>\r\n    }\r\n    const action = () =>{\r\n        dispatch(adminActions.adminMethods({Active: !EmailConfirmed, UserId: userId},'ValidateAccount'), 'cargandoValidateAccount')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h5 className=\"font-weight-bold mb-3\">Cuenta: {EmailConfirmed}</h5>\r\n            <Button className={`btn btn-${EmailConfirmed ? 'success' : 'danger'}`} onClick={action}> \r\n                {EmailConfirmed ? 'Validada' : 'No Validada'} <ApiResponses.Loader activate={cargandoValidateAccount}/> \r\n            </Button>\r\n            {error && <ApiResponses.Error message={error}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidateAccount;","import ComponentIdicators from './Indicators'\r\nimport ComponentsListOfUsers from './ListOfUsers' \r\nimport ComponentReadUser from './ReadUser'\r\nimport ComponentUpdateUserInfo from './UpdateUserInfo'\r\nimport ComponentValidateAccount from './ValidateAccount'\r\n\r\n\r\nexport const Indicators = ComponentIdicators;\r\nexport const ListOfUsers = ComponentsListOfUsers;\r\nexport const ReadUser = ComponentReadUser;\r\nexport const UpdateUserInfo = ComponentUpdateUserInfo;\r\nexport const ValidateAccount = ComponentValidateAccount;\r\n","import React from 'react'\r\nimport {Row, Col, Card, CardBody, Container} from 'reactstrap'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {ListOfUsers as Users, UpdateUserInfo, ValidateAccount} from '../../components-admin'\r\nimport {SignUp, ChangePasswordForUser} from '../../components-session/'\r\nimport {Navbars} from '../../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfUsers = () => {\r\n    return (\r\n        <>\r\n            <Users />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ListOfAdmins = () => {\r\n    return (\r\n        <>\r\n            <Users \r\n                roleName='Admin' \r\n                title='Administradores'\r\n                create='/create-admin'\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateAdmin = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Administrador</h5>\r\n                            <SignUp history={history} role='Admin' reDirect={'/admin-dashboard/admins'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadAdmin = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Admin</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n             </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateUser = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/users\" className=\"text-muted\">Usuarios</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear usuario</small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Usuario</h5>\r\n                            <SignUp history={history} role='User' reDirect={'/admin-dashboard/create-company'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadUser = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Usuario</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser userId={userId}/>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","export const SECTION_CARGANDO = \"section_cargando\";\r\nexport const SECTION_ERROR = \"section_error\";\r\nexport const SECTION_HANDLE_CHANGE = \"section_handle_change\";\r\nexport const SECTION_CLEAN_STATE = \"section_clean_state\";\r\nexport const SECTION_CRUD = \"section_crud\";\r\nexport const SECTIONS_LIST = \"sections_list\";\r\nexport const SECTIONS_SELECT = \"sections_list_select\";\r\nexport const SECTION_HANDLE_VALIDATION = \"section_handle_validation\";","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const sectionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const sectionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const sectionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const sectionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = SECTION_CRUD;\r\n      switch (method) {\r\n        case \"get_list_sections_select\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_SELECT;\r\n          break;\r\n        case \"get_list_sections\":\r\n          answer = await axios_api(\r\n            `api/Sections`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id_with_products\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseIdWithProducts?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n\r\n        case \"get_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n\r\n        case \"put_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_section\":\r\n          answer = await axios_api(\"api/Section\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: SECTION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nclass Section extends Component {\r\n    componentDidMount = async() =>{\r\n        const {sectionId, sectionMethods} = this.props;\r\n        sectionId && await sectionMethods({Id: sectionId}, 'get_section')\r\n    }\r\n    actionSection = async () => {\r\n        const {\r\n            sectionMethods, \r\n            sectionCleanState,\r\n            sectionReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                CourseId\r\n            }},\r\n            reDirect,\r\n            history,\r\n            courseId,\r\n            setModal\r\n        } = this.props\r\n        if(Id){\r\n            await sectionMethods({Id, Name, DateCreated, CourseId }, 'put_section')\r\n        }else{\r\n            await sectionMethods({ Name, CourseId: courseId}, 'post_section')\r\n        }\r\n        if(this.props.sectionReducer.data.Id){\r\n            sectionCleanState()\r\n            await sectionMethods({Id: courseId ? courseId : CourseId },'get_list_sections_by_course_id_with_products');\r\n            setModal && setModal()\r\n            reDirect && history.push(reDirect)\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            sectionHandleValidation,\r\n            sectionHandleChange,\r\n            sectionReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionSection}\r\n                textButton={Id ? 'Actualizar Sección' : 'Agregar Sección'}\r\n                textButtonLoading={Id ? 'Actualizando Sección...' : 'Agregando Sección...'}\r\n                validations={validations}\r\n                handleValidations={sectionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sección'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Sección'}\r\n                    inputValue={Name}\r\n                    onChange={sectionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({sectionReducer}) => {\r\n    return {sectionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...sectionActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Section from './Section'\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateModalSection = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n   \r\n    if(sectionModal.some){\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n    \r\n    return (\r\n        <ModalForm\r\n            state={sectionModal}\r\n            modalTitle={'Crear Sección'}\r\n            content={\r\n                <Section \r\n                    courseId={courseId}\r\n                    setModal={ sectionModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditSectionModal = ({section}) => {\r\n    const sectionModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            state={sectionModal}\r\n            modalTitle={`Editar Sección: ${section.SectionName}`}\r\n            content={<Section sectionId={section.SectionId} />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteSectionModal = ({section, courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n    const deleteSectionAction = async (sectionId) => {\r\n        await dispatch(sectionActions.sectionMethods({Id: sectionId},'delete_section'));\r\n        await dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'));\r\n    }\r\n    \r\n    return (\r\n        <ModalDelete \r\n            state={sectionModal}\r\n            modalTitle={`Eliminar Sección: ${section.SectionName}`}\r\n            content={`La siguiente sección \"${section.SectionName}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={() => deleteSectionAction(section.SectionId)}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","export const CATEGORY_PRODUCT_CARGANDO = \"category_products_cargando\";\r\nexport const CATEGORY_PRODUCT_ERROR = \"category_products_error\";\r\nexport const CATEGORY_PRODUCT_HANDLE_CHANGE = \"category_products_handle_change\";\r\nexport const CATEGORY_PRODUCT_CLEAN_STATE = \"category_products_clean_state\";\r\nexport const CATEGORY_PRODUCT_CRUD = \"category_products_crud\";\r\nexport const CATEGORIES_PRODUCTS_LIST = \"categories_products_list\";\r\nexport const CATEGORY_PRODUCT_HANDLE_VALIDATION = \"category_products_handle_validation\";\r\n\r\n\r\n\r\n\r\n","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryProductHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryProductHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = CATEGORY_PRODUCT_CRUD;\r\n      switch (method) {\r\n\r\n        case \"get_list_categories_products\":\r\n          answer = await axios_api(\r\n            `api/ProductCategories`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = CATEGORIES_PRODUCTS_LIST;\r\n          break;\r\n\r\n        case \"get_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n        \r\n        case \"put_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_category_product\":\r\n          answer = await axios_api(\"api/ProductCategory\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","export const BLOB_CARGANDO = \"blob_cargando\";\r\nexport const BLOB_ERROR = \"blob_error\";\r\nexport const BLOB_HANDLE_CHANGE = \"blob_handle_change\";\r\nexport const BLOB_HANDLE_VALIDATION = \"blob_handle_validation\";\r\nexport const BLOB_CLEAN_STATE = \"blob_clean_state\";\r\nexport const BLOB_CRUD = \"blob_crud\";\r\n","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const blobHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const blobHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const blobCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const blobMethods = (data, method) => async (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CARGANDO,\r\n  });\r\n  try {\r\n    let answer;\r\n    let type = BLOB_CRUD;\r\n    switch (method) {\r\n      case \"post_blob\":\r\n        answer = await axios_api(`api/Blob`, true, \"post\", data);\r\n        break;\r\n      case \"put_blob\":\r\n        answer = await axios_api(\r\n          `api/Blob?id=${data.id}`,\r\n          true,\r\n          \"put\",\r\n          data.blob\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    //answer = { data: answer.data[0], status: answer.status };\r\n    dispatch({\r\n      type: type,\r\n      payload: answer.data[0],\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: BLOB_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","/*\r\n * Funciones para el manejo de archivos y form datas\r\n */\r\n\r\nexport const b64toBlob = (b64Data, contentType = \"\", sliceSize = 512) => {\r\n  let byteCharacters = atob(b64Data);\r\n  let byteArrays = [];\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    let slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n    let byteNumbers = new Array(slice.length);\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i);\r\n    }\r\n\r\n    let byteArray = new Uint8Array(byteNumbers);\r\n\r\n    byteArrays.push(byteArray);\r\n  }\r\n\r\n  let blob = new Blob(byteArrays, { type: contentType });\r\n  return blob;\r\n};\r\n\r\n/*\r\n * creamos un blob\r\n */\r\nexport const createBlob = (dataUri) => {\r\n  let block = dataUri.split(\";\");\r\n  let contentType = block[0].split(\":\")[1];\r\n  let realData = block[1].split(\",\")[1];\r\n  const blob = b64toBlob(realData, contentType);\r\n  return blob;\r\n};\r\n\r\n/*\r\n * Convertimos un blob a form data\r\n */\r\nexport const createFormData = (\r\n  blob,\r\n  BlobTypeId = 1,\r\n  ContainerName = \"publicproducts\",\r\n  IsPrivate = true,\r\n  UserId = \"\"\r\n) => {\r\n  const data = new FormData();\r\n  data.set(\"BlobTypeId\", BlobTypeId);\r\n  data.set(\"ContainerName\", ContainerName);\r\n  data.set(\"IsPrivate\", IsPrivate);\r\n  //   if (localStorage.getItem(\"role\") === \"Admin\") {\r\n  //     data.set(\"UserId\", UserId);\r\n  //   }\r\n  data.append(\"file\", blob);\r\n  return data;\r\n};\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as categoryProductActions from '../components-category-product/reducer/categoryProductActions'\r\nimport * as categoryActions from '../components-category/reducer/categoryActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Product extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, categoryProductMethods, categoryMethods} = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        await categoryProductMethods(\"\", 'get_list_categories_products');\r\n        await categoryMethods(\"\",\"GetCategories\")\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    ProductCategoryId, \r\n                    fileCover,\r\n                    Categories\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            categoryProductReducer:{\r\n                list_categories_products\r\n            },\r\n            blobReducer,\r\n            categoryReducer:{\r\n                list_categories\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'ProductCategoryId'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={ProductCategoryId}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.ProductCategoryId}\r\n                    optionPlaceHolder={'Selecciona un tipo de producto'}\r\n                    options={list_categories_products}\r\n                /> \r\n\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Caracteristicas'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Categories'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={Categories}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Categories}\r\n                    optionPlaceHolder={'Selecciona caracteristicas'}\r\n                    options={list_categories}\r\n                /> */}\r\n                \r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer, categoryProductReducer, blobReducer, categoryReducer}) => {\r\n    return {productReducer, categoryProductReducer, blobReducer, categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...categoryProductActions,\r\n    ...blobActions,\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Product from './Product'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateProductModal = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const porductModal = SwitchSome();\r\n\r\n    if(porductModal.some){\r\n        dispatch(productActions.productCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={porductModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Product \r\n                    courseId={courseId} \r\n                    hasSection={true}\r\n                    setModal={porductModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditProductModal = ({product, courseId}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={porductModal}\r\n            modalTitle={`Editar Recurso: ${product.Name}`}\r\n            content={<Product \r\n                productId={product.Id} \r\n                hasSection={true} \r\n                courseId={courseId}\r\n                setModal={porductModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteProductModal = ({product, action}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ porductModal}\r\n            modalTitle={`Eliminar Recurso: ${product.Name}`}\r\n            content={`El siguiente Recurso \"${product.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","// Imports de react.\r\nimport React, { useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Badge} from 'reactstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Import de components.\r\nimport {EditSectionModal, DeleteSectionModal} from './ModalSections'\r\nimport {EditProductModal, DeleteProductModal} from '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\n\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfSections = ({courseId}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [dispatch, courseId])\r\n\r\n    const cleanSection = () => {\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n\r\n    const deleteProductAction = (sectionId) => {\r\n        dispatch(productActions.productMethods({Id: sectionId},'delete_product'))\r\n        dispatch(productActions.productCleanState())\r\n        cleanSection()\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    // if(list_sections.len){\r\n    //     dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n            {list_sections.map(section => {\r\n                 //TODO: implementar nuevo formato para leer lor recursos de de una seción\r\n                 //TODO: Crear reducers de resources.\r\n                return <>\r\n                    <div className=\"border mb-3 p-2\">\r\n                        <div className='d-flex mb-2 p-2 text-left'>\r\n                            <h6 className='flex-grow-1 font-weight-bold mb-0'>{section.SectionName} </h6>\r\n                            <div>\r\n                                <EditSectionModal section={section} cleanSection={cleanSection}/>\r\n                                <DeleteSectionModal section={section} courseId={courseId}/>\r\n                            </div>\r\n                        </div>\r\n                    {\r\n                        section.Products && \r\n                        section.Products.map(product => {\r\n                        if(product !== null){\r\n                        return(\r\n                            <Badge color={'light'} className='d-flex mb-2 p-2 text-left'>\r\n                                <p className='flex-grow-1 mb-0'>{product.Name} </p>\r\n                                <div>\r\n                                    <Link to={`/player/watch-class/${product.Id}/${courseId}`}>\r\n                                    <FaIcons.FaEye className=\"mr-2\" />\r\n                                    </Link>\r\n                                    <EditProductModal product={product} courseId={courseId} />\r\n                                    <DeleteProductModal product={product} action={() => deleteProductAction(product.Id)}/>\r\n                                </div>\r\n                            </Badge>\r\n                            )\r\n                        }\r\n                        return '';\r\n                        })\r\n                    }\r\n                    </div>\r\n                </>\r\n            })}\r\n            {error ? <Error message={error}></Error> : ''}\r\n        </>\r\n    )\r\n}\r\n\r\n","import ComponentSection from './Section'\r\nimport * as ComponentListOfSections from './ListOfSections'\r\nimport * as ComponentModalSections from './ModalSections'\r\nimport * as ComponentCrudCourse from './CrudCourse'\r\n\r\nexport const Section =  ComponentSection;\r\nexport const ModalSections = ComponentModalSections;\r\nexport const CrudCourse = ComponentCrudCourse.CrudCourse;\r\nexport const ListOfSections = ComponentListOfSections.ListOfSections;","// Imports de react.\r\nimport React from 'react'\r\n\r\n// Imports de components.\r\nimport {CreateModalSection} from './ModalSections'\r\nimport {ListOfSections} from './ListOfSections'\r\nimport {CreateProductModal} from  '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nexport const CrudCourse = ({courseId}) => {\r\n\r\n    \r\n    return(\r\n        <>\r\n        <div className='d-flex justify-content-between'>\r\n            <h5 className=\"font-weight-bold mb-3\">Crea una sección nueva a tu curso</h5>\r\n            <CreateModalSection courseId={courseId}/>\r\n        </div> \r\n\r\n            <div className='d-flex justify-content-between'>\r\n            <h6 className=\"font-weight-bold mb-3\">Añade videos o documentos a tus secciones</h6>\r\n            <CreateProductModal courseId={courseId}/>\r\n        </div>       \r\n        <ListOfSections courseId={courseId}></ListOfSections>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Container, Row } from 'reactstrap'\r\n\r\n// Imports de config-components.\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\n// Imports de components\r\nimport Indicators from '../../components-admin/Indicators'\r\n\r\nimport {\r\n    AdminUsersPages, AdminCoursesPages, AdminProductPages, AdminCompanyPages\r\n} from './index'\r\n\r\nexport const Dashboard = () => {\r\n    \r\n    let {indicator} = useParams();\r\n    let history = useHistory();\r\n    const AdminSections = (page) =>{\r\n        switch(page){\r\n\r\n            case 'create-admin':\r\n                return <AdminUsersPages.CreateAdmin />\r\n            case 'admins':\r\n                return <AdminUsersPages.ListOfAdmins reDirect={'admin'} history={history} />\r\n            case 'create-user':\r\n                return <AdminUsersPages.CreateUser />\r\n            case 'users':\r\n                return <AdminUsersPages.ListOfUsers reDirect={'section'} history={history} />\r\n                 \r\n            case 'create-product':\r\n                return <AdminProductPages.CreateProduct />\r\n            case 'companies':\r\n                return <AdminCompanyPages.ListOfCompanies />\r\n            \r\n            default:\r\n                return <>\r\n                    <Row className=\"mb-4\">\r\n                        <Indicators />\r\n                    </Row>\r\n                </>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           AdminSections(indicator)\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const TemplateDashboardAdmin = ({children}) => {\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           children\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}","// Imports de react.\r\nimport React from 'react' \r\nimport { useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {CrudCourse} from '../../components-section'\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const CreateSection = () => {\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <Row>\r\n                <Col lg=\"8\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <CrudCourse  courseId={courseId} ></CrudCourse>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            {/* <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/> */}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Course extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, } = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        this.props.productReducer.data.ProductCategoryId = 6;\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            //TODO: revisar porque al crear el curso truena\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}${this.props.courseReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    fileCover,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer,  blobReducer}) => {\r\n    return {productReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);","// Imports de react.\r\nimport React from 'react'\r\n\r\nimport {ListOfProducts} from '../components-product'\r\n\r\nconst ListOfCourses = ({reDirect}) => {\r\n    return(\r\n        <ListOfProducts \r\n            title={'Cursos'} \r\n            categoryProductId={6} \r\n            reDirect={reDirect}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ListOfCourses\r\n\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\n\r\nexport const Player = ({\r\n    url = 'https://Version 4storage.blob.core.windows.net/publicproducts/5ad7523a-cf4e-4dfa-8942-6c6fa1a86744.mp4'\r\n}) => {\r\n    return (\r\n        <div> \r\n            <ReactPlayer \r\n                url={url}\r\n                width='100%'\r\n                height='100%'\r\n                controls\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import * as ComponentPlayer from './Player'\r\n\r\nexport const PlayerMedia = ComponentPlayer;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Container } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst TabCourse = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Descripción General\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Sporte\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab} className=\"py-4\">\r\n        <TabPane tabId=\"1\">\r\n            <Container>\r\n                <h5>Acerca de este curso</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">  \r\n            <Container>\r\n                <h5>Soporte y ayuda</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabCourse;","import React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Navbars} from '../config-components'\r\nimport {PlayerMedia} from '../components-player'\r\nimport { Row, Col } from 'reactstrap';\r\nimport CollapseSection from '../config-components/Collapse'\r\nimport TabCourse from '../config-components/TabCourse'\r\n\r\nimport * as productActions from '../components-product/reducer/productActions';\r\nimport * as sectionActions from '../components-section/reducer/sectionActions';\r\n\r\n\r\nexport const WatchClass = () => {\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n    const stateProduct = useSelector(state => state.productReducer)\r\n    const dispatch = useDispatch();\r\n    const {productId, courseId} = useParams();\r\n    useEffect(() => {\r\n        dispatch(productActions.productMethods({Id: productId},'get_product'));\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [productId, courseId, dispatch])\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    return (\r\n        <div>\r\n            <Navbars.NavbarAdmin /> \r\n            <Row className=\"no-gutters\">\r\n                <Col lg=\"8\">\r\n                    <PlayerMedia.Player \r\n                        url={stateProduct.data.Blobs?.length > 0 \r\n                            ? stateProduct.data.Blobs[0].Uri\r\n                            : ''\r\n                    }\r\n                    />  \r\n                    <TabCourse />\r\n                </Col>\r\n                <Col lg=\"4\" className=\"border-left\">\r\n                    <div>\r\n                        <div className=\"p-3 border-bottom shadow-sm\">\r\n                            <h6 className=\"font-weight-bold mb-0\">Contenido del curso</h6>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                {list_sections.map(section => {\r\n                                    return (\r\n                                        <CollapseSection \r\n                                            title={section.SectionName} \r\n                                            countVideos={section.Products.length} \r\n                                            videos={section.Products}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                                \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import ComponentCourse from './Course'\r\nimport ComponentListOfCourses from './ListOfCourses'\r\nimport * as ComponentWatchClass from './WatchClass'\r\n\r\n\r\nexport const Course = ComponentCourse ;\r\nexport const ListOfCourses = ComponentListOfCourses ;\r\nexport const PlayerMedia = ComponentWatchClass;\r\n","// Imports de react.\r\nimport React from 'react' \r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {ListOfCourses as Courses, Course, PlayerMedia} from '../../components-course'\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfCourses = ({reDirect, history}) =>{\r\n    return (\r\n        <Courses reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCourse = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <Card className=\"border-0\">\r\n            <CardBody className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\">Crea un curso nuevo</h5>\r\n                <Course reDirect={'/admin-dashboard/section/'} history={history}/>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const WhatchCourse = () => {\r\n    return (\r\n        <>\r\n            <PlayerMedia.WatchClass /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    const history = useHistory();\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\n\r\nclass CategoryProduct extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryProductId, categoryProductMethods} = this.props;\r\n        categoryProductId && await categoryProductMethods({Id: categoryProductId}, 'get_category_product')\r\n    }\r\n    actionCategoryProduct = async () => {\r\n        const {\r\n            categoryProductMethods, \r\n            categoryProductCleanState,\r\n            categoryProductReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryProductMethods({Id: Id, Name: Name}, 'put_category_product')\r\n\r\n        }else{\r\n            await categoryProductMethods({Name: Name}, 'post_category_product')\r\n        }\r\n        if(this.props.categoryProductReducer.data.Id){\r\n            categoryProductCleanState()\r\n            await categoryProductMethods('','get_list_categories_products');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryProductHandleValidation,\r\n            categoryProductHandleChange,\r\n            categoryProductReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategoryProduct}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryProductHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Categoria de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryProductHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryProduct);","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport {Badge} from 'reactstrap'\r\n\r\n// Import de components.\r\nimport CategoryProduct from './CategoryProduct'\r\n\r\n// Imports de config-components.\r\nimport {ModalForm, ModalDelete} from '../config-components/Modals'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass ListOfCategoriesProducts extends Component {\r\n    componentDidMount = async () => {\r\n        const {categoryProductMethods} = this.props;\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    deleteAction = async (categoryProductId) => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        await categoryProductMethods({Id: categoryProductId},'delete_category_product');\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    cleanModal = async () => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            categoryProductReducer: { \r\n                api_actions: {cargando, error},\r\n                list_categories_products\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n                {list_categories_products.map(category => {\r\n                    return <Badge color={'light'} className='d-inline-block mr-2 p-2'>\r\n                        <span className='mr-2'>{category.Name} </span>\r\n                        {/* <ModalForm \r\n                            key={category.Id}\r\n                            clean={this.cleanModal}\r\n                            modalTitle={`Editar Categoria: ${category.Name}`}\r\n                            content={<CategoryProduct categoryProductId={category.Id}></CategoryProduct>}\r\n                        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm> */}\r\n                        {/* <ModalDelete \r\n                            key={category.Id}\r\n                            modalTitle={`Eliminar Categoría: ${category.Name}`}\r\n                            content={`La siguiente categoría \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n                            action={() => this.deleteAction(category.Id)}\r\n                        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete> */}\r\n                     </Badge>\r\n                   \r\n                })}\r\n                {error ? <Error message={error}></Error> : ''}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfCategoriesProducts);","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nclass Category extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryId, categoryMethods} = this.props;\r\n        categoryId && await categoryMethods({Id: categoryId}, 'GetCategory')\r\n    }\r\n    actionCategory = async () => {\r\n        const {\r\n            categoryMethods, \r\n            categoryCleanState,\r\n            categoryReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryMethods({Id: Id, Name: Name}, 'PutCategory')\r\n\r\n        }else{\r\n            await categoryMethods({Name: Name}, 'PostCategory')\r\n        }\r\n        if(this.props.categoryReducer.data.Id){\r\n            categoryCleanState()\r\n            await categoryMethods('','GetCategories');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryHandleValidation,\r\n            categoryHandleChange,\r\n            categoryReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategory}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Añade caracteristicas para seleccionar en los proyectos'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryReducer}) => {\r\n    return {categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Category from './Category'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateCategoryModal = ({category}) => {\r\n    const dispatch = useDispatch()\r\n    const categoryModal = SwitchSome();\r\n\r\n    if(categoryModal.some){\r\n        dispatch(categoryActions.categoryCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={categoryModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Category \r\n                    category={category} \r\n                    hasSection={true}\r\n                    setModal={categoryModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditCategoryModal = ({category}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={categoryModal}\r\n            modalTitle={`Editar Recurso: ${category.Name}`}\r\n            content={<Category \r\n                categoryId={category.Id} \r\n                hasSection={true} \r\n                setModal={categoryModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteCategoryModal = ({category, action}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ categoryModal}\r\n            modalTitle={`Eliminar Recurso: ${category.Name}`}\r\n            content={`El siguiente Recurso \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_DETAIL_CARGANDO = \"product_detail_cargando\";\r\nexport const PRODUCT_DETAIL_ERROR = \"product_detail_error\";\r\nexport const PRODUCT_DETAIL_HANDLE_CHANGE = \"product_detail_handle_change\";\r\nexport const PRODUCT_DETAIL_CLEAN_STATE = \"product_detail_clean_state\";\r\nexport const PRODUCT_DETAIL_CRUD = \"product_detail_crud\";\r\nexport const PRODUCT_DETAILS_LIST = \"product_details_list\";\r\nexport const PRODUCT_DETAIL_HANDLE_VALIDATION = \"product_detail_handle_validation\";\r\n\r\nexport const GetProductDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/ProductDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCT_DETAILS_LIST};\r\n}\r\n\r\nexport const GetProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const GetProductDetailByProductId = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetailByProductId?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_detail_put'};\r\n}\r\n\r\nexport const PostProductDetail = async(data)=> {\r\n    const  answer = await axios_api(\"api/ProductDetail\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION, \r\n    GetProductDetails,\r\n    GetProductDetail,\r\n    GetProductDetailByProductId,\r\n    PutProductDetail,\r\n    PostProductDetail,\r\n    DeleteProductDetail,\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProductDetails\":\r\n          answer = await GetProductDetails(); \r\n          break;\r\n\r\n        case \"GetProductDetail\":\r\n          answer = await GetProductDetail(data);\r\n          break;\r\n\r\n        case \"GetProductDetailByProductId\":\r\n          answer = await GetProductDetailByProductId(data);\r\n          break;\r\n        case \"PutProductDetail\":\r\n          answer = await PutProductDetail(data);\r\n          break;\r\n\r\n        case \"PostProductDetail\":\r\n          answer = await PostProductDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteProductDetail\":\r\n          answer = await DeleteProductDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productDetailActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\n\r\nclass ProductDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productDetailMethods} = this.props;\r\n        productId && await productDetailMethods({Id: productId}, 'GetProductDetailByProductId');\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            productDetailMethods, \r\n            productDetailReducer: {data : {\r\n                Id,\r\n                SubTitle,\r\n                DateCreated,\r\n                Description, \r\n                BlobId\r\n            }},\r\n            productId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            SubTitle: SubTitle ? SubTitle : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            ProductId: productId ? productId : '',\r\n            BlobId: BlobId ? BlobId : '',\r\n        }\r\n        await productDetailMethods(model, action);\r\n    }\r\n\r\n    actionProductDetail = async () => {\r\n        const {\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blob,\r\n                    fileZip\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileZip?.length &&  Blob){\r\n                let fileZipAnswer = await this.actionBlob(fileZip, 1 ,[Blob]);\r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            } else{\r\n                let fileZipAnswer = fileZip?.length && await this.actionBlob(fileZip, 1); \r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            }\r\n        }else{\r\n            let fileZipAnswer = fileZip.length && await this.actionBlob(fileZip, 1); \r\n            this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n            fileZipAnswer &&  await this.sendAction('PostProductDetail')\r\n        }\r\n        if(this.props.productDetailReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productDetailReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productDetailHandleValidation,\r\n            productDetailHandleChange,\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    SubTitle,\r\n                    Description, \r\n                    fileZip\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                <Form1\r\n                    loading={\r\n                        cargando \r\n                            ? cargando : \r\n                            blobReducer.api_actions.cargando \r\n                            ? blobReducer.api_actions.cargando \r\n                            : false \r\n                        }\r\n                    error={error}\r\n                    action={this.actionProductDetail}\r\n                    textButton={Id ? 'Guardar Detalle' : 'Agregar Detalle'}\r\n                    textButtonLoading={Id ? 'Guardando Detalle...' : 'Agregando Detalle...'}\r\n                    validations={validations}\r\n                    handleValidations={productDetailHandleValidation}\r\n                >\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Subtitulo'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'SubTitle'}\r\n                        placeHolder={'Introduce un subtitulo '}\r\n                        inputValue={SubTitle}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={50}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.SubTitle}\r\n                    />\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Detalles'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='textarea'\r\n                        inputName={'Description'}\r\n                        placeHolder={'Introduce detalles'}\r\n                        inputValue={Description}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={500}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.Description}\r\n                    />\r\n                    <InputFile\r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Sube un .zip con tus archivos'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='file'\r\n                        inputName='fileZip'\r\n                        inputId='fileZip-video'\r\n                        inputValue={fileZip ? fileZip : ''}\r\n                        onChange={productDetailHandleChange}\r\n                        validateRE={validations.fileZip}\r\n                    /> \r\n                </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productDetailReducer,  blobReducer}) => {\r\n    return {productDetailReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","import ComponentProductDetail from './ProductDetails'\r\n\r\nexport const ProductDetail = ComponentProductDetail;","// Imports de react\r\nimport React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {Row, Col, Card, CardBody} from 'reactstrap'\r\n\r\n// Imports de componentes.\r\nimport {CardProduct, ListOfProducts as Products, AddCategories} from '../../components-product'\r\nimport Product from '../../components-product/Product'\r\nimport CategoryProduct from '../../components-category-product/CategoryProduct'\r\nimport ListOfCategoriesOfProducts from '../../components-category-product/ListOfCategoriesOfProducts'\r\nimport {Category, ListOfCategories} from '../../components-category'\r\nimport {ProductDetail} from '../../components-product-details'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfProducts = () => {\r\n    return(\r\n        <Products reDirect={'/admin-dashboard/product'}/>\r\n    )\r\n}\r\n\r\nexport const CreateProduct = () => {\r\n    const history = useHistory();  \r\n    return (\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear producto</small></li>\r\n        </ul>\r\n        <Row>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Crea un producto nuevo</h5>\r\n                        <Product reDirect={`/admin-dashboard/product`} history={history}/>\r\n                        \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <CardProduct />\r\n                \r\n                {/* <Card className=\"border-0\">\r\n                    <CardBody>\r\n                        <Category />\r\n                        <ListOfCategories/>\r\n                    </CardBody>\r\n                </Card> */}\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditProduct = () => {\r\n    let {productId,section} = useParams();\r\n    const history = useHistory();\r\n\r\n    const ProductSection = (section) => {\r\n        switch(section){\r\n            case 'cover':\r\n                return <>\r\n                <h5 className=\"font-weight-bold mb-3\">Edita este producto </h5>\r\n                <Product productId={productId} history={history}/>\r\n                </>\r\n            case 'detail':\r\n                return <div>\r\n                    <h5 className=\"font-weight-bold mb-3\">Sube detalle del producto </h5>\r\n                    <ProductDetail productId={productId} />\r\n                </div>\r\n                \r\n            default:\r\n                return <Product productId={productId} history={history}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Editar producto</small></li>\r\n            </ul>\r\n             <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <Link to={`/admin-dashboard/product/${productId}/cover`}>producto </Link>/ \r\n                            <Link  to={`/admin-dashboard/product/${productId}/detail`}> detalle</Link>\r\n                            \r\n                            {\r\n                                ProductSection(section)\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg=\"6\">\r\n                    <CardProduct />\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <AddCategories />\r\n                        </CardBody>\r\n                    </Card> */}\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <Category />\r\n                            <ListOfCategories/>\r\n                        </CardBody>\r\n                    </Card> */}\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CategoryProducts = () =>{\r\n    return (\r\n        <>\r\n            <CategoryProduct />\r\n            <ListOfCategoriesOfProducts></ListOfCategoriesOfProducts>\r\n        </>\r\n    )\r\n}\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nclass Company extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {companyId, companyMethods} = this.props;\r\n        companyId && await companyMethods({Id: companyId}, 'GetCompany');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            companyMethods, \r\n            companyReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                TradeName,\r\n                BusinessName, \r\n                BusinessActivity,\r\n                UserId\r\n            }},\r\n            userId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            TradeName: TradeName ? TradeName : '',\r\n            BusinessName: BusinessName ? BusinessName : '',\r\n            BusinessActivity: BusinessActivity ? BusinessActivity : 0,\r\n            UserId: UserId ? UserId : userId\r\n        }\r\n        await companyMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            companyReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutCompany');\r\n        }else{\r\n            await this.sendAction('PostCompany')\r\n        }\r\n        if(this.props.companyReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.companyReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            companyHandleValidation,\r\n            companyHandleChange,\r\n            companyReducer: {\r\n                data : {\r\n                    Id, \r\n                    TradeName,\r\n                    BusinessName,\r\n                    BusinessActivity, \r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Empresa' : 'Crear Empresa'}\r\n                textButtonLoading={Id ? 'Guardando Empresa...' : 'Crear Empresa...'}\r\n                validations={validations}\r\n                handleValidations={companyHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre Comercial'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'TradeName'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={TradeName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.TradeName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Razón social'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'BusinessName'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={BusinessName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessName}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Actividad'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'BusinessActivity'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={BusinessActivity}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessActivity} \r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({companyReducer}) => {\r\n    return {companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...companyActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods, companyMethods, companyId} = this.props;\r\n        await analyticsMethods('count_positions', {companyId})\r\n        await analyticsMethods('count_personal_details', {companyId})\r\n        await analyticsMethods('count_areas', {companyId})\r\n        await companyMethods({Id:companyId},'GetCompany')\r\n    }\r\n    render(){\r\n        const {\r\n            count_positions,\r\n            count_personal_details,\r\n            count_areas,\r\n            api_actions:{\r\n                cargando,\r\n            },\r\n            \r\n        } = this.props.analyticsReducer;\r\n        \r\n        const cardAnalytics = [\r\n            {\r\n                id: '3-p',\r\n                title: 'Organigrama',\r\n                number: 'Ver',\r\n                icon: <FaIcons.FaSitemap className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/organization-chart`\r\n            },            \r\n            {\r\n                id: '1-p',\r\n                title: 'Posiciones',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_positions,\r\n                icon: <FaIcons.FaChair className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/positions`\r\n            },\r\n            {\r\n                id: '2-p',\r\n                title: 'Colaboradores',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_personal_details,\r\n                icon: <FaIcons.FaUserFriends className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/employees`\r\n            }, \r\n            {\r\n                id: '4-p',\r\n                title: 'Areas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_areas,\r\n                icon: <FaIcons.FaBuromobelexperte className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/areas`\r\n            },      \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer, companyReducer}) => {\r\n    return {analyticsReducer, companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n    ...companyActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import ComponentCompany from './Company'\r\nimport ComponentCompanyIndicators from './CompanyIndicators'\r\nimport ComponentListOfCompanies from './ListOfCompanies'\r\n\r\n\r\nexport const Company = ComponentCompany;\r\nexport const CompanyIndicators = ComponentCompanyIndicators;\r\nexport const ListOfCompanies = ComponentListOfCompanies;","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfCompanies = ({ title='Empresas', create='/create-company'}) => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(companyActions.companyMethods('','GetCompanies'))\r\n    }, [dispatch])\r\n    \r\n    const getCompany = (companyId) => {\r\n        history.push(`/admin-dashboard/company/${companyId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_companies\r\n    } = companyReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Empresas</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Empresa','Acciones']}\r\n                propertiesTable={['Id','TradeName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_companies}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empresa', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCompanies;\r\n\r\n","import { CompanyIndicators } from '../../components-company'\r\n\r\nimport { Row } from 'reactstrap'\r\n\r\nexport const Indicators = ({companyName, companyId, hrefBase}) => {\r\n    return (\r\n        <>\r\n            <h2> {companyName}</h2>\r\n            <Row className=\"mb-4\">\r\n                <CompanyIndicators companyId={companyId} hrefBase={hrefBase}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const JOB_DETAIL_CARGANDO = \"job_detail_cargando\";\r\nexport const JOB_DETAIL_ERROR = \"job_detail_error\";\r\nexport const JOB_DETAIL_HANDLE_CHANGE = \"job_detail_handle_change\";\r\nexport const JOB_DETAIL_CLEAN_STATE = \"job_detail_clean_state\";\r\nexport const JOB_DETAIL_CRUD = \"job_detail_crud\";\r\nexport const JOB_DETAILS_LIST = \"job_detail_list\";\r\nexport const JOB_DETAIL_HANDLE_VALIDATION = \"job_detail_handle_validation\";\r\n\r\nexport const GetJobDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAILS_LIST};\r\n}\r\n\r\nexport const GetJobDetailByPersonalDetailId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/JobDetailByPersonalDetailId?personalDetailId=${data.personalDetailId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\n\r\nexport const GetJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'job_detail_put'};\r\n}\r\n\r\nexport const PostJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_HANDLE_VALIDATION, \r\n    GetJobDetails,\r\n    GetJobDetailByPersonalDetailId,\r\n    GetJobDetail,\r\n    PutJobDetail,\r\n    PostJobDetail,\r\n    DeleteJobDetail\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const jobDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const jobDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetJobDetails\":\r\n          answer = await GetJobDetails(); \r\n          break;\r\n\r\n        case \"GetJobDetailByPersonalDetailId\":\r\n          answer = await GetJobDetailByPersonalDetailId(data);\r\n          break;\r\n        \r\n          case \"GetJobDetail\":\r\n          answer = await GetJobDetail(data);\r\n          break;\r\n\r\n        case \"PutJobDetail\":\r\n          answer = await PutJobDetail(data);\r\n          break;\r\n\r\n        case \"PostJobDetail\":\r\n          answer = await PostJobDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteJobDetail\":\r\n          answer = await DeleteJobDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: JOB_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as jobDetailActions from './reducer/jobDetailActions'\r\n\r\nclass JobDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, jobDetailMethods} = this.props;\r\n        personalDetailId && await jobDetailMethods({personalDetailId}, 'GetJobDetailByPersonalDetailId');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            jobDetailMethods, \r\n            jobDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PersonDetailId,\r\n                DateAdmission,\r\n                Contract,\r\n                Benefits,\r\n                IntegratedSalary,\r\n                DailySalary,\r\n                Type\r\n            }},\r\n            personalDetailId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PersonDetailId: PersonDetailId ? PersonDetailId : personalDetailId,\r\n            DateAdmission: DateAdmission ? DateAdmission : '',\r\n            Contract: Contract ? Contract : '',\r\n            Benefits: Benefits ? Benefits : '',\r\n            IntegratedSalary: IntegratedSalary ? IntegratedSalary : '',\r\n            DailySalary: DailySalary ? DailySalary : '',\r\n            Type: Type ? Type : ''\r\n        }\r\n        await jobDetailMethods(model, action);\r\n    }\r\n\r\n    actionJobDetail = async () => {\r\n        const {\r\n            jobDetailCleanState,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutJobDetail');\r\n        }else{\r\n            await this.sendAction('PostJobDetail')\r\n        }\r\n        if(this.props.jobDetailReducer.data.Id && reDirect){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            jobDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { jobDetailCleanState } = this.props;\r\n        jobDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            jobDetailHandleValidation,\r\n            jobDetailHandleChange,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    DateAdmission,\r\n                    Contract,\r\n                    Benefits,\r\n                    IntegratedSalary,\r\n                    DailySalary,\r\n                    Type\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionJobDetail}\r\n                textButton={Id ? 'Guardar Información Laboral' : 'Crear Información Laboral'}\r\n                textButtonLoading={Id ? 'Guardando Información Laboral...' : 'Creando Información Laboral...'}\r\n                validations={validations}\r\n                handleValidations={jobDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Ingreso'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'DateAdmission'}\r\n                    placeHolder={''}\r\n                    inputValue={DateAdmission}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.DateAdmission}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de Contrato'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Contract'}\r\n                    placeHolder={'Selecciona el tipo de Contrato'}\r\n                    inputValue={Contract}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Contract}\r\n                    optionPlaceHolder={'Selecciona el tipo de Contrato'}\r\n                    options={[\r\n                        {Id:'Eventual',Name:'Eventual'},\r\n                        {Id:'Planta',Name:'Planta'}\r\n                    ]}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Prestaciones'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Benefits'}\r\n                    placeHolder={'Selecciona el tipo de Prestaciones'}\r\n                    inputValue={Benefits}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Benefits}\r\n                    optionPlaceHolder={'Selecciona el tipo de Prestaciones'}\r\n                    options={[\r\n                        {Id:'LFT',Name:'LFT'},\r\n                        {Id:'CC',Name:'CC'}\r\n                    ]}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Diario'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'DailySalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={DailySalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.DailySalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Integrado'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'IntegratedSalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={IntegratedSalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.IntegratedSalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Prestaciones'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Benefits'}\r\n                    placeHolder={'Selecciona el tipo de Prestaciones'}\r\n                    inputValue={Benefits}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Benefits}\r\n                    optionPlaceHolder={'Selecciona el tipo de Prestaciones'}\r\n                    options={[\r\n                        {Id:'LFT',Name:'LFT'},\r\n                        {Id:'CC',Name:'CC'}\r\n                    ]}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Puesto'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Type'}\r\n                    placeHolder={'Selecciona el tipo de Puesto'}\r\n                    inputValue={Type}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Type}\r\n                    optionPlaceHolder={'Selecciona el tipo de Puesto'}\r\n                    options={[\r\n                        {Id:'S',Name:'S'},\r\n                        {Id:'C',Name:'C'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({jobDetailReducer}) => {\r\n    return {jobDetailReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...jobDetailActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDetail);\r\n","import ComponentJobDetails from './JobDetails'\r\n\r\nexport const JobDetails = ComponentJobDetails;","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport { JobDetails} from '../../components-job-detail'\r\n\r\n\r\n\r\n\r\nexport const CreateJobDetail = ({ reDirect=''}) => {\r\n    const {personalDetailId} = useParams();\r\n    const history = useHistory();\r\n\r\n    const jobDetailReducer = useSelector(state => state.jobDetailReducer);\r\n    const {data: {Id}} = jobDetailReducer;\r\n    \r\n    return (\r\n        <>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea Información Laboral del Empleado' : 'Actualiza Información Laboral del Empleado'}</h5>\r\n                        <JobDetails personalDetailId={personalDetailId} history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateJobDetail = ({reDirect=''}) => {\r\n    const {personalDetailId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>            \r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Actualiza Información Laboral del Empleado</h5>\r\n                        <JobDetails personalDetailId={personalDetailId}  history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport {Position, ListOfPositions as Positions, ListFromPositions} from '../../components-position'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\n\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\nexport const ListOfPositions = ({reDirect, reDirectBase, reDirectCreate,  history}) =>{\r\n    const {companyId} = useParams();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    debugger\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={reDirectBase.replace('companyId', companyId)} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n            <Positions reDirect={reDirect} create={reDirectCreate}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = ({reDirect, reDirectBase}) => {\r\n    const history = useHistory();\r\n    const {companyId, positionId} = useParams();\r\n    debugger\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Col lg=\"6\" className='mb-5'>\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!positionId ? 'Crear Puesto' : 'Guardar Puesto'}</h5>\r\n                        <Position \r\n                            positionId={positionId} \r\n                            companyId={companyId} \r\n                            history={history} \r\n                            reDirect={reDirect.replace('companyId', companyId)} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Responsabilidades</h5>\r\n                        <ListFromPositions.ListOfResponsabilities /> \r\n                        <h5 className=\"font-weight-bold mb-3\">Descripciones</h5>\r\n                        <ListFromPositions.ListOfDescriptions />     \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfPersonalDetails = ({ title='Colaboradores', redirectUser, create='/create-personal-detail'}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(personalDetailActions.personalDetailMethods({companyId},'GetPersonalDetailsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (personalDetailId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-personal-detail/${personalDetailId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_personal_details\r\n    } = personalDetailReducer;\r\n    \r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Colaboradores</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Apellido Paterno','Apellido Materno','Acciones']}\r\n                propertiesTable={['Name', 'LastName', 'SecondLastName']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_personal_details}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empleado', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPersonalDetails;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\nclass PersonDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, personalDetailMethods} = this.props;\r\n        personalDetailId && await personalDetailMethods({Id: personalDetailId}, 'GetPersonalDetail');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            personalDetailMethods, \r\n            personalDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                LastName,\r\n                SecondLastName,\r\n                CompanyId,\r\n                RFC,\r\n                Birthdate,\r\n                Gender\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            LastName: LastName ? LastName : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            SecondLastName: SecondLastName ? SecondLastName : '',\r\n            RFC: RFC ? RFC : '',\r\n            Birthdate: Birthdate ? Birthdate : '',\r\n            Gender: Gender ? Gender : ''\r\n        }\r\n        await personalDetailMethods(model, action);\r\n    }\r\n\r\n    actionPersonalDetail = async () => {\r\n        const {\r\n            personalDetailCleanState,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPersonalDetail');\r\n        }else{\r\n            await this.sendAction('PostPersonalDetail')\r\n        }\r\n        if(this.props.personalDetailReducer.data.Id){\r\n            debugger\r\n            reDirect && history.push(`${reDirect}/${this.props.personalDetailReducer.data.Id}`)\r\n            setModal && setModal();\r\n            personalDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { personalDetailCleanState } = this.props;\r\n        personalDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            personalDetailHandleValidation,\r\n            personalDetailHandleChange,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    LastName,\r\n                    SecondLastName,\r\n                    RFC,\r\n                    Birthdate,\r\n                    Gender\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPersonalDetail}\r\n                textButton={Id ? 'Guardar Empleado' : 'Crear Empleado'}\r\n                textButtonLoading={Id ? 'Guardando Empleado...' : 'Creando Empleado...'}\r\n                validations={validations}\r\n                handleValidations={personalDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Paterno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'LastName'}\r\n                    placeHolder={'Introduce apellido paterno'}\r\n                    inputValue={LastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.LastName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Materno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'SecondLastName'}\r\n                    placeHolder={'Introduce apellido materno'}\r\n                    inputValue={SecondLastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.SecondLastName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='RFC'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'RFC'}\r\n                    placeHolder={'Introduce un sueldo'}\r\n                    inputValue={RFC}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.RFC}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Nacimiento'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'Birthdate'}\r\n                    placeHolder={''}\r\n                    inputValue={Birthdate}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Birthdate}\r\n                />\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Genero'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Gender'}\r\n                    placeHolder={''}\r\n                    inputValue={Gender}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Gender}\r\n                /> */}\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sexo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Gender'}\r\n                    placeHolder={'Selecciona el Sexo'}\r\n                    inputValue={Gender}\r\n                    onChange={personalDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Gender}\r\n                    optionPlaceHolder={'Selecciona el Sexo'}\r\n                    options={[\r\n                        {Id:'M',Name:'M'},\r\n                        {Id:'F',Name:'F'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({personalDetailReducer}) => {\r\n    return {personalDetailReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...personalDetailActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonDetail);\r\n","import ComponentListOfPersonalDetails from './ListOfPersonDetails'\r\nimport ComponentPersonDetail from './PersonDetail'\r\n\r\nexport const ListOfPersonDetails = ComponentListOfPersonalDetails;\r\nexport const PersonDetail = ComponentPersonDetail;","import React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {ListOfPersonDetails as PersonDetails, PersonDetail} from '../../components-personal-detail'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport {JobDetails} from './'\r\n\r\n\r\nexport const ListOfPersonDetails = ({ redirectUser }) =>{\r\n    const history = useHistory();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <PersonDetails redirectUser={redirectUser}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\n// Alt + z\r\nexport const CreatePersonDetail = ({redirectUser}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer);\r\n    const {data: {Id}}= personalDetailReducer;\r\n    const {companyId, personalDetailId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n                <ul className=\"list-inline mb-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/employees`} className=\"text-muted\">Empleados</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\"> {!Id ? 'Crear Empleado' : 'Actualizar Empleado'}</small></li>\r\n                </ul>\r\n                <Row>\r\n                    <Col lg=\"6\" className='mb-5'>\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea un Empleado' : 'Actualizar Empleado'}</h5>\r\n                                <PersonDetail personalDetailId={personalDetailId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/update-personal-detail`} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    {Id ? <JobDetails.CreateJobDetail personalDetailId={personalDetailId}/> : '' }\r\n                </Row>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfAreas = ({ title='Areas y departamentos', redirectUser, create='/create-area'}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(areaActions.areaMethods({companyId},'GetAreasByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getArea = (areaId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-area/${areaId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_areas\r\n    } = areaReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Tipo' ,'Acciones']}\r\n                propertiesTable={['Name', 'Type']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_areas}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Area', handleAction: getArea },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfAreas;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\nclass Area extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {areaId, areaMethods} = this.props;\r\n        areaId && await areaMethods({Id: areaId}, 'GetArea');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            areaMethods, \r\n            areaReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                CompanyId,\r\n                Taken,\r\n                Type,\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Taken: Taken ? Taken : false,\r\n            Type: Type ? Type : '',\r\n        }\r\n        await areaMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            areaReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutArea');\r\n        }else{\r\n            await this.sendAction('PostArea')\r\n        }\r\n        if(this.props.areaReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { areaCleanState } = this.props;\r\n        areaCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            areaHandleValidation,\r\n            areaHandleChange,\r\n            areaReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Type\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            \r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Area' : 'Crear Area'}\r\n                textButtonLoading={Id ? 'Guardando Area...' : 'Crear Area...'}\r\n                validations={validations}\r\n                handleValidations={areaHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={areaHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Type'}\r\n                    placeHolder={'Selecciona el tipo de Area'}\r\n                    inputValue={Type}\r\n                    onChange={areaHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Type}\r\n                    optionPlaceHolder={'Selecciona el tipo de Area'}\r\n                    options={[\r\n                        {Id:'Area',Name:'Area'},\r\n                        {Id:'Departamento',Name:'Departamento'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({areaReducer}) => {\r\n    return {areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...areaActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Area);\r\n","import ComponentListOfAreas from './ListOfAreas'\r\nimport ComponentArea from './Area'\r\n\r\nexport const ListOfAreas = ComponentListOfAreas;\r\nexport const Area = ComponentArea;","import {ListOfAreas as Areas, Area} from '../../components-area'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfAreas = ({redirectUser}) =>{\r\n    const history = useHistory();\r\n\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2>{TradeName}</h2>\r\n            <Areas redirectUser={redirectUser} history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateArea = ({redirectUser}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer);\r\n    const {data: {Id}}= areaReducer;\r\n    const {companyId, areaId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/areas`} className=\"text-muted\">Areas</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{!Id ? 'Crear Area' : 'Actualizar Area'} </small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Puesto</h5>\r\n                            <Area  areaId={areaId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/areas`} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n","import * as ComponentCompanies from './Company'\r\nimport * as ComponentJobDetails from './JobDetails'\r\nimport * as ComponentPosition from './Position'\r\nimport * as ComponentPersonDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\nexport const Company = ComponentCompanies;\r\nexport const JobDetails = ComponentJobDetails;\r\nexport const Position = ComponentPosition;\r\nexport const PersonDetail = ComponentPersonDetail;\r\nexport const Area = ComponentArea;","import {Company, CompanyIndicators, ListOfCompanies as Companies} from '../../components-company'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\n\r\nimport {Company as CompanyTemplate} from '../templates'\r\n\r\nexport const ListOfCompanies = ({reDirect, history}) =>{\r\n    return (\r\n        <Companies reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCompany = () => {\r\n    const {userId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Crea una Empresa</h5>\r\n                                <Company userId={userId} history={history} reDirect={'/admin-dashboard/company'} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Indicators = () => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const {companyId} = useParams();\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <CompanyTemplate.Indicators \r\n                    companyName={TradeName} \r\n                    companyId={companyId} \r\n                    hrefBase={'admin-dashboard'}\r\n                />\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row } from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\nimport {Position as TemplatePosition} from '../templates'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfPositions = () =>{\r\n    return (\r\n        <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <TemplatePosition.ListOfPositions \r\n                reDirect={`/admin-dashboard/company/companyId/update-position/positionId`}\r\n                reDirectBase='/admin-dashboard/company/companyId'\r\n                reDirectCreate='/admin-dashboard/company/companyId/create-position'\r\n            />\r\n        </AdminDashboardPages.TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = () => {\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/admin-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect={`/admin-dashboard/company/companyId/positions`}\r\n                    />\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import {OrganizationChart, UpdateChild, ViewOrganizationChart} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {AdminDashboardPages} from './'\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/admin-dashboard/company/${companyId}`}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/admin-dashboard/company/${companyId}/organization-chart`}/>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport { PersonDetail as TemplatesPersonalDetail} from '../templates'\r\n\r\n\r\nexport const ListOfPersonDetails = () =>{\r\n    \r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/admin-dashboard' />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport {Area as TemplateArea} from '../templates'\r\n\r\nexport const ListOfAreas = () =>{\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplateArea.ListOfAreas redirectUser={'/admin-dashboard'} />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentUsers from './Users'\r\nimport * as ComponentSections from './Sections'\r\nimport * as ComponentCourses from './Courses'\r\nimport * as ComponentProducts from './Products'\r\nimport * as ComponentDashboard from './Dashboard'\r\nimport * as ComponentCompany from './Company'\r\nimport * as ComponentPositions from './Position'\r\nimport * as ComponentOrganizationChart from './OrganizationChart'\r\nimport * as ComponentPersonalDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\n\r\nexport const AdminUsersPages = ComponentUsers;\r\nexport const AdminSectionsPages = ComponentSections;\r\nexport const AdminCoursesPages = ComponentCourses;\r\nexport const AdminProductPages = ComponentProducts;\r\nexport const AdminDashboardPages = ComponentDashboard;\r\nexport const AdminCompanyPages = ComponentCompany;\r\nexport const AdminPositionsPages = ComponentPositions;\r\nexport const AdminOrganizationChart = ComponentOrganizationChart;\r\nexport const AdminPersonalDetail = ComponentPersonalDetail;\r\nexport const AdminArea = ComponentArea;\r\n\r\n\r\n\r\n","import {ViewOrganizationChart, UpdateChild} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {DashboardUserTemplate} from './'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/user-dashboard/company/${companyId}`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/user-dashboard/company/${companyId}/organization-chart`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react' \r\nimport {Row} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {Container} from 'reactstrap'\r\nimport {Navbars} from '../../config-components'\r\nimport {\r\n    Company, \r\n    Position as TemplatePosition, \r\n    PersonDetail as TemplatesPersonalDetail,\r\n    Area as TemplateArea\r\n} from '../templates'\r\nimport * as ComponentsOrganizatioChart from './OrganizationChart'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { } from '../templates'\r\n\r\n\r\nexport const DashboardUserTemplate = ({children}) => {\r\n    return(\r\n            <>\r\n                <Navbars.User />\r\n                <section className=\"bg-light h-100 py-6\">\r\n                    <Container>\r\n                        {children}\r\n                    </Container>\r\n                </section>\r\n            </>\r\n    )\r\n}\r\n\r\nexport const DashboardUserPage = () => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const {companyId} = useParams();\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <Company.Indicators companyName={TradeName} companyId={companyId} hrefBase={'user-dashboard'}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPositionPage = () =>{\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatePosition.ListOfPositions \r\n                    reDirect={`/user-dashboard/company/companyId/update-position/positionId`}\r\n                    reDirectBase='/user-dashboard/company/companyId'\r\n                    reDirectCreate='/user-dashboard/company/companyId/create-position'\r\n                />\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserCreatePosition = () =>{\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/user-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect='/user-dashboard/company/companyId/positions'\r\n                    />\r\n                </Row>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPersonDetails = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/user-dashboard' />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfAreas = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplateArea.ListOfAreas redirectUser={'/user-dashboard'} />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserOrganizationChart = ComponentsOrganizatioChart;","// Imports de react.\r\nimport React from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\n// Imports del landing page\r\nimport * as Landings from './pages/landing'\r\nimport {NotFoundPage} from './pages/NotFoundPage'\r\n\r\n// Imports de PageSessions.\r\n//import {LoginPage} from './pages/Login'\r\nimport {\r\n  LoginPage,\r\n  SignUpPage,\r\n  ForgotPassword,  \r\n  CheckYourAccount,\r\n  ChangePasswordPage\r\n} from './pages/session'\r\n\r\n// Imports de Páginas del administrador\r\nimport {\r\n  AdminUsersPages, \r\n  AdminSectionsPages, \r\n  AdminCoursesPages,\r\n  AdminProductPages,\r\n  AdminDashboardPages,\r\n  AdminCompanyPages,\r\n  AdminPositionsPages,\r\n  AdminOrganizationChart,\r\n  AdminPersonalDetail,\r\n  AdminArea\r\n}from './pages/admin'\r\n\r\n/* Imports de Páginas de usario */\r\nimport {\r\n  DashboardUserPage,\r\n  UserOrganizationChart,\r\n  UserListOfPositionPage,\r\n  UserCreatePosition,\r\n  UserListOfPersonDetails,\r\n  UserCreatePersonDetail,\r\n  UserUpdatePersonDetail,\r\n  UserListOfAreas,\r\n  UserCreateArea,\r\n  UserUpdateArea\r\n} from './pages/user'\r\n\r\nimport {OrganizationChart} from './components-organization-chart'\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter >\r\n        <Switch>\r\n          {/* Páginas de Home */}\r\n          <Route  exact path=\"/\" component={Landings.SoftwareAgency}></Route>\r\n          <Route  exact path=\"/products\" component={Landings.Products}></Route>\r\n\r\n         \r\n\r\n          {/* Páginas para el manejo de sesión */}\r\n          <Route  exact path=\"/login\" component={LoginPage}></Route>\r\n          <Route  exact path=\"/sign-up\" component={SignUpPage}></Route>\r\n          <Route  exact path=\"/forgot-password\" component={ForgotPassword}></Route>\r\n          <Route  exact path=\"/check-your-account\" component={CheckYourAccount}></Route>\r\n          <Route  exact path=\"/change-password/:code/:email\" component={ChangePasswordPage}></Route>\r\n  \r\n          {/* Páginas para el admin */}\r\n          <Route  exact path=\"/admin-dashboard\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard/:indicator\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-user/:userId\" component={AdminUsersPages.ReadUser}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-admin/:userId\" component={AdminUsersPages.ReadAdmin}></Route>\r\n          { /* crud empresas */ }\r\n          <Route  exact path=\"/admin-dashboard/create-company/:userId\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId\" component={AdminCompanyPages.Indicators}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/positions\" component={AdminPositionsPages.ListOfPositions}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-position\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-position/:positionId\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={AdminOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart/node/:nodeId\" component={AdminOrganizationChart.UpdateCurrent}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/employees\" component={AdminPersonalDetail.ListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-personal-detail\" component={AdminPersonalDetail.CreatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={AdminPersonalDetail.UpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/areas\" component={AdminArea.ListOfAreas}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-area\" component={AdminArea.CreateArea}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-area/:areaId\" component={AdminArea.UpdateArea}></Route>\r\n\r\n         \r\n          {/* <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={OrganizationChart}></Route> */}\r\n\r\n          <Route  exact path=\"/admin-dashboard/product/:productId/:section\" component={AdminProductPages.EditProduct}></Route>\r\n          { /* crud videos para admins */ }\r\n          <Route  exact path=\"/admin-dashboard/course/:courseId\" component={AdminCoursesPages.EditCourse}></Route>\r\n          <Route  exact path=\"/admin-dashboard/section/:courseId\" component={AdminSectionsPages.CreateSection}></Route>\r\n          <Route exact path=\"/player/watch-class/:productId/:courseId\" component={AdminCoursesPages.WhatchCourse}/>\r\n\r\n          {/* Páginas para dashboard de usuarios */}\r\n          <Route  exact path=\"/user-dashboard/company/:companyId\" component={DashboardUserPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/organization-chart\" component={UserOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/positions\" component={UserListOfPositionPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-position\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-position/:positionId\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/employees\" component={UserListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-personal-detail\" component={UserCreatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={UserUpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/areas\" component={UserListOfAreas}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-area\" component={UserCreateArea}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-area/:areaId\" component={UserUpdateArea}></Route>\r\n\r\n          <Route  exact path=\"/organigrama-prueba\" component={OrganizationChart}></Route>\r\n\r\n\r\n          {/* Vista pare ver un video de un curso */}\r\n          <Route path=\"*\" component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION\r\n} from \"./loginTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    roles: localStorage.getItem(\"role\"),\r\n    grant_type: \"password\",\r\n    username: \"\",\r\n    password: \"\",\r\n    access_token: \"\",\r\n  },\r\n  validations: {\r\n    username: \"\",\r\n    password: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          roles: localStorage.getItem(\"role\"),\r\n          grant_type: \"password\",\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          grant_type: \"password\",\r\n          roles: action.payload.roles,\r\n          username: action.payload.username,\r\n          password: action.payload.password,\r\n          access_token: action.payload.access_token,\r\n          userName: action.payload.userName,\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: \"\",\r\n    Roles: \"\",\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"email\",\r\n    TypeUser: '',\r\n    Idd: \"\",\r\n  },\r\n  validations: {\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"\",\r\n    Idd: \"\",\r\n  },\r\n};\r\n\r\nconst reducer =  (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: \"\",\r\n          Roles: \"\",\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser:\"\"\r\n        },\r\n      };\r\n    case SIGN_UP_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          Roles: action.payload.Roles,\r\n          UserName: action.payload.UserName,\r\n          PhoneNumber: action.payload.PhoneNumber,\r\n          Email: action.payload.Email,\r\n          Password: action.payload.Password,\r\n          ConfirmPassword: action.payload.ConfirmPassword,\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: action.payload.Idd,\r\n          TypeUser: action.payload.TypeUser\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n      };\r\n\r\n      case SIGN_UP_PRELOADED_DATA:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Roles: action.payload.Roles,\r\n            UserName: action.payload.UserName,\r\n            PhoneNumber: action.payload.PhoneNumber,\r\n            Email: action.payload.Email,\r\n            Password: action.payload.Password,\r\n            ConfirmPassword: action.payload.ConfirmPassword,\r\n            ValidateByPhoneOrEmail: \"email\",\r\n            Idd: action.payload.Idd,\r\n            TypeUser: action.payload.TypeUser\r\n          },\r\n          validations: {\r\n            UserName: \"\",\r\n            PhoneNumber: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            ValidateByPhoneOrEmail: \"\",\r\n            Idd: \"\",\r\n            TypeUser: \"\"\r\n          },\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n  } from \"./changePasswordTypes\";\r\n\r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      phoneOrEmail: '',\r\n      Code:'',\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n      usernameOrEmailOrPhoneNumber:'',\r\n    },\r\n    validations: {\r\n      phoneOrEmail: \"\",\r\n      Code:true,\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n    },\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_PASSWORD_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_USER:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              cargando: false,\r\n              error: \"\",\r\n            },\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_CRUD,\r\n    COMPANIES_LIST,\r\n    COMPANY_HANDLE_VALIDATION\r\n  } from \"./companyTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity: '',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      \r\n    },\r\n    validations: {\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity:'',\r\n      fileCover: ''\r\n    },\r\n    list_companies: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COMPANY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COMPANY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity: '',\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity:'',\r\n            fileCover: ''\r\n          },\r\n          list_companies: [],\r\n        };\r\n      case COMPANY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            UserId: action.payload.UserId,\r\n            TradeName:  action.payload.TradeName,\r\n            BusinessName: action.payload.BusinessName,\r\n            BusinessActivity:  action.payload.BusinessActivity,\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: true,\r\n            BusinessName: true,\r\n            BusinessActivity: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COMPANIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_companies: action.payload,\r\n        };\r\n  \r\n      case \"company_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_CRUD,\r\n    POSITIONS_LIST,\r\n    POSITION_HANDLE_VALIDATION\r\n  } from \"./positionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      Description: \"\",\r\n      Description2: \"\",\r\n      CompanyId:'',\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      Description2: \"\",\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    list_positions: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case POSITION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case POSITION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            Description: \"\",\r\n            Description2: \"\",\r\n            CompanyId:'',\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Description2: \"\",\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          list_positions: [],\r\n        };\r\n      case POSITION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            Description: action.payload.Description,\r\n            Description2: action.payload.Description2,\r\n            CompanyId: action.payload.CompanyId,\r\n            Objective: action.payload.Objective,\r\n            Knowledge: action.payload.Knowledge,\r\n            Salary: action.payload.Salary\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Description: action.payload.Description ? true : '',\r\n            Description2: action.payload.Description2 ? true : '',\r\n            Objective: action.payload.Objective ? true: '',\r\n            Knowledge: action.payload.Knowledge ? action.payload.Knowledge: '',\r\n            Salary: action.payload.Salary ? true: ''\r\n          },\r\n          list_positions: [],\r\n        };\r\n  \r\n      case POSITIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_positions: action.payload,\r\n        };\r\n  \r\n      case \"position_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_CRUD,\r\n    ORGANIZATION_CHARTS_LIST,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n    ORGANIZATION_CHART_CHILD\r\n  } from \"./organizationChartTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated: '',\r\n      PositionId: '',\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n      CompanyId:0,\r\n      PositionChartId:0,\r\n      PositionName:'',\r\n      PersonName: '',\r\n      ChartTree1:[],\r\n    },\r\n    validations: {\r\n      PositionId: \"\",\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n    },\r\n    list_organization_chart: [],\r\n    read_child: {}\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ORGANIZATION_CHART_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated: '',\r\n            PositionId: '',\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n            CompanyId:0,\r\n            PositionChartId:0,\r\n            PositionName:'',\r\n            PersonName: '',\r\n            ChartTree1:[],\r\n\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n          read_child: {}\r\n\r\n        };\r\n      case ORGANIZATION_CHART_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id, \r\n            DateCreated: action.payload.DateCreated,\r\n            PositionId:  action.payload.PositionId,\r\n            PersonDetailId: action.payload.PersonDetailId,\r\n            AreasId: action.payload.AreasId,\r\n            CompanyId: action.payload.CompanyId,\r\n            PositionChartId:action.payload.PositionChartId,\r\n            PositionName:action.payload.PositionName,\r\n            PersonName: action.payload.PersonName,\r\n            ChartTree1: action.payload.ChartTree1,\r\n          },\r\n          validations: {\r\n            PositionId: '',\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n      case ORGANIZATION_CHARTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_organization_chart: action.payload,\r\n        };\r\n      case ORGANIZATION_CHART_CHILD:\r\n        debugger\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          read_child: action.payload[0],\r\n        };\r\n  \r\n      case \"organization_chart_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_CRUD,\r\n    PERSONAL_DETAILS_LIST,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      LastName: \"\",\r\n      SecondLastName:'',\r\n      CompanyId:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      LastName:'',\r\n      SecondLastName:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:''\r\n    },\r\n    list_personal_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PERSONAL_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            LastName: \"\",\r\n            SecondLastName:'',\r\n            CompanyId:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            LastName:'',\r\n            SecondLastName:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:''\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n      case PERSONAL_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            LastName:  action.payload.LastName,\r\n            SecondLastName: action.payload.SecondLastName,\r\n            CompanyId: action.payload.CompanyId,\r\n            RFC: action.payload.RFC,\r\n            Birthdate: action.payload.Birthdate?.slice(0, 10),\r\n            Gender:action.payload.Gender \r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            LastName: action.payload.LastName ? true : '',\r\n            SecondLastName: action.payload.SecondLastName ? true : '',\r\n            RFC: action.payload.RFC ? true : '',\r\n            Birthdate: action.payload.Birthdate ? true : '',\r\n            Gender: action.payload.Gender ? true : ''\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n  \r\n      case PERSONAL_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_personal_details: action.payload,\r\n        };\r\n  \r\n      case \"personal_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_CRUD,\r\n    AREAS_LIST,\r\n    AREA_HANDLE_VALIDATION\r\n  } from \"./areaTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      CompanyId:'',\r\n      Type:'',\r\n     \r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Type:'',\r\n    },\r\n    list_areas: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case AREA_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case AREA_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case AREA_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            CompanyId: \"\",\r\n            Type:'',\r\n           \r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Type:'',\r\n          },\r\n          list_areas: [],\r\n        };\r\n      case AREA_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CompanyId:  action.payload.CompanyId,\r\n            Type:  action.payload.Type,\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Type: action.payload.Type ? true : '',\r\n          },\r\n          list_areas: [],\r\n        };\r\n  \r\n      case AREAS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_areas: action.payload,\r\n        };\r\n  \r\n      case \"area_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_CRUD,\r\n    JOB_DETAILS_LIST,\r\n    JOB_DETAIL_HANDLE_VALIDATION\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      PersonDetailId:'',\r\n      DateAdmission: \"\",\r\n      Contract:'',\r\n      Benefits:'',\r\n      IntegratedSalary:'',\r\n      DailySalary:'',\r\n      Type:''\r\n    },\r\n    validations: {\r\n        DateAdmission: \"\",\r\n        Contract:'',\r\n        Benefits:'',\r\n        IntegratedSalary:'',\r\n        DailySalary:'',\r\n        Type:''\r\n    },\r\n    list_job_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case JOB_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case JOB_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PersonDetailId:'',\r\n            DateAdmission:'',\r\n            Contract:'',\r\n            Benefits:'',\r\n            IntegratedSalary:'',\r\n            DailySalary:'',\r\n            Type:''\r\n          },\r\n          validations: {\r\n              DateAdmission: \"\",\r\n              Contract:'',\r\n              Benefits:'',\r\n              IntegratedSalary:'',\r\n              DailySalary:'',\r\n              Type:''\r\n          },\r\n          list_job_details: [],\r\n        };\r\n      case JOB_DETAIL_CRUD:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PersonDetailId: action.payload.PersonDetailId,\r\n            DateAdmission: action.payload.DateAdmission?.slice(0, 10),\r\n            Contract: action.payload.Contract,\r\n            Benefits: action.payload.Benefits,\r\n            IntegratedSalary: action.payload.IntegratedSalary,\r\n            DailySalary: action.payload.DailySalary,\r\n            Type: action.payload.Type\r\n          },\r\n          validations: {\r\n              DateAdmission: action.payload.DateAdmission ? true : '',\r\n              Contract: action.payload.Contract ? true : '',\r\n              Benefits: action.payload.Benefits ? true : '',\r\n              IntegratedSalary: action.payload.IntegratedSalary ? true : '',\r\n              DailySalary: action.payload.DailySalary ? true : '',\r\n              Type: action.payload.Type ? true : ''\r\n          },\r\n          \r\n          list_job_details: [],\r\n        };\r\n  \r\n      case JOB_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_job_details: action.payload,\r\n        };\r\n  \r\n      case \"personal_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_CRUD,\r\n    CATEGORIES_LIST,\r\n    CATEGORY_HANDLE_VALIDATION\r\n  } from \"./categoryTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_VALIDATION: \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories: [],\r\n        };\r\n      case CATEGORY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories_products: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories_products: [],\r\n        };\r\n      case CATEGORY_PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories_products: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_CRUD,\r\n    PRODUCTS_LIST,\r\n    PRODUCT_HANDLE_VALIDATION\r\n  } from \"./productTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n      Price: '',\r\n      ProductCategoryId:'',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      Categories: []\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      ProductCategoryId:'',\r\n      fileCover: ''\r\n    },\r\n    list_products: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n            Price: '',\r\n            ProductCategoryId:'',\r\n            Blobs:[],\r\n            Categories: [],\r\n            fileCover: ''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Price:'',\r\n            ProductCategoryId:'',\r\n            fileCover: ''\r\n          },\r\n          list_products: [],\r\n        };\r\n      case PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n            Price: action.payload.Price,\r\n            ProductCategoryId:action.payload.ProductCategoryId,\r\n            Blobs: action.payload.Blobs,\r\n            Categories: action.payload.Categories\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n            Price: true,\r\n            ProductCategoryId: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_products: action.payload,\r\n        };\r\n  \r\n      case \"product_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_CRUD,\r\n    PRODUCT_DETAILS_LIST,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      SubTitle:'',\r\n      Description:'',\r\n      ProductId: '',\r\n      BlobId: '',\r\n      fileZip: '',\r\n      Blob: {}\r\n    },\r\n    validations: {\r\n        SubTitle:'',\r\n        Description:'',\r\n        fileZip: ''\r\n    },\r\n    list_product_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            SubTitle:'',\r\n            Description:'',\r\n            ProductId: '',\r\n            BlobId: '',\r\n            fileZip: '',\r\n            Blob: {}\r\n          },\r\n          validations: {\r\n              SubTitle:'',\r\n              Description:'',\r\n              fileZip: ''\r\n          },\r\n          list_product_details: [],\r\n        };\r\n      case PRODUCT_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            SubTitle:action.payload.SubTitle,\r\n            Description:action.payload.Description,\r\n            ProductId: action.payload.ProductId,\r\n            BlobId: action.payload.BlobId,\r\n            Blob: action.payload.Blob\r\n          },\r\n          validations: {\r\n              SubTitle:true,\r\n              Description:true,\r\n              fileZip: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCT_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_product_details: action.payload,\r\n        };\r\n  \r\n      case \"product_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","export const COURSE_CARGANDO = \"course_cargando\";\r\nexport const COURSE_ERROR = \"course_error\";\r\nexport const COURSE_HANDLE_CHANGE = \"course_handle_change\";\r\nexport const COURSE_CLEAN_STATE = \"course_clean_state\";\r\nexport const COURSE_CRUD = \"course_crud\";\r\nexport const COURSES_LIST = \"courses_list\";\r\nexport const COURSE_HANDLE_VALIDATION = \"course_handle_validation\";","import {\r\n    COURSE_CARGANDO,\r\n    COURSE_ERROR,\r\n    COURSE_HANDLE_CHANGE,\r\n    COURSE_CLEAN_STATE,\r\n    COURSE_CRUD,\r\n    COURSES_LIST,\r\n    COURSE_HANDLE_VALIDATION\r\n  } from \"./courseTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    list_courses: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COURSE_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COURSE_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          list_courses: [],\r\n        };\r\n      case COURSE_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COURSES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_courses: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    list_sections: [],\r\n    list_sections_select: []\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case SECTION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case SECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name: \"\",\r\n            CourseId: \"\"\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            CourseId:'',\r\n          },\r\n          list_sections: [],\r\n          list_sections_select: []\r\n        };\r\n      case SECTION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CourseId:action.payload.CourseId,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            CourseId:true,\r\n          },\r\n          list_brands: [],\r\n          list_sections_select: []\r\n        };\r\n  \r\n      case SECTIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections: action.payload,\r\n        };\r\n      case SECTIONS_SELECT:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections_select: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_CRUD,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    ADMIN_USERS_LIST,\r\n  } from \"./adminTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      cargandoUsername: false,\r\n      errorUsername: '',\r\n      cargandoEmail: false,\r\n      errorEmail: '',\r\n      cargandoPhone: false,\r\n      errorPhone: '',\r\n      cargandoPassword: false,\r\n      errorPassword: '',\r\n      cargandoValidateAccount: '',\r\n      errorValidateAccount: '',\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: '',\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    validations: {\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    list_users: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ADMIN_CARGANDO:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload]: true,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            errorValidateAccount: ''\r\n          },\r\n        };\r\n      case ADMIN_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            cargandoValidateAccount: false,\r\n            [action.payload.typeError]: action.payload.messageError,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n              ? [action.payload.e.files[0]]\r\n              : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_VALIDATION:\r\n        return {\r\n            ...state,\r\n            validations: {\r\n              ...state.validations,\r\n              [action.payload.name]: action.payload.isInvalid,\r\n            },\r\n          };\r\n      case ADMIN_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {},\r\n          validations: {},\r\n        };\r\n      case ADMIN_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload.cargando]: false,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            UserName: action.payload.UserName ? action.payload.UserName : '',\r\n            Email: action.payload.Email ? action.payload.Email : '',\r\n            EmailConfirmed: action.payload.EmailConfirmed ? action.payload.EmailConfirmed : '',\r\n            PhoneNumber: action.payload.PhoneNumber ? action.payload.PhoneNumber : '',\r\n          },\r\n          validations: {\r\n            UserName: true,\r\n            Email: true,\r\n            EmailConfirmed: '',\r\n            PhoneNumber: '',\r\n            Password: '',\r\n            ConfirmPassword: '',\r\n          },\r\n        };\r\n  \r\n      case ADMIN_USERS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          list_users: action.payload,\r\n        };\r\n  \r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              errorUsername: '',\r\n              errorEmail: '',\r\n              error: \"\",    \r\n              errorPhone: '',\r\n              errorPassword: '',\r\n              cargando: false,\r\n              cargandoUsername: false,\r\n              cargandoEmail: false,\r\n              cargandoPhone: false,\r\n              cargandoPassword: false,\r\n              errorValidateAccount: '',\r\n              cargandoValidateAccount: false\r\n            },\r\n          };\r\n  \r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    count_products: 0,\r\n    count_courses: 0,\r\n    count_users: 0,\r\n    count_admins: 0,\r\n    count_companies: 0,\r\n    count_positions: 0,\r\n    count_personal_details: 0,\r\n    count_areas: 0\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ANALYTICS_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ANALYTICS_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n  \r\n      case ANALYTICS_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: 0,\r\n        };\r\n  \r\n      case ANALYTICS_COUNT_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_COURSES:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_courses: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_USERS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_users: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_ADMINS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_admins: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_COMPANIES:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_companies: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_POSITIONS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_positions: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_PERSONAL_DETAILS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_personal_details: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_AREAS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_areas: action.payload,\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: 0,\r\n    UserId: \"\",\r\n    DateCreated: \"\",\r\n    DateModified: \"\",\r\n    BlobName: \"\",\r\n    BlobTypeId: \"\",\r\n    ContainerName: \"\",\r\n    IsPrivate: true,\r\n    Uri: null,\r\n    BlobType: null,\r\n    Brand_Blob: [],\r\n    Product_Blob: [],\r\n    BlogPosts: [],\r\n    AspNetUsers: [],\r\n  },\r\n  validations: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case BLOB_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case BLOB_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case BLOB_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n\r\n    case BLOB_HANDLE_VALIDATION:\r\n      let messageError = \"\";\r\n      if (action.payload.props.valueInput === \"\") {\r\n        messageError = \"El campo no puede ir vacio\";\r\n      }\r\n      if (action.payload.props.isInvalid !== \"\") {\r\n        messageError = action.payload.props.isInvalid;\r\n      }\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: messageError,\r\n        },\r\n      };\r\n    case BLOB_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: 0,\r\n          UserId: \"\",\r\n          DateCreated: \"\",\r\n          DateModified: \"\",\r\n          BlobName: \"\",\r\n          BlobTypeId: \"\",\r\n          ContainerName: \"\",\r\n          IsPrivate: true,\r\n          Uri: null,\r\n          BlobType: null,\r\n          Brand_Blob: [],\r\n          Product_Blob: [],\r\n          BlogPosts: [],\r\n          AspNetUsers: [],\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    case BLOB_CRUD:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          UserId: action.payload.UserId,\r\n          DateCreated: action.payload.DateCreated,\r\n          DateModified: action.payload.DateModified,\r\n          BlobName: action.payload.BlobName,\r\n          BlobTypeId: action.payload.BlobTypeId + \"\",\r\n          ContainerName: action.payload.ContainerName,\r\n          IsPrivate: action.payload.IsPrivate,\r\n          Uri: action.payload.Uri,\r\n          BlobType: action.payload.BlobType,\r\n          Brand_Blob: action.payload.Brand_Blob,\r\n          Product_Blob: action.payload.Product_Blob,\r\n          BlogPosts: action.payload.BlogPosts,\r\n          AspNetUsers: action.payload.AspNetUsers,\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","// Imports de redux.\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Components-session.\r\nimport loginReducer from \"../components-session/reducer-login/loginReducer\";\r\nimport signUpReducer from \"../components-session/sign-up-reducer/signUpReducer\";\r\nimport changePasswordReducer from \"../components-session/change-password/reducer/changePasswordReducer\";\r\n\r\n// Components\r\nimport companyReducer from '../components-company/reducer/companyReducer'\r\nimport positionReducer from '../components-position/reducer/positionReducer'\r\nimport organizationChartReducer from '../components-organization-chart/reducer/organizationChartReducer'\r\nimport personalDetailReducer from '../components-personal-detail/reducer/personalDetailReducer'\r\nimport areaReducer from '../components-area/reducer/areaReducer'\r\nimport jobDetailReducer from '../components-job-detail/reducer/jobDetailReducer'\r\n\r\n// Components que tienen que ver con producto.\r\nimport categoryReducer from '../components-category/reducer/categoryReducer'\r\nimport categoryProductReducer from '../components-category-product/reducer/categoryProductReducer'\r\nimport productReducer from '../components-product/reducer/productReducer'\r\nimport productDetailReducer from '../components-product-details/reducer/productDetailReducer'\r\n\r\n\r\n// Componentes que tienen que ver con cursos.\r\nimport courseReducer from '../components-course/reducer/courseReducer'\r\nimport sectionReducer from '../components-section/reducer/sectionReducer'\r\n\r\n// Componentes de administrador.\r\nimport adminReducer from '../components-admin/reducer/adminReducer'\r\n// Components de analiticos.\r\nimport analyticsReducer from '../components-analytics/reducer/analyticsReducer'\r\n\r\n// Componentes de blobs.\r\nimport blobReducer from '../components-blob/blob-reducer/blobReducer'\r\n\r\n// Reducers.\r\nexport default combineReducers({\r\n    // Reducers de sesión.\r\n    loginReducer,\r\n    changePasswordReducer,\r\n    signUpReducer,\r\n    // Components.\r\n    companyReducer,\r\n    positionReducer,\r\n    organizationChartReducer,\r\n    personalDetailReducer,\r\n    categoryReducer,\r\n    categoryProductReducer,\r\n    productReducer,\r\n    productDetailReducer,\r\n    areaReducer,\r\n    jobDetailReducer,\r\n    // Componentes que tienen que ver con cursos.\r\n    courseReducer,\r\n    sectionReducer,\r\n    // Componentes de administrador.\r\n    adminReducer,\r\n    // Componentes de analiticos.\r\n    analyticsReducer,\r\n    // Componentes de blobs\r\n    blobReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './scss/app.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Imports de components-api.\r\nimport {setPathApi} from './components-api/ConfigApi';\r\n\r\n// Imports de redux.\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// Google Fonts\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Poppins:400,600', 'sans-serif']\r\n  }\r\n});\r\n\r\n// Store de reducers.\r\nconst store = createStore(reducers, {}, composeWithDevTools(applyMiddleware(reduxThunk)));\r\n\r\n// Configuración de la ruta del api.\r\nsetPathApi();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n      <App />\r\n    {/* </React.StrictMode> */}\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}