{"version":3,"sources":["config-components/Cards.js","components-analytics/reducer/analyticsTypes.js","components-api/ConfigApi.js","components-analytics/reducer/analyticsActions.js","components-api/ApiResponses.js","components-admin/Indicators.js","utils/Arrays.js","utils/index.js","config-components/DropDowns.js","config-components/Filter.js","components-admin/reducer/adminTypes.js","components-admin/reducer/adminActions.js","components-admin/ListOfUsers.js","components-api/index.js","config-components/Inputs.js","config-components/Modals.js","config-components/NotFound.js","config-components/RegularExpressions.js","config-components/Tabs.js","img/product.jpg","img/cristian.jpg","img/Jesus.jpg","img/version-4-logo.svg","img/organigrama.jpeg","img/puestos.jpeg","img/descripciones.jpeg","img/procesos.jpeg","img/index.js","config-components/Logos.js","config-components/Lists.js","components-position/reducer/positionTypes.js","components-position/reducer/positionActions.js","components-position/Positions.js","components-position/ListOfPositions.js","components-position/Responsibilities.js","components-organization-chart/reducer/organizationChartTypes.js","components-organization-chart/reducer/organizationChartActions.js","components-position/index.js","components-position/ReadPosition.js","components-area/reducer/areaTypes.js","components-area/reducer/areaActions.js","components-organization-chart/OrganizationChart.js","components-personal-detail/reducer/personalDetailTypes.js","components-personal-detail/reducer/personalDetailActions.js","components-organization-chart/UpdateChild.js","components-organization-chart/ViewOrganizationChart.js","components-organization-chart/index.js","components-organization-chart/ReadChild.js","config-components/Collapse.js","config-components/ExternalLinks.js","config-components/ListOfHistory.js","config-components/index.js","components-admin/UpdateUserInfo.js","components-admin/index.js","components-admin/ValidateAccount.js","components-admin/SelectUser.js","components-company/reducer/companyTypes.js","components-company/reducer/companyActions.js","components-company/Company.js","components-company/CompanyIndicators.js","components-company/index.js","components-company/ListOfCompanies.js","components-company/ChooseCompany.js","config-components/Navbars.js","img/hero-xs.png","img/vscode.svg","pages/landing/SoftwareAgency.js","components-product/ReadCardProduct.js","components-product/reducer/productTypes.js","components-product/reducer/productActions.js","components-product/CardProduct.js","components-product/ListOfCardProducts.js","components-product/ListOfProducts.js","components-category/reducer/categoryTypes.js","components-category/reducer/categoryActions.js","components-product/index.js","pages/landing/Products.js","pages/landing/index.js","pages/NotFoundPage.js","components-session/reducer-login/loginTypes.js","components-session/reducer-login/loginActions.js","components-session/Login.js","components-session/sign-up-reducer/signUpTypes.js","components-session/sign-up-reducer/signUpActions.js","components-session/SignUp.js","components-session/change-password/reducer/changePasswordTypes.js","components-session/change-password/reducer/changePasswordActions.js","components-session/change-password/ChangePassword.js","components-session/change-password/ChangePasswordForUser.js","components-session/change-password/SendEmail.js","components-session/index.js","pages/session/index.js","pages/admin/Users.js","components-section/reducer/sectionTypes.js","components-section/reducer/sectionActions.js","components-section/Section.js","components-section/ModalSections.js","components-category-product/reducer/categoryProductTypes.js","components-category-product/reducer/categoryProductActions.js","components-blob/blob-reducer/blobType.js","components-blob/blob-reducer/blobActions.js","components-blob/blobUtils.js","components-product/Product.js","components-product/ModalProducts.js","components-section/ListOfSections.js","components-section/index.js","components-section/CrudCourse.js","pages/admin/Dashboard.js","pages/admin/Sections.js","components-course/Course.js","components-course/ListOfCourses.js","components-player/Player.js","components-player/index.js","config-components/TabCourse.js","components-course/WatchClass.js","components-course/index.js","pages/admin/Courses.js","components-category-product/CategoryProduct.js","components-category-product/ListOfCategoriesOfProducts.js","components-category/Category.js","components-category/ModalCategory.js","components-product-details/reducer/productDetailsTypes.js","components-product-details/reducer/productDetailActions.js","components-product-details/ProductDetails.js","components-product-details/index.js","pages/admin/Products.js","pages/templates/Company.js","components-job-detail/reducer/jobDetailTypes.js","components-job-detail/reducer/jobDetailActions.js","components-job-detail/JobDetails.js","components-job-detail/index.js","pages/templates/JobDetails.js","pages/templates/Position.js","components-personal-detail/ListOfPersonDetails.js","components-personal-detail/PersonDetail.js","components-personal-detail/index.js","pages/templates/PersonalDetail.js","components-area/ListOfAreas.js","components-area/Area.js","components-area/index.js","pages/templates/Area.js","pages/templates/index.js","pages/admin/Company.js","pages/admin/Position.js","pages/admin/OrganizationChart.js","pages/admin/PersonalDetail.js","pages/admin/Area.js","pages/admin/index.js","pages/user/OrganizationChart.js","pages/user/index.js","App.js","reportWebVitals.js","components-session/reducer-login/loginReducer.js","components-session/sign-up-reducer/signUpReducer.js","components-session/change-password/reducer/changePasswordReducer.js","components-company/reducer/companyReducer.js","components-position/reducer/positionReducer.js","components-organization-chart/reducer/organizationChartReducer.js","components-personal-detail/reducer/personalDetailReducer.js","components-area/reducer/areaReducer.js","components-job-detail/reducer/jobDetailReducer.js","components-category/reducer/categoryReducer.js","components-category-product/reducer/categoryProductReducer.js","components-product/reducer/productReducer.js","components-product-details/reducer/productDetailReducer.js","components-course/reducer/courseTypes.js","components-course/reducer/courseReducer.js","components-section/reducer/sectionReducer.js","components-admin/reducer/adminReducer.js","components-analytics/reducer/analyticsReducer.js","components-blob/blob-reducer/blobReducer.js","reducers/index.js","index.js"],"names":["CardAnalytics","title","number","icon","rTitle","rNumber","rIcon","className","Card","CardBody","ANALYTICS_CARGANDO","ANALYTICS_ERROR","ANALYTICS_CLEAN_STATE","ANALYTICS_COUNT_PRODUCTS","ANALYTICS_COUNT_COURSES","ANALYTICS_COUNT_USERS","ANALYTICS_COUNT_ADMINS","ANALYTICS_COUNT_COMPANIES","ANALYTICS_COUNT_POSITIONS","ANALYTICS_COUNT_PERSONAL_DETAILS","ANALYTICS_COUNT_AREAS","errorResponse","data","ModelState","Message","error_description","error","errorHandler","messageError","response","status","setLocalStorage","window","open","configHeader","token","localStorage","getItem","headers","Authorization","respuesta","undefined","removeItem","setItem","access_token","roles","userName","axios_api","a","uri","header","apiMethod","body","config","pathApi","toLowerCase","axios","get","post","put","delete","signOff","e","preventDefault","setPathApi","route","analyticsCleanState","dispatch","type","analyticsMethods","method","answer","Id","companyId","payload","Loader","color","rColor","activate","Spinner","Error","message","Indicators","componentDidMount","props","this","analyticsReducer","count_companies","count_users","count_admins","cargando","api_actions","cardAnalytics","id","href","map","Col","lg","to","Component","mapDispatchToProps","analyticsActions","connect","fixSelect","name","list","length","item","Name","Arrays","UtilsArrays","DropDownActions","children","labelButton","useState","dropdownOpen","setDropdownOpen","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","DropdownMenu","Items","items","action","fixDropDown","area","DropdownItem","onClick","UseSearchItems","propertiesTable","searchByItem","setSearchItem","query","setQuery","React","useMemo","filteredSome","filter","res","property","includes","TableFilter","titlesTable","bodyTable","loading","hrefCreate","actions","rHrefCreate","Form","FormGroup","Input","placeholder","value","onChange","target","Table","handleAction","ADMIN_CARGANDO","ADMIN_ERROR","ADMIN_HANDLE_CHANGE","ADMIN_CLEAN_STATE","ADMIN_CRUD","ADMIN_HANDLE_VALIDATION","ADMIN_USERS_LIST","GetUserInfo","userId","GetUsersInfo","roleName","PutContactInfo","ValidateAccount","adminHandleChange","isInvalid","adminHandleValidation","validation","adminCleanState","adminMethods","typeError","ListOfUsers","create","adminReducer","useSelector","state","useDispatch","history","useHistory","useEffect","adminActions","list_users","typeUser","push","ApiResponses","ComponentApiResponses","useInputState","inputValue","inputChange","setInputChange","setOnChange","InputText","forName","classLabel","textLabel","isMandatory","classMandatory","inputType","inputName","inputId","placeHolder","maxLength","minLength","RE","validateRE","options","optionPlaceHolder","forgotPassword","xs","sm","md","xl","classCol","rFor","rClassLabel","rTextLabel","rIsMandatory","rClassMandatory","rInputType","rInputName","rInputId","rPlaceHolder","rInputValue","rMaxLength","rMinLength","rRE","handleRE","match","re","Label","for","valid","invalid","option","LastName","FormFeedback","validMessage","invalidMessage","InputEmail","label","rName","rLabel","RegularExpressions","RE_EMAIL","InputPassword","RE_PASSWORD","InputFile","ValidateInputs","validations","onValidate","i","Form1","textButton","textButtonLoading","handleValidations","Button","SwitchSome","some","setSome","ModalForm","content","modalTitle","Modal","ModalHeader","ModalBody","ModalDelete","ModalFooter","ModalOpenDelete","clean","modal","setToogle","toggleCancel","NotFound","RE_PASSWORD_MATCHES","RE_EMPTY","Tabs","children1","children2","children3","tab","activeTab","setActiveTab","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","Row","Img","src","width","alt","ImgOrganigrama","Organigrama","ImgProcesos","Procesos","ImgPuestos","Puestos","ImgDescripciones","Descripciones","SvgLogo","Logo","ImgProduct","ProductDefault","LogoNavbar","ShowListFromText","description","arrayDeCadenas","split","splice","POSITION_CARGANDO","POSITION_ERROR","POSITION_HANDLE_CHANGE","POSITION_CLEAN_STATE","POSITION_CRUD","POSITIONS_LIST","POSITION_HANDLE_VALIDATION","GetPositions","GetPositionsByCompanyId","GetPosition","PutPosition","PostPosition","DeletePosition","positionHandleChange","positionHandleValidation","positionCleanState","positionMethods","Position","positionId","sendAction","positionReducer","DateCreated","Description","Description2","CompanyId","Objective","Knowledge","Salary","model","actionPosition","reDirect","setModal","positionActions","ListOfPositions","useParams","list_positions","replace","ListOfResponsabilities","Lists","ListOfDescriptions","ORGANIZATION_CHART_CARGANDO","ORGANIZATION_CHART_ERROR","ORGANIZATION_CHART_HANDLE_CHANGE","ORGANIZATION_CHART_CLEAN_STATE","ORGANIZATION_CHART_CRUD","ORGANIZATION_CHARTS_LIST","ORGANIZATION_CHART_HANDLE_VALIDATION","ORGANIZATION_CHART_CHILD","GetOrganizationCharts","GetOrganizationChart","GetPositionFromOrganization","positionChartId","GetOrganizationChartChild","GetOrganizationChartByCompanyId","PutOrganizationChart","PostOrganizationChart","DeleteOrganizationChart","organizationChartHandleChange","organizationChartHandleValidation","organizationChartCleanState","organizationChartMethods","padre","child","PositionChartId","createTree","tree","AreasId","Number","areaId","createTreeByArea","fatherPosition","createTreeByFatherPosition","hijos","ChartTree1","ComponentPosition","ComponentListOfPositions","ListFromPositions","ComponentsListFromPositions","ReadPosition","arrayDeCadenas2","organizationChartReducer","read_child","organizationChartActions","Responsibilities","Competencias","PositionName","Puntos","AREA_CARGANDO","AREA_ERROR","AREA_HANDLE_CHANGE","AREA_CLEAN_STATE","AREA_CRUD","AREAS_LIST","AREA_HANDLE_VALIDATION","GetAreas","GetAreasByCompanyId","GetAreasByCompanyIdWithoutTaken","GetAreasByCompanyIdTaken","GetArea","PutArea","PutAreaTaken","organizationChartId","PostArea","DeleteArea","areaHandleChange","areaHandleValidation","areaCleanState","areaMethods","cn","bem","StyledNode","styled","div","Modals","role","CardNode","employee","addChild","updateNode","deleteChild","rArea","style","textAlign","OrganizationChart","centerDiagram","element","container","current","scrollLeft","scrollWidth","clientHeight","createOrganigrama","organigrama","PersonName","Area","PersonalDetail","createOrigin","addUpChild","parentId","nodeId","getOrganizationChartByArea","getCompleteOrganizationChart","createRef","list_areas","areaReducer","hrefBase","innerRef","lineWidth","lineColor","lineBorderRadius","areaActions","PERSONAL_DETAIL_CARGANDO","PERSONAL_DETAIL_ERROR","PERSONAL_DETAIL_HANDLE_CHANGE","PERSONAL_DETAIL_CLEAN_STATE","PERSONAL_DETAIL_CRUD","PERSONAL_DETAILS_LIST","PERSONAL_DETAIL_HANDLE_VALIDATION","GetPersonalDetails","GetPersonalDetailsByCompanyId","GetPersonalDetail","PutPersonalDetail","PostPersonalDetail","DeletePersonalDetail","personalDetailHandleChange","personalDetailHandleValidation","personalDetailCleanState","personalDetailMethods","PositionId","PersonDetailId","actionOrganizationChart","list_personal_details","personalDetailReducer","personalDetailActions","isOpenAux","mode","Node","watchChild","isFirst","EditOrganizationChart","setState","ViewOrganizationChart","DropDowns","ComponentOrganizationChart","UpdateChild","ComponentUpdateChild","ComponentViewOrganizationChart","ReadChild","arrayDeCadenas3","CompetenciasUser","Birthdate","Date","getFullYear","substr","CURP","IMSS","RFC","Status","DateAdmission","Benefits","MonthlySalary","TotalSalary","ModalPosition","CollapseSection","countVideos","videos","time","setIsOpen","Collapse","video","A","Li","last","ComponentDropDowns","Inputs","ComponentInputs","ComponentModals","Navbars","ComponentNavbars","ComponentLists","ComponentRegularExpressions","ComponentTabs","ComponentCollapse","AWhatsapp","phone","ListOfHistory","ComponentListOfHistory","UpdateContactInfo","Email","PhoneNumber","UserName","TypeUser","closeModal","contactModel","NewUserName","NewTypeUser","NewPhoneNumber","NewEmail","UserId","ComponentsListOfUsers","UpdateUserInfo","ComponentUpdateUserInfo","EmailConfirmed","cargandoValidateAccount","Active","SelectUser","fix_select","COMPANY_CARGANDO","COMPANY_ERROR","COMPANY_HANDLE_CHANGE","COMPANY_CLEAN_STATE","COMPANY_CRUD","COMPANIES_LIST","COMPANY_HANDLE_VALIDATION","GetCompanies","GetCompaniesByCompanyId","GetCompaniesByUser","GetCompany","PutCompany","PostCompany","DeleteCompany","companyHandleChange","companyHandleValidation","companyCleanState","companyMethods","Company","companyReducer","TradeName","BusinessName","BusinessActivity","actionProduct","users_list","companyActions","count_positions","count_personal_details","count_areas","ComponentCompany","CompanyIndicators","ComponentCompanyIndicators","ListOfCompanies","list_companies","ChooseCompany","user","CompanyChoose","Navbar","expand","Container","NavbarToggler","navbar","NavbarAdmin","light","NavbarBrand","UncontrolledDropdown","nav","inNavbar","right","User","Landing","Heroxs","WebApps","class","ReadCardProduct","categories","category","Badge","PRODUCT_CARGANDO","PRODUCT_ERROR","PRODUCT_HANDLE_CHANGE","PRODUCT_CLEAN_STATE","PRODUCT_CRUD","PRODUCTS_LIST","PRODUCT_HANDLE_VALIDATION","GetProducts","GetProductsByCategoryId","GetProduct","PutProduct","includeBlobs","PostProduct","DeleteProduct","productHandleChange","productHandleValidation","productCleanState","productMethods","CardProduct","productId","productReducer","Blobs","fileCover","Categories","productActions","blobProduct","el","BlobTypeId","URL","createObjectURL","Uri","ListOfCardProducts","list_products","product","ListOfCategories","categoryProductId","openDeleteModal","idProduct","deleteProduct","cleanProduct","cancel","CATEGORY_CARGANDO","CATEGORY_ERROR","CATEGORY_HANDLE_CHANGE","CATEGORY_CLEAN_STATE","CATEGORY_CRUD","CATEGORIES_LIST","CATEGORY_HANDLE_VALIDATION","GetCategories","GetCategory","PutCategory","PostCategory","DeleteCategory","categoryHandleChange","categoryHandleValidation","categoryCleanState","categoryMethods","ComponentCardProduct","ComponentListOfCardProducts","ListOfProducts","ComponentListOfProducts","LandingProducts","SoftwareAgency","LandingSoftwareAgency","Products","NotFoundPage","LandingCourses","LOGIN_CARGANDO","LOGIN_ERROR","LOGIN_HANDLE_CHANGE","LOGIN_CLEAN_STATE","LOGIN_USER","LOGIN_HANDLE_VALIDATION","parserJson","obj","jsonSerialize","prop","slice","loginHandleChange","loginHandleValidation","loginCleanState","loginMethods","object","LoginForm","ActionLogin","loginReducer","grant_type","username","password","ModelLogin","handleRedirect","loginActions","SIGN_UP_CARGANDO","SIGN_UP_ERROR","SIGN_UP_HANDLE_CHANGE","SIGN_UP_CLEAN_STATE","SIGN_UP_USER","SIGN_UP_HANDLE_VALIDATION","SIGN_UP_PRELOADED_DATA","signUpHandleChange","signUpHandleValidation","signUpCleanState","signUpPreloadedData","signUpMethods","SignUp","signUpReducer","Password","ConfirmPassword","ValidateByPhoneOrEmail","Roles","ModelSignUp","RegExp","signUpActions","CHANGE_PASSWORD_CARGANDO","CHANGE_PASSWORD_ERROR","CHANGE_PASSWORD_HANDLE_CHANGE","CHANGE_PASSWORD_CLEAN_STATE","CHANGE_PASSWORD_USER","CHANGE_PASSWORD_HANDLE_VALIDATION","SetPassword","changePasswordHandleChange","changePasswordHandleValidation","changePasswordCleanState","changePasswordMethods","phoneOrEmail","ChangePassword","changePasswordReducer","NewPassword","ConfirmNewPassword","code","email","modelChangePassword","Code","usernameOrEmailOrPhoneNumber","readonly","changePasswordActions","ChangePasswordForUser","actionChangePasswordForUser","SendEmail","Login","ComponentLogin","ComponentSignUp","ComponentChangePassword","ComponentVerifyAccount","ComponentSendEmail","ComponentChangePasswordForUser","LayoutSection","classSection","classContainer","classLogo","classCard","classCardBody","LoginPage","ForgotPassword","CheckYourAccount","ChangePasswordPage","SignUpPage","ListOfAdmins","CreateAdmin","ReadAdmin","CreateUser","ReadUser","SECTION_CARGANDO","SECTION_ERROR","SECTION_HANDLE_CHANGE","SECTION_CLEAN_STATE","SECTION_CRUD","SECTIONS_LIST","SECTIONS_SELECT","SECTION_HANDLE_VALIDATION","sectionHandleChange","sectionHandleValidation","sectionCleanState","sectionMethods","Section","sectionId","actionSection","sectionReducer","CourseId","courseId","sectionActions","CreateModalSection","sectionModal","EditSectionModal","section","SectionName","SectionId","DeleteSectionModal","deleteSectionAction","CATEGORY_PRODUCT_CARGANDO","CATEGORY_PRODUCT_ERROR","CATEGORY_PRODUCT_HANDLE_CHANGE","CATEGORY_PRODUCT_CLEAN_STATE","CATEGORY_PRODUCT_CRUD","CATEGORIES_PRODUCTS_LIST","CATEGORY_PRODUCT_HANDLE_VALIDATION","categoryProductHandleChange","categoryProductHandleValidation","categoryProductCleanState","categoryProductMethods","BLOB_CARGANDO","BLOB_ERROR","BLOB_HANDLE_CHANGE","BLOB_HANDLE_VALIDATION","BLOB_CLEAN_STATE","BLOB_CRUD","blobHandleChange","blobHandleValidation","blobCleanState","blobMethods","blob","createFormData","ContainerName","IsPrivate","FormData","set","append","Product","actionBlob","file","blobType","blobs","formData","blobReducer","Price","ProductCategoryId","fileCoverAnswer","list_categories_products","categoryProductReducer","categoryReducer","list_categories","categoryProductActions","blobActions","categoryActions","CreateProductModal","porductModal","hasSection","EditProductModal","DeleteProductModal","ListOfSections","cleanSection","list_sections","CrudCourse","Dashboard","indicator","page","AdminUsersPages","AdminProductPages","CreateProduct","AdminCompanyPages","AdminSections","TemplateDashboardAdmin","CreateSection","EditCourse","Course","courseReducer","ListOfCourses","Player","url","height","controls","PlayerMedia","ComponentPlayer","TabCourse","WatchClass","stateProduct","ComponentCourse","ComponentListOfCourses","ComponentWatchClass","CreateCourse","WhatchCourse","CategoryProduct","actionCategoryProduct","ListOfCategoriesProducts","deleteAction","cleanModal","Category","categoryId","actionCategory","CreateCategoryModal","categoryModal","EditCategoryModal","DeleteCategoryModal","PRODUCT_DETAIL_CARGANDO","PRODUCT_DETAIL_ERROR","PRODUCT_DETAIL_HANDLE_CHANGE","PRODUCT_DETAIL_CLEAN_STATE","PRODUCT_DETAIL_CRUD","PRODUCT_DETAILS_LIST","PRODUCT_DETAIL_HANDLE_VALIDATION","GetProductDetails","GetProductDetail","GetProductDetailByProductId","PutProductDetail","PostProductDetail","DeleteProductDetail","productDetailHandleChange","productDetailHandleValidation","productDetailCleanState","productDetailMethods","ProductDetail","productDetailReducer","SubTitle","BlobId","ProductId","actionProductDetail","Blob","fileZip","fileZipAnswer","EditProduct","ProductSection","CategoryProducts","ListOfCategoriesOfProducts","CreateCompany","JOB_DETAIL_CARGANDO","JOB_DETAIL_ERROR","JOB_DETAIL_HANDLE_CHANGE","JOB_DETAIL_CLEAN_STATE","JOB_DETAIL_CRUD","JOB_DETAILS_LIST","JOB_DETAIL_HANDLE_VALIDATION","GetJobDetails","GetJobDetailByPersonalDetailId","personalDetailId","GetJobDetail","PutJobDetail","PostJobDetail","DeleteJobDetail","jobDetailHandleChange","jobDetailHandleValidation","jobDetailCleanState","jobDetailMethods","JobDetail","jobDetailReducer","Contract","Type","AreaId","actionJobDetail","jobDetailActions","JobDetails","CreateJobDetail","UpdateJobDetail","reDirectBase","reDirectCreate","CreatePosition","ListOfPersonalDetails","redirectUser","PersonDetail","SecondLastName","Gender","actionPersonalDetail","ListOfPersonDetails","ComponentListOfPersonalDetails","ComponentPersonDetail","CreatePersonDetail","ListOfAreas","Taken","ComponentListOfAreas","ComponentArea","CreateArea","ComponentCompanies","ComponentJobDetails","AdminDashboardPages","OrgainaztionChart","UpdateCurrent","UpdatePersonDetail","UpdateArea","ComponentUsers","AdminSectionsPages","ComponentSections","AdminCoursesPages","ComponentCourses","ComponentProducts","ComponentDashboard","AdminPositionsPages","ComponentPositions","AdminOrganizationChart","AdminPersonalDetail","ComponentPersonalDetail","AdminArea","DashboardUserTemplate","DashboardUserPage","UserListOfPositionPage","UserCreatePosition","UserListOfPersonDetails","UserCreatePersonDetail","UserUpdatePersonDetail","UserListOfAreas","UserCreateArea","UserUpdateArea","UserOrganizationChart","ComponentsOrganizatioChart","App","exact","path","component","Landings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","reducer","Idd","nameInput","DateModified","Reducer","files","list_brands","list_organization_chart","IntegratedSalary","DailySalary","list_job_details","list_product_details","COURSE_CARGANDO","COURSE_ERROR","COURSE_HANDLE_CHANGE","COURSE_CLEAN_STATE","COURSE_CRUD","COURSES_LIST","COURSE_HANDLE_VALIDATION","list_courses","list_sections_select","cargandoUsername","errorUsername","cargandoEmail","errorEmail","cargandoPhone","errorPhone","cargandoPassword","errorPassword","errorValidateAccount","count_products","count_courses","BlobName","BlobType","Brand_Blob","Product_Blob","BlogPosts","AspNetUsers","combineReducers","valueInput","WebFont","load","google","families","store","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0747c0c8.chunk.js","sourcesContent":["// Imports de react.\r\nimport React from 'react'\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CardAnalytics = ({title, number, icon}) => {\r\n    const rTitle = title ? title : 'title';\r\n    const rNumber = number ? number : '0'\r\n    const rIcon = icon ? icon : <FaIcons.FaVideo className=\"mr-2\" />;\r\n    return (\r\n        <Card className=\"border-0 my-3\">\r\n            <CardBody>\r\n                <p className=\"text-muted mb-2\">{rIcon} {rTitle}</p>\r\n                <h5 className=\"display-4 text-dark\">{rNumber}</h5>\r\n                {/* <div className=\"d-inline-block text-success mr-2\"><FaIcons.FaArrowUp className=\"mr-2\" />0%</div><p className=\"text-dark d-inline-block mb-0\">vs los últimos 7 días</p> */}\r\n            </CardBody>\r\n        </Card>   \r\n    )\r\n}\r\n","export const ANALYTICS_CARGANDO = \"analytics_cargando\";\r\nexport const ANALYTICS_ERROR = \"analytics_error\";\r\nexport const ANALYTICS_CLEAN_STATE = \"analytics_clean_state\";\r\nexport const ANALYTICS_COUNT_PRODUCTS = \"analytics_count_companiesxxx\";\r\nexport const ANALYTICS_COUNT_COURSES = \"analytics_count_courses\";\r\nexport const ANALYTICS_COUNT_USERS = \"analytics_count_users\";\r\nexport const ANALYTICS_COUNT_ADMINS = \"analytics_count_admins\";\r\nexport const ANALYTICS_COUNT_COMPANIES = \"analytics_count_companies\";\r\nexport const ANALYTICS_COUNT_POSITIONS = \"analytics_count_positions\";\r\nexport const ANALYTICS_COUNT_PERSONAL_DETAILS = \"analytics_count_personal_details\";\r\nexport const ANALYTICS_COUNT_AREAS = \"analytics_count_areas\";\r\n\r\n\r\n\r\n\r\n\r\n","// Imports de axios.\r\nimport axios from \"axios\";\r\n\r\n/*\r\n * Función para detectar el tipo de error.\r\n */\r\nexport const errorResponse = (data) => {\r\n  //debugger;\r\n  if (data.ModelState) {\r\n    return data.ModelState[\"\"];\r\n  }\r\n  if (data.Message) {\r\n    return data.Message;\r\n  }\r\n  if (data.error_description) {\r\n    return data.error_description;\r\n  }\r\n  if (data.error) {\r\n    return data.error;\r\n  }\r\n};\r\n\r\n/*\r\n * F.unción para manejar errores.\r\n */\r\nexport const errorHandler = (error) => {\r\n  let messageError = \"\";\r\n  //debugger;\r\n  if (!error.response) {\r\n    messageError = \"Error de conexión\";\r\n  } else {\r\n    switch (error.response.status) {\r\n      case 400:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 404:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 500:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 401:\r\n        setLocalStorage();\r\n        window.open(`https://version4-front.azurewebsites.net/login-expired`, \"_self\");\r\n        break;\r\n      default:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n    }\r\n  }\r\n  return messageError;\r\n};\r\n\r\n/*\r\n * Funcion para manejar el encabezado del token.\r\n */\r\nfunction configHeader(token) {\r\n  if (token) {\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return config;\r\n  }\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\n/*\r\n * Función para setear local storage\r\n */\r\nexport const setLocalStorage = (respuesta) => {\r\n  if (respuesta === undefined) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem(\"token\", respuesta.data.access_token);\r\n  localStorage.setItem(\"role\", respuesta.data.roles);\r\n  localStorage.setItem(\"username\", respuesta.data.userName);\r\n\r\n  return;\r\n};\r\n\r\n/*\r\n * Función para manejar las peticiones del api, reducir y optimizar código\r\n * uri: dirección que vamos a llamar del back\r\n * header: si requiere autenticación el usuario\r\n * apiMethod: get, post, put, delete\r\n * body: cuerpo si lo necesita\r\n */\r\nexport const axios_api = async (\r\n  uri = \"\",\r\n  header,\r\n  apiMethod = \"\",\r\n  body = {}\r\n) => {\r\n  let respuesta = {};\r\n\r\n  if (uri === \"\") {\r\n    return (respuesta = {\r\n      data: \"No se especifico ninguna uri\",\r\n    });\r\n  }\r\n\r\n  const config = configHeader(header);\r\n\r\n  const pathApi = `${localStorage.getItem(\"route\")}${uri}`;\r\n\r\n  switch (apiMethod.toLowerCase()) {\r\n    case \"get\":\r\n      respuesta = await axios.get(pathApi, config);\r\n      break;\r\n    case \"post\":\r\n      respuesta = await axios.post(pathApi, body, config);\r\n      break;\r\n    case \"put\":\r\n      respuesta = await axios.put(pathApi, body, config);\r\n      break;\r\n    case \"delete\":\r\n      respuesta = await axios.delete(pathApi, config);\r\n      break;\r\n    default:\r\n      respuesta = {\r\n        data: \"No se envio ningun ApiMethod\",\r\n      };\r\n      break;\r\n  }\r\n\r\n  return respuesta;\r\n};\r\n\r\nexport const signOff = (e) => {\r\n  e.preventDefault();\r\n  setLocalStorage();\r\n  window.open(`/`, \"_self\");\r\n};\r\n\r\n// Metodo para manejar las rutas del api\r\nexport const setPathApi = () => {\r\n  const option = 2;\r\n  let route = \"\";\r\n  switch (option) {\r\n    case 1:\r\n      // Local\r\n      route = \"https://localhost:44356/\";\r\n      break;\r\n    case 2:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    case 3:\r\n      // Production\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    default:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n  }\r\n\r\n  localStorage.setItem(\"route\", route);\r\n}\r\n","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const analyticsCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const analyticsMethods = (method, data='') => async (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type;\r\n      switch (method) {\r\n        case \"count_products\":\r\n            answer = await axios_api(`api/CountProducts`, true, \"get\");\r\n            type = ANALYTICS_COUNT_PRODUCTS;\r\n            break;\r\n        case \"count_courses\":\r\n          answer = await axios_api(`api/CountProductsByCategoryId?id=${data.Id}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COURSES;\r\n          break;\r\n        case \"count_users\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=User&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_USERS;\r\n          break;\r\n        case \"count_admins\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=Admin&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_ADMINS;\r\n          break;\r\n        case \"count_companies\":\r\n          answer = await axios_api(`api/CountCompanies`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COMPANIES;\r\n          break;\r\n        case \"count_positions\":\r\n          answer = await axios_api(`api/CountPositions?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_POSITIONS;\r\n          break;\r\n        case \"count_personal_details\":\r\n          answer = await axios_api(`api/CountPersonalDetails?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_PERSONAL_DETAILS;\r\n          break;\r\n        case \"count_areas\":\r\n          answer = await axios_api(`api/CountAreas?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_AREAS;\r\n          break;\r\n        default:\r\n            break\r\n  \r\n          \r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ANALYTICS_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import React from 'react'\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const Loader = ({color, activate}) => {\r\n    const rColor = color ? color: 'primary';\r\n    if(activate){\r\n        return(\r\n            <Spinner color={rColor} className=\"align-middle ml-1\" />\r\n        )\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const Error = ({message}) => {\r\n    \r\n    return <>\r\n        {message ? \r\n            <div className='text-danger text-center mb-4'>{message}</div>\r\n        : ''}\r\n    </>;\r\n}\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods} = this.props;\r\n        await analyticsMethods('count_courses', {Id:6})\r\n        await analyticsMethods('count_users')\r\n        await analyticsMethods('count_admins')\r\n        await analyticsMethods('count_companies')\r\n    }\r\n    render(){\r\n        const {\r\n           \r\n            count_companies,\r\n            count_users,\r\n            count_admins,\r\n            api_actions:{\r\n                cargando,\r\n            }\r\n        } = this.props.analyticsReducer;\r\n        const cardAnalytics = [\r\n            {\r\n                id: '4-a',\r\n                title: 'Admins',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_admins,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/admins'\r\n            },\r\n            {\r\n                id: '2-a',\r\n                title: 'Usuarios',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_users,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/users'\r\n            },\r\n            {\r\n                id: '1-a',\r\n                title: 'Empresas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_companies,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: '/admin-dashboard/companies'\r\n            },       \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer}) => {\r\n    return {analyticsReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","export const fixSelect = (id ='Id', name='Name', list) => {\r\n    let fixSelect = [];\r\n    if(list?.length > 0){\r\n        fixSelect = list.map(item => {\r\n            return {Id: item[id], Name: item[name]}\r\n        })\r\n    }\r\n    return fixSelect;\r\n}","import * as UtilsArrays from './Arrays'\r\n\r\nexport const Arrays = UtilsArrays;","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\n\r\nimport {Arrays} from '../utils'\r\n\r\nexport const DropDownActions = ({children, labelButton, color='link'}) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n      <DropdownToggle caret color={color} className=\"text-dark\">{labelButton}</DropdownToggle>\r\n      <DropdownMenu>{children}</DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport const Items = ({items, action}) => {\r\n  let fixDropDown = Arrays.fixSelect('Id','TradeName', items);\r\n  return(\r\n    <>\r\n      {\r\n        fixDropDown.map(area => {\r\n            \r\n            return <DropdownItem key={area.Id} onClick={() => action(area.Id)}>{area.Name}</DropdownItem>\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {DropdownItem, Form, FormGroup, Input, Table} from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de components.\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\nimport {DropDownActions} from '../config-components/DropDowns'\r\n\r\nexport const UseSearchItems = (list, propertiesTable) => {\r\n  const [searchByItem, setSearchItem] = useState(propertiesTable);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  React.useMemo(() => {\r\n    const filteredSome = list.filter((items) => {\r\n      let res = \"\";\r\n      res += propertiesTable.map((property) => {\r\n        return `${items[property]} `;\r\n      });\r\n      return res.toLowerCase().includes(query.toLowerCase());\r\n    });\r\n    setSearchItem(filteredSome);\r\n  }, [list, query, propertiesTable]);\r\n\r\n  return { query, setQuery, searchByItem };\r\n};\r\n\r\nexport const TableFilter = ({\r\n    title, \r\n    titlesTable,\r\n    propertiesTable,\r\n    bodyTable,\r\n    loading,\r\n    error,\r\n    hrefCreate,\r\n    actions\r\n}) => {\r\n    const rTitle = title ? title : 'Titulo';\r\n    const rHrefCreate= hrefCreate ? hrefCreate : '/admin-dashboard';\r\n\r\n    const { query, setQuery, searchByItem } = UseSearchItems(\r\n        bodyTable,\r\n        propertiesTable\r\n    );\r\n    return (\r\n        <>\r\n            <div className=\"d-flex mb-4\">\r\n                <h3 className=\"flex-grow-1\">{rTitle}</h3>\r\n                \r\n                <div>\r\n                    <Form>\r\n                        <FormGroup className=\"d-flex\">\r\n                            <Input \r\n                                className=\"mr-3\" \r\n                                type=\"text\" \r\n                                placeholder=\"Buscar...\" \r\n                                value={query}\r\n                                onChange={(e) => {\r\n                                    setQuery(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Link to={rHrefCreate} className={'btn btn-primary'}>Crear</Link>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <Table className=\"bg-white\">\r\n                <thead>\r\n                    <tr>\r\n                        {titlesTable.map(title => {\r\n                            return(\r\n                            <th>{title}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    error ? <Error message={error} /> :\r\n                    loading ? <Loader activate={loading}/> : \r\n                    <tbody>\r\n                        {searchByItem?.map(item => {\r\n                            return(\r\n                                <tr>\r\n                                    {propertiesTable?.map(property => {\r\n                                        return <td>{item[property]}</td>\r\n                                    })}\r\n                                        <td>\r\n                                        <DropDownActions \r\n                                            labelButton={<FaIcons.FaEllipsisH />}\r\n                                        >\r\n                                            {actions &&\r\n                                                actions.map( action => {\r\n                                                    return<DropdownItem onClick={() => action.handleAction(item['Id'])}>\r\n                                                        {action.action}\r\n                                                    </DropdownItem>\r\n                                                })\r\n                                            }\r\n                                        </DropDownActions>  \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}      \r\n                    </tbody>\r\n                }               \r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ADMIN_CARGANDO = \"admin_cargando\";\r\nexport const ADMIN_ERROR = \"admin_error\";\r\nexport const ADMIN_HANDLE_CHANGE = \"admin_handle_change\";\r\nexport const ADMIN_CLEAN_STATE = \"admin_clean_state\";\r\nexport const ADMIN_CRUD = \"admin_crud\";\r\nexport const ADMIN_HANDLE_VALIDATION = \"admin_handle_validation\";\r\nexport const ADMIN_USERS_LIST = \"admins_list\";\r\n\r\nexport const GetUserInfo = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Account/UserInfo?userId=${data.userId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n\r\nexport const GetUsersInfo = async(data) =>{\r\n    const answer = await axios_api(\r\n        `api/Account/UsersInfo?roleName=${data.roleName}`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type:ADMIN_USERS_LIST};\r\n}\r\n\r\nexport const PutContactInfo = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/PutContactInfo`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type:'contact_info_put'};\r\n}\r\n\r\nexport const ValidateAccount = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/ValidateAccount`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    GetUserInfo,\r\n    PutContactInfo,\r\n    GetUsersInfo,\r\n    ValidateAccount\r\n  } from \"./adminTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const adminHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const adminHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const adminCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const adminMethods = (data, method, loading = 'cargando', typeError = 'error') => async (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CARGANDO,\r\n      payload: loading //? {cargando: loading} : {cargando: 'cargando'}\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetUserInfo\":\r\n            answer = await GetUserInfo(data);\r\n            break;\r\n        case \"GetUsersInfo\":\r\n            answer = await GetUsersInfo(data);\r\n            break;\r\n        case \"PutContactInfo\":\r\n            answer = await PutContactInfo(data)\r\n            break;\r\n        case \"ValidateAccount\":\r\n            answer = await ValidateAccount(data);\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n     \r\n      dispatch({\r\n        type: answer.type,\r\n        payload: answer.res.data,\r\n      });\r\n    } catch (error) {    \r\n      let messageError = errorHandler(error);\r\n      let objectError = {\r\n        messageError: messageError,\r\n        typeError : typeError //? typeError : 'error'\r\n      }\r\n      dispatch({\r\n        type: ADMIN_ERROR,\r\n        payload: objectError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as adminActions from './reducer/adminActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfUsers = ({roleName = 'User', title='Usuarios', create='/create-user'}) => {\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(adminActions.adminMethods({roleName: roleName},'GetUsersInfo'))\r\n    }, [dispatch, roleName])\r\n    \r\n    const getUser = (userId) => {\r\n        let typeUser = roleName === 'User' ? 'user' : 'admin'\r\n        history.push(`/admin-dashboard-read-${typeUser}/${userId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_users\r\n    } = adminReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Usuarios</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Usuario','Acciones']}\r\n                propertiesTable={['Id','UserName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_users}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Usuario', handleAction: getUser },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfUsers;\r\n\r\n","import * as ComponentConfigApi from './ConfigApi'\r\nimport * as ComponentApiResponses from './ApiResponses'\r\n\r\nexport const ConfigApi = ComponentConfigApi;\r\nexport const ApiResponses = ComponentApiResponses;","// Imports de react.\r\nimport React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Input, Label, FormGroup, FormFeedback, Form, Button, Col} from 'reactstrap'\r\nimport {RegularExpressions} from './index'\r\nimport {ApiResponses} from '../components-api'\r\n\r\n\r\n// Hook para manejar el cambio en inputs.\r\nexport const useInputState = (inputValue) => {\r\n    const [inputChange, setInputChange] = useState(inputValue);\r\n    const setOnChange = (e) => {\r\n        setInputChange(e)\r\n    }\r\n    return {inputChange, setOnChange}\r\n}\r\n\r\n\r\n// Input para textos.\r\nexport const InputText = ({forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    placeHolder,\r\n    inputValue,\r\n    onChange,\r\n    maxLength,\r\n    minLength,\r\n    RE,\r\n    validateRE,\r\n    options,\r\n    optionPlaceHolder,\r\n    forgotPassword = false,\r\n    xs='12',\r\n    sm='12',\r\n    md='12',\r\n    lg='12',\r\n    xl='12',\r\n    classCol='px-0'\r\n}) => {\r\n    const rFor = forName ? forName : 'for';\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n    const rPlaceHolder = placeHolder ? placeHolder : '';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rMaxLength = maxLength ? maxLength : 524288;\r\n    const rMinLength = minLength ? minLength : 0;\r\n    const rRE = RE ? RE : '';\r\n\r\n    const handleRE = (e) =>{\r\n        \r\n        validateRE = e.target.value.match(rRE.re) ? true : false;\r\n        if(validateRE && e.target.value === '' && isMandatory){\r\n            validateRE = false;\r\n        }\r\n        if(!validateRE && e.target.value === '' && !isMandatory){\r\n            validateRE = '';\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <Col \r\n            xs={xs}\r\n            sm={sm}\r\n            md={md}\r\n            lg={lg}\r\n            xl={xl}\r\n            className={classCol}\r\n        >\r\n            <FormGroup>\r\n                <Label\r\n                    for={rFor}\r\n                    className={`${rClassLabel} d-flex justify-content-between`}\r\n                >\r\n                        <div>\r\n                            {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n                        </div>\r\n                        {forgotPassword && <small>\r\n                            <Link to='/forgot-password'>\r\n                                ¿Olvidaste tu contraseña?\r\n                            </Link>\r\n                        </small>}\r\n                </Label>\r\n                <Input\r\n                    type={rInputType}\r\n                    name={rInputName}\r\n                    id={rInputId}\r\n                    placeholder={rPlaceHolder}\r\n                    value={rInputValue}\r\n                    onChange={(e)=>handleRE(e)}\r\n                    maxLength={rMaxLength}\r\n                    minLength={rMinLength}\r\n                    valid={validateRE === true && true }\r\n                    invalid={validateRE === false && true}\r\n                >\r\n                    {\r\n                        options && \r\n                        <>\r\n                            <option value=\"\">{optionPlaceHolder}</option>\r\n                            {options.map(option => {\r\n                                return <option key={option.Id} value={option.Id}>{option.Name} {option?.LastName ? option?.LastName : ''}</option>\r\n                            })}\r\n                        </> \r\n                    }\r\n                </Input>\r\n                <FormFeedback  valid >{validateRE && rRE.validMessage}</FormFeedback>\r\n                <FormFeedback  invalid >{validateRE === false && rRE.invalidMessage}</FormFeedback>\r\n\r\n            </FormGroup>\r\n        </Col>\r\n    )\r\n}\r\n\r\n// Input para correo.\r\nexport const InputEmail = ({name, inputValue, onChange, label, RE, validateRE}) => {\r\n    const rName = name ? name : 'Email';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rLabel = label ? label : 'Email';\r\n    const rRE = RE ? RE : RegularExpressions.RE_EMAIL;\r\n    return <InputText\r\n            forName='Email'\r\n            classLabel='font-weight-bold'\r\n            textLabel={rLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='text'\r\n            inputName={rName}\r\n            inputId='Email'\r\n            placeHolder={`Introduce tu ${rLabel}`}\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={20}\r\n            RE={rRE}\r\n            validateRE={validateRE}\r\n        />\r\n}\r\n\r\nexport const InputPassword = ({\r\n    inputValue, \r\n    onChange, \r\n    validateRE, \r\n    forgotPassword = false,\r\n    RE = RegularExpressions.RE_PASSWORD,\r\n    inputName = 'password',\r\n    textLabel = 'Contraseña'\r\n}) => {\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    return <InputText\r\n            forName='Password'\r\n            classLabel='font-weight-bold'\r\n            textLabel={textLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='password'\r\n            inputName={inputName}\r\n            inputId='password'\r\n            placeHolder='Introduce tu contraseña'\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={1}\r\n            RE={RE}\r\n            validateRE={validateRE}\r\n            forgotPassword={forgotPassword}\r\n        />\r\n}\r\n\r\n\r\nexport const InputFile = ({//forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    onChange,\r\n    RE,\r\n    validateRE,\r\n   \r\n}) => {\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n \r\n    const handleRE = (e) =>{\r\n        if(validateRE && e.target.value === [] && isMandatory){\r\n            validateRE = false;\r\n        }else {\r\n            validateRE = true;\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label\r\n                className={rClassLabel}\r\n            >\r\n                {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n            </Label>\r\n            <Input\r\n                type={rInputType}\r\n                name={rInputName}\r\n                id={rInputId}\r\n                onChange={(e)=>handleRE(e)}\r\n                valid={validateRE === true && true }\r\n                invalid={validateRE === false && true}\r\n            />\r\n            <FormFeedback  valid >{validateRE && 'archivo valido'}</FormFeedback>\r\n            <FormFeedback  invalid >{validateRE === false && 'archivo invalido'}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\n  \r\nexport const ValidateInputs = (validations, e, onValidate) => {\r\n    e.preventDefault()\r\n    for(let i = 0; i < validations.length ; i++){\r\n        if(validations[i] !== '' && validations[i].props.isMandatory === '*' ){\r\n            if(!validations[i].props.validateRE || validations[i].props.validateRE === \"\"){\r\n                let model = {\r\n                    name: validations[i].props.inputName,\r\n                    isInvalid: false\r\n                }\r\n                onValidate(model);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const Form1 = ({children, \r\n    loading, \r\n    error, \r\n    action,\r\n    textButton,\r\n    textButtonLoading,\r\n    handleValidations,\r\n}) => {\r\n    const HandleAction = (e) =>{\r\n        const isValid = ValidateInputs(children, e, handleValidations);\r\n        if(isValid) {\r\n            action();\r\n        }\r\n    }\r\n    return <Form className={'d-flex flex-wrap'}>\r\n        {children}\r\n        <ApiResponses.Error message={error}/> \r\n        {loading ? \r\n            <Button color=\"primary\" className=\"w-100 mb-3\" >{textButtonLoading}<ApiResponses.Loader activate={loading}  color={'light'} /></Button>  :\r\n            <Button color=\"primary\" className=\"w-100 mb-3\" onClick={HandleAction}>{textButton} <ApiResponses.Loader activate={loading}  color={'light'} /></Button>\r\n        }\r\n         \r\n    </Form>\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport const SwitchSome = () => {\r\n  const [some, setSome] = useState(false);\r\n  const toggle = () => {\r\n    setSome(!some)\r\n  }\r\n  return {some, setSome, toggle}\r\n}\r\n\r\nexport const ModalForm  = ({children, content, modalTitle, state}) => {\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody> \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalDelete  = ({children, content, modalTitle, action, state}) => {\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    state.toggle();\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={state.toggle}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalOpenDelete  = ({content, modalTitle, action, clean}) => {\r\n\r\n  const [modal, setToogle] = useState(true);\r\n\r\n  const toggle = () => { \r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    toggle();\r\n  }\r\n\r\n  const toggleCancel = () => {\r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <Modal isOpen={modal} toggle={toggleCancel} >\r\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={toggleCancel}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody,\r\n} from 'reactstrap';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <Card className=\"card-form mx-auto text-center border-0\">\r\n            <CardBody>\r\n                <h4 className=\"display-1 font-weight-bold mb-0\">404</h4>\r\n                <h4 className=\"text-muted mb-4\">Página no encontrada</h4>\r\n                <Link to='/' className=\"btn btn-primary\">Regresar a inicio</Link>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","export const RE_EMAIL = {\r\n    re: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\r\n    validMessage: \"Email correcto\",\r\n    invalidMessage: \"El email necesita un @ y un . para ser valido\",\r\n  };\r\n  \r\n  export const RE_PASSWORD = {\r\n    re: /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i,\r\n    validMessage: \"Contraseña valida\",\r\n    invalidMessage:\r\n      \"La contraseña debe tener más de 8 caracteres, un dígito, una minúscula y una mayúscula  \",\r\n  };\r\n  \r\n  export const RE_PASSWORD_MATCHES = {\r\n    re: \"\",\r\n    validMessage: \"La Contraseña coincide\",\r\n    invalidMessage: \"La contraseña no coincide\",\r\n  };\r\n  \r\n  export const RE_EMPTY = {\r\n    re: /^[^]+$/i,\r\n    validMessage: \"Campo correcto\",\r\n    invalidMessage: \"No puede ir vacio\",\r\n  };\r\n  ","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nexport const Tabs = ({children1, children2, children3, tab=\"1\"}) => {\r\n  const [activeTab, setActiveTab] = useState(tab);\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs className=\"mb-2\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Posición\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Personal\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Laboral\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                      {children1}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                    {children2}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                    {children3}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/product.d9246254.jpg\";","export default __webpack_public_path__ + \"static/media/cristian.319f1962.jpg\";","export default __webpack_public_path__ + \"static/media/Jesus.7acb2fb5.jpg\";","export default __webpack_public_path__ + \"static/media/version-4-logo.e2c73c24.svg\";","export default __webpack_public_path__ + \"static/media/organigrama.b28e5e03.jpeg\";","export default __webpack_public_path__ + \"static/media/puestos.6832c674.jpeg\";","export default __webpack_public_path__ + \"static/media/descripciones.25a448ed.jpeg\";","export default __webpack_public_path__ + \"static/media/procesos.19e7ff14.jpeg\";","import React from 'react'\r\nimport Cristian from './cristian.jpg';\r\nimport Jesus from './Jesus.jpg';\r\nimport ProductDefault from './product.jpg'\r\nimport Logo from './version-4-logo.svg'\r\nimport Organigrama from './organigrama.jpeg'\r\nimport Puestos from './puestos.jpeg'\r\nimport Descripciones from './descripciones.jpeg'\r\nimport Procesos from './procesos.jpeg'\r\n   \r\n\r\n\r\n\r\nconst Img = ({src='', width='', alt='', className=''}) => {\r\n    return (\r\n        <img src={src} width={width} alt={alt} className={className}/>\r\n    )\r\n}\r\n\r\nexport const ImgCristian = ({className}) =>(\r\n    <Img src={Cristian} alt='Cristian photo' className={className}/>\r\n)\r\n\r\nexport const ImgJesus = ({className}) =>(\r\n    <Img src={Jesus} alt='jesus photo' className={className}/>\r\n)\r\n\r\nexport const ImgOrganigrama = ({className}) =>(\r\n    <Img src={Organigrama} alt='Organigrama' className={className}/>\r\n)\r\n\r\nexport const ImgProcesos = ({className}) =>(\r\n    <Img src={Procesos} alt='Procesos' className={className}/>\r\n)\r\n\r\nexport const ImgPuestos = ({className}) =>(\r\n    <Img src={Puestos} alt='Puestos' className={className}/>\r\n)\r\n\r\nexport const ImgDescripciones = ({className}) =>(\r\n    <Img src={Descripciones} alt='Descripciones' className={className}/>\r\n)\r\n\r\nexport const SvgLogo = ({className}) =>(\r\n    <Img src={Logo} width={150} alt='logo version 4' className={className}/>\r\n)\r\n\r\nexport const ImgProduct = ({uri = '', className}) =>(\r\n    <Img src={uri ? uri : ProductDefault} alt='default product' className={className}/>\r\n)\r\n\r\n\r\n    \r\n","//imports de react.\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {SvgLogo} from '../img'\r\n\r\nexport const LogoNavbar = ({href = '/', className=''}) => {\r\n    return (\r\n        <h6 className={`font-weight-bold ${className}`}> <Link to='/' className=\"text-dark\">Version 4</Link> </h6>\r\n    )\r\n}\r\n\r\n\r\nexport const Logo = ({href = '/', className=''}) => {\r\n    return (\r\n        <SvgLogo />\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const ShowListFromText = ({description = []}) => {\r\n\r\n    if(!description){\r\n        return 'no hay información';\r\n    }\r\n\r\n    let arrayDeCadenas = description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n\r\n    return(\r\n        <ul>\r\n            {arrayDeCadenas.map(item => {\r\n                return (\r\n                        <li>{item}</li>\r\n                    )\r\n                }    \r\n            )}\r\n        </ul>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const POSITION_CARGANDO = \"position_cargando\";\r\nexport const POSITION_ERROR = \"position_error\";\r\nexport const POSITION_HANDLE_CHANGE = \"position_handle_change\";\r\nexport const POSITION_CLEAN_STATE = \"position_clean_state\";\r\nexport const POSITION_CRUD = \"position_crud\";\r\nexport const POSITIONS_LIST = \"position_list\";\r\nexport const POSITION_HANDLE_VALIDATION = \"position_handle_validation\";\r\n\r\nexport const GetPositions = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Positions`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\nexport const GetPositionsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PositionsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\n\r\nexport const GetPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const PutPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'position_put'};\r\n}\r\n\r\nexport const PostPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const DeletePosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_HANDLE_VALIDATION, \r\n    GetPositions,\r\n    GetPositionsByCompanyId,\r\n    GetPosition,\r\n    PutPosition,\r\n    PostPosition,\r\n    DeletePosition\r\n  } from \"./positionTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const positionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const positionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const positionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const positionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPositions\":\r\n          answer = await GetPositions(); \r\n          break;\r\n\r\n        case \"GetPositionsByCompanyId\":\r\n          answer = await GetPositionsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPosition\":\r\n          answer = await GetPosition(data);\r\n          break;\r\n\r\n        case \"PutPosition\":\r\n          answer = await PutPosition(data);\r\n          break;\r\n\r\n        case \"PostPosition\":\r\n          answer = await PostPosition(data);\r\n          break;\r\n        \r\n        case \"DeletePosition\":\r\n          answer = await DeletePosition(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: POSITION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nclass Position extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {positionId, positionMethods} = this.props;\r\n        positionId && await positionMethods({Id: positionId}, 'GetPosition');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            positionMethods, \r\n            positionReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                Description,\r\n                Description2,\r\n                CompanyId,\r\n                Objective,\r\n                Knowledge,\r\n                Salary\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            Description: Description ? Description : '',\r\n            Description2: Description2 ? Description2 : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Objective: Objective ? Objective : '',\r\n            Knowledge: Knowledge ? Knowledge : '',\r\n            Salary: Salary ? Salary : ''\r\n        }\r\n        await positionMethods(model, action);\r\n    }\r\n\r\n    actionPosition = async () => {\r\n        const {\r\n            positionCleanState,\r\n            positionReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPosition');\r\n        }else{\r\n            await this.sendAction('PostPosition')\r\n        }\r\n        if(this.props.positionReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            positionCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {positionCleanState} = this.props;\r\n        positionCleanState()\r\n\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            positionHandleValidation,\r\n            positionHandleChange,\r\n            positionReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Description,\r\n                    Description2,\r\n                    Objective,\r\n                    Salary\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPosition}\r\n                textButton={Id ? 'Guardar Puesto' : 'Crear Puesto'}\r\n                textButtonLoading={Id ? 'Guardando PUesto...' : 'Creando Puesto...'}\r\n                validations={validations}\r\n                handleValidations={positionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Objetivo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Objective'}\r\n                    placeHolder={'Introduce el objetivo del puesto'}\r\n                    inputValue={Objective}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Objective}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Responsabilidades'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce las responsabilidades del puesto'}\r\n                    inputValue={Description}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Competencias'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description2'}\r\n                    placeHolder={'Introduce información'}\r\n                    inputValue={Description2}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description2}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Puntos'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Salary'}\r\n                    placeHolder={'Introduce puntos'}\r\n                    inputValue={Salary}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Salary}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({positionReducer}) => {\r\n    return {positionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...positionActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Position);\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nconst ListOfPositions = ({ title='Posiciones', reDirect='', create='/create-position'}) => {\r\n    const positionReducer = useSelector(state => state.positionReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(positionActions.positionMethods({companyId},'GetPositionsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (positionId) => {\r\n        //history.push(`/admin-dashboard/company/${companyId}/update-position/${positionId}`)\r\n        history.push(reDirect.replace('positionId', positionId).replace('companyId', companyId))\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_positions\r\n    } = positionReducer;\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Puesto','Acciones']}\r\n                propertiesTable={['Name']}\r\n                //hrefCreate={`/admin-dashboard/company/${companyId}${create}`}\r\n                hrefCreate={create.replace('companyId', companyId)}\r\n                bodyTable={list_positions}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Puesto', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPositions;\r\n\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Lists} from '../config-components'\r\n\r\nexport const ListOfResponsabilities = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description}/>\r\n    )\r\n}\r\n\r\nexport const ListOfDescriptions = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description2}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description2}/>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ORGANIZATION_CHART_CARGANDO = \"organization_chart_cargando\";\r\nexport const ORGANIZATION_CHART_ERROR = \"organization_chart_error\";\r\nexport const ORGANIZATION_CHART_HANDLE_CHANGE = \"organization_chart_handle_change\";\r\nexport const ORGANIZATION_CHART_CLEAN_STATE = \"organization_chart_clean_state\";\r\nexport const ORGANIZATION_CHART_CRUD = \"organization_chart_crud\";\r\nexport const ORGANIZATION_CHARTS_LIST = \"organization_charts_list\";\r\nexport const ORGANIZATION_CHART_HANDLE_VALIDATION = \"organization_chart_handle_validation\";\r\nexport const ORGANIZATION_CHART_CHILD = 'organization_chart_child'\r\n\r\nexport const GetOrganizationCharts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationCharts`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHARTS_LIST};\r\n}\r\n\r\nexport const GetOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\nexport const GetPositionFromOrganization = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PositionFromOrganization?positionChartId=${data.positionChartId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartChild = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartByCompanyId = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByCompanyId?companyId=${data.companyId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const GetOrganizationChartByArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByArea?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const PutOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'organization_chart_put'};\r\n}\r\n\r\nexport const PostOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const DeleteOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION, \r\n    GetOrganizationCharts,\r\n    GetOrganizationChart,\r\n    GetPositionFromOrganization,\r\n    GetOrganizationChartChild,\r\n    GetOrganizationChartByCompanyId,\r\n    GetOrganizationChartByArea,\r\n    PutOrganizationChart,\r\n    PostOrganizationChart,\r\n    DeleteOrganizationChart\r\n } from \"./organizationChartTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const organizationChartHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const organizationChartHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartMethods = (data, method, loading = '') => async (dispatch) => {\r\n    dispatch({\r\n      type:!loading ? ORGANIZATION_CHART_CARGANDO : loading,\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetOrganizationCharts\":\r\n            answer = await GetOrganizationCharts(); \r\n            break;\r\n\r\n        case \"GetOrganizationChart\":\r\n            answer = await GetOrganizationChart(data);\r\n            break;\r\n\r\n        case \"GetPositionFromOrganization\":\r\n            answer = await GetPositionFromOrganization(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartChild\":\r\n            answer = await GetOrganizationChartChild(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartByCompanyId\":\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n            if(answer.res.data.length > 0){\r\n              let padre = answer.res.data.filter(child => child.PositionChartId == null);\r\n              let createTree = tree(padre[0], answer.res.data )\r\n              answer.res.data = createTree\r\n            }\r\n            \r\n            break;\r\n        case \"GetOrganizationChartByArea\":\r\n            //answer = await GetOrganizationChartByArea(data);\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n\r\n            if(answer.res.data.length > 0){\r\n              let area = answer.res.data.filter(child => child.AreasId === Number(data.areaId));\r\n              let createTreeByArea = tree(area[0], answer.res.data )\r\n              answer.res.data = createTreeByArea\r\n            }\r\n            break;\r\n        case \"GetOrganizationChartByFatherPosition\":\r\n          answer = await GetOrganizationChartByCompanyId(data);\r\n          if(answer.res.data.length > 0){\r\n            let fatherPosition = answer.res.data.filter(child => child.Id === Number(data.positionChartId));\r\n            let createTreeByFatherPosition = tree(fatherPosition[0], answer.res.data )\r\n            answer.res.data = createTreeByFatherPosition\r\n          }\r\n          break;\r\n\r\n        case \"PutOrganizationChart\":\r\n          answer = await PutOrganizationChart(data);\r\n          break;\r\n\r\n        case \"PostOrganizationChart\":\r\n          answer = await PostOrganizationChart(data);\r\n          break;\r\n        \r\n        case \"DeleteOrganizationChart\":\r\n          answer = await DeleteOrganizationChart(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ORGANIZATION_CHART_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  const tree = (padre, hijos) => {\r\n      \r\n      let children = hijos.filter(child => child.PositionChartId == padre.Id);\r\n      if(!children || children?.length === 0 || children === undefined ){\r\n        return padre;\r\n      }\r\n\r\n      padre.ChartTree1 = children.map(child => {\r\n        return tree(child, hijos);\r\n      })\r\n\r\n      return padre;\r\n  }","import ComponentPosition from './Positions'\r\nimport ComponentListOfPositions from './ListOfPositions'\r\nimport * as ComponentsListFromPositions from './Responsibilities'\r\nimport ComponentReadPosition from './ReadPosition'\r\nexport const Position = ComponentPosition;\r\nexport const ListOfPositions = ComponentListOfPositions;\r\nexport const ListFromPositions = ComponentsListFromPositions; \r\nexport const ReadPosition = ComponentReadPosition; ","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as organizationChartActions from '../components-organization-chart/reducer/organizationChartActions'\r\n\r\nconst ReadPosition = ({positionChartId}) => {\r\n\r\n    const organizationChartReducer = useSelector(state => state.organizationChartReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { read_child } = organizationChartReducer;\r\n    useEffect(() => {\r\n        dispatch(organizationChartActions.organizationChartMethods({positionChartId},'GetPositionFromOrganization', 'loading-child'))\r\n    }, [dispatch, positionChartId])\r\n\r\n    let arrayDeCadenas;\r\n    if(read_child.Responsibilities){\r\n        arrayDeCadenas = read_child.Responsibilities.split('-');\r\n        arrayDeCadenas.splice(0, 1);\r\n    } \r\n\r\n    let arrayDeCadenas2;\r\n    if(read_child.Competencias){\r\n        arrayDeCadenas2 = read_child.Competencias.split('-');\r\n        arrayDeCadenas2.splice(0, 1);\r\n    } \r\n\r\n  \r\n    \r\n    return (\r\n        <div className={'mb-4'}> \r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Puesto:</div>\r\n                <div className={'text-muted'}>{read_child.PositionName}</div>\r\n            </div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Objetivo:</div>\r\n                <div className={'text-muted'}>{read_child.Objective}</div>\r\n            </div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Responsabilidades:</div>\r\n                <ul>\r\n                    {arrayDeCadenas ? arrayDeCadenas.map(item => {\r\n                        return (\r\n                                <li className='text-muted'>{item}</li>\r\n                            )\r\n                        }    \r\n                    ) : 'No hay responsabilidades asignadas a este puesto.'}\r\n                </ul>\r\n            </div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Competencias:</div>\r\n                <ul>\r\n                    {arrayDeCadenas2 ? arrayDeCadenas2.map(item => {\r\n                        return (\r\n                                <li className='text-muted'>{item}</li>\r\n                            )\r\n                        }    \r\n                    ) : 'No hay competencias asignadas a este puesto.'}\r\n                </ul>\r\n            </div>\r\n            <div className='mb-4'>\r\n                <div className={'font-weight-bold'}>Puntos: <span  className={'text-muted'}>{read_child.Puntos ? read_child.Puntos: 0}</span></div>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPosition;","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const AREA_CARGANDO = \"area_cargando\";\r\nexport const AREA_ERROR = \"area_error\";\r\nexport const AREA_HANDLE_CHANGE = \"area_handle_change\";\r\nexport const AREA_CLEAN_STATE = \"area_clean_state\";\r\nexport const AREA_CRUD = \"area_crud\";\r\nexport const AREAS_LIST = \"area_list\";\r\nexport const AREA_HANDLE_VALIDATION = \"area_handle_validation\";\r\n\r\nexport const GetAreas = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Areas`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdWithoutTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdWithoutTaken?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdTaken?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\n\r\nexport const GetArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const PutArea = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/Area?id=${data.Id}`,\r\n      true,\r\n      \"put\",\r\n      data\r\n    );\r\n  return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PutAreaTaken = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/AreaTaken?areaId=${data.areaId ? data.areaId : 0}&organizationChartId=${data.organizationChartId}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PostArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const DeleteArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_HANDLE_VALIDATION, \r\n    GetAreas,\r\n    GetAreasByCompanyId,\r\n    GetAreasByCompanyIdWithoutTaken,\r\n    GetAreasByCompanyIdTaken,\r\n    GetArea,\r\n    PutAreaTaken,\r\n    PutArea,\r\n    PostArea,\r\n    DeleteArea\r\n  } from \"./areaTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const areaHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const areaHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const areaCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const areaMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetAreas\":\r\n          answer = await GetAreas(); \r\n          break;\r\n\r\n        case \"GetAreasByCompanyId\":\r\n          answer = await GetAreasByCompanyId(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdWithoutTaken\":\r\n          answer = await GetAreasByCompanyIdWithoutTaken(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdTaken\":\r\n          answer = await GetAreasByCompanyIdTaken(data);\r\n          break;\r\n        \r\n        case \"GetArea\":\r\n          answer = await GetArea(data);\r\n          break;\r\n\r\n        case \"PutAreaTaken\":\r\n          answer = await PutAreaTaken(data);\r\n          break;\r\n\r\n        case \"PutArea\":\r\n          answer = await PutArea(data);\r\n          break;\r\n\r\n        case \"PostArea\":\r\n          answer = await PostArea(data);\r\n          break;\r\n        \r\n        case \"DeleteArea\":\r\n          answer = await DeleteArea(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: AREA_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { Card,  CardBody, CardTitle, CardSubtitle,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Col\r\n} from 'reactstrap'\r\nimport {ReadPosition} from '../components-position'\r\nimport {ApiResponses} from '../components-api'\r\nimport {Inputs} from '../config-components'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport bem from 'easy-bem'\r\nimport './style.css'\r\nconst cn = bem('scrollbars-example')\r\nconst COLS = 20\r\nconst ROWS = 20\r\n\r\nconst StyledNode = styled.div`\r\n  padding: 5px;\r\n  border-radius: 8px;\r\n  display: inline-block;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Modals = ({positionId, children, modalTitle, name}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    return (\r\n      <>\r\n        <span role=\"button\" onClick={toggle}>{children}</span>\r\n        <Modal isOpen={modal} toggle={toggle} >\r\n          <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n          <ModalBody>\r\n            <h3>{name}</h3> \r\n            <ReadPosition positionId={positionId} />\r\n          </ModalBody>\r\n          {/* <ModalFooter>\r\n            <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{' '}\r\n            <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n          </ModalFooter> */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport const CardNode = ({positionId,name, employee, area, addChild, updateNode,deleteChild}) => {\r\n    const rArea = area ? area : '';\r\n    return(\r\n        \r\n        <Card>\r\n            <CardBody className=' d-flex justify-content-between'>\r\n                <div className={'mr-5 '}>\r\n                    <div className='font-weight-bold  mb-2' style={{textAlign: 'start'}}>\r\n                        {name}\r\n                    </div>\r\n                    <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                        {employee ? `${employee.Name} ${employee.LastName} ` :'Empleado'}\r\n                    </div> \r\n                    {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n                </div>\r\n                <div>\r\n                    {/* <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div> */}\r\n                    <div>\r\n                        <Modals positionId={positionId} modalTitle={name} name={name} >\r\n                            <FaIcons.FaEye  className=\"text-secondary\" />\r\n                        </Modals>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div>\r\n                    <div>\r\n                        {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n \r\nclass OrganizationChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.container  = React.createRef();\r\n        this.state = {\r\n          value: ''\r\n        }\r\n      }\r\n\r\n      async componentDidMount() {\r\n        const {\r\n            organizationChartMethods,\r\n            areaMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n        companyId && await areaMethods({companyId: companyId}, 'GetAreasByCompanyIdTaken')\r\n   \r\n       \r\n        this.centerDiagram();\r\n    }\r\n\r\n    \r\n    centerDiagram = () => {\r\n        const element = this.container.current;\r\n        if (element) {\r\n            //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n            element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n        }\r\n    }\r\n\r\n    createOrganigrama =  (organigrama) => {\r\n        let ChartTree1 = organigrama?.ChartTree1\r\n        if(ChartTree1?.length === 0 || ChartTree1 === undefined || !ChartTree1){\r\n            \r\n            return <TreeNode \r\n                label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {''}\r\n                        name={organigrama.PositionName} \r\n                        employee = { organigrama.PersonalDetail}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n                }\r\n            />\r\n        }\r\n        \r\n        return <TreeNode \r\n            label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {''}\r\n                        name = {organigrama.PositionName} \r\n                        employee = { organigrama.PersonName}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n            }\r\n        >\r\n            {\r\n                ChartTree1.map((child) => {           \r\n                    return this.createOrganigrama(child)\r\n                })\r\n            }\r\n        </TreeNode>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addUpChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    getOrganizationChartByArea = async(e) => {\r\n        debugger\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        value === 'general' ? \r\n            await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId') :\r\n            await organizationChartMethods({companyId, areaId: value},'GetOrganizationChartByArea');\r\n\r\n        this.centerDiagram();\r\n       \r\n    }\r\n\r\n    getCompleteOrganizationChart = async() => {\r\n        const {\r\n            organizationChartMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n    }\r\n\r\n    render () {\r\n\r\n        const { \r\n            organizationChartReducer:{\r\n                data: {Id},\r\n                api_actions: {\r\n                    cargando,\r\n                    error\r\n                }\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }, \r\n            hrefBase\r\n        } = this.props\r\n\r\n        return(\r\n            <div >\r\n                <ul className=\"list-inline m-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${hrefBase}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \">\r\n                    \r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => this.getOrganizationChartByArea(e)}>\r\n                                <option value='general' >General</option>\r\n                                {\r\n                                    list_areas.map(area => {\r\n                                      \r\n                                        return <option value={area.Id}>\r\n                                            {area.Name}\r\n                                        </option>\r\n                                    })\r\n                                }\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </li>\r\n                </ul>\r\n               \r\n                {\r\n                    cargando \r\n                        ? \r\n                            <ApiResponses.Loader activate={true}/> \r\n                        :\r\n                    error \r\n                        ? \r\n                            <ApiResponses.Error message={error} />\r\n                        :\r\n                    Id \r\n                        ? \r\n                            <div className={cn()}>\r\n                                <ScrollContainer\r\n                              \r\n                                 innerRef={this.container}>\r\n                            \t    <Tree  \r\n                            \t        lineWidth={'2px'}\r\n                            \t        lineColor={'gray'}\r\n                            \t        lineBorderRadius={'10px'}\r\n                            \t        label={\r\n                            \t            <StyledNode>\r\n                            \t               <h1>{this.props.organizationChartReducer.data.Area?.Name ? this.props.organizationChartReducer.data.Area?.Name : 'General'}</h1>\r\n                            \t            </StyledNode>\r\n                            \t        }\r\n                            \t    >\r\n                            \t        {\r\n                            \t            this.createOrganigrama(this.props.organizationChartReducer.data)\r\n                            \t        }\r\n                            \t    </Tree>\r\n                            \t</ScrollContainer>\r\n                            </div>\r\n                        : \r\n                            <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                        \r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer, areaReducer}) => {\r\n    return {organizationChartReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...areaActions\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PERSONAL_DETAIL_CARGANDO = \"personal_detail_cargando\";\r\nexport const PERSONAL_DETAIL_ERROR = \"personal_detail_error\";\r\nexport const PERSONAL_DETAIL_HANDLE_CHANGE = \"personal_detail_handle_change\";\r\nexport const PERSONAL_DETAIL_CLEAN_STATE = \"personal_detail_clean_state\";\r\nexport const PERSONAL_DETAIL_CRUD = \"personal_detail_crud\";\r\nexport const PERSONAL_DETAILS_LIST = \"personal_detail_list\";\r\nexport const PERSONAL_DETAIL_HANDLE_VALIDATION = \"personal_detail_handle_validation\";\r\n\r\nexport const GetPersonalDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\nexport const GetPersonalDetailsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PersonalDetailsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\n\r\nexport const GetPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'personal_detail_put'};\r\n}\r\n\r\nexport const PostPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeletePersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION, \r\n    GetPersonalDetails,\r\n    GetPersonalDetailsByCompanyId,\r\n    GetPersonalDetail,\r\n    PutPersonalDetail,\r\n    PostPersonalDetail,\r\n    DeletePersonalDetail\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const personalDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const personalDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPersonalDetails\":\r\n          answer = await GetPersonalDetails(); \r\n          break;\r\n\r\n        case \"GetPersonalDetailsByCompanyId\":\r\n          answer = await GetPersonalDetailsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPersonalDetail\":\r\n          answer = await GetPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PutPersonalDetail\":\r\n          answer = await PutPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PostPersonalDetail\":\r\n          answer = await PostPersonalDetail(data);\r\n          break;\r\n        \r\n        case \"DeletePersonalDetail\":\r\n          answer = await DeletePersonalDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PERSONAL_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as positionActions from '../components-position/reducer/positionActions'\r\nimport * as personalDetailActions from '../components-personal-detail/reducer/personalDetailActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\n\r\n\r\nclass OrganizationChart extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {\r\n            nodeId, \r\n            organizationChartMethods, \r\n            personalDetailMethods,\r\n            areaMethods,\r\n            companyId, \r\n            positionMethods\r\n        } = this.props;\r\n        nodeId && await organizationChartMethods({Id: nodeId}, 'GetOrganizationChart');\r\n        companyId && await positionMethods({companyId: companyId}, 'GetPositionsByCompanyId')\r\n        companyId && await personalDetailMethods({companyId: companyId}, 'GetPersonalDetailsByCompanyId')\r\n        companyId && await areaMethods({companyId: companyId, areaId: this.props.organizationChartReducer.data.AreasId}, 'GetAreasByCompanyIdWithoutTaken')\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            organizationChartMethods, \r\n            organizationChartReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PositionId,\r\n                PositionChartId,\r\n                CompanyId,\r\n                PersonDetailId,\r\n                AreasId\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        debugger\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PositionId: PositionId ? Number(PositionId) : '',\r\n            PersonDetailId: PersonDetailId ?  Number(PersonDetailId) : '',\r\n            PositionChartId: PositionChartId ?  Number(PositionChartId) : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            AreasId: AreasId ? AreasId : ''\r\n        }\r\n        await organizationChartMethods(model, action);\r\n    }\r\n\r\n    actionOrganizationChart = async () => {\r\n        const {\r\n            areaMethods,\r\n            organizationChartCleanState,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id,\r\n                    AreasId\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            // if(AreasId){\r\n                await areaMethods({areaId: AreasId, organizationChartId: Id}, 'PutAreaTaken')\r\n                //hago taken y hago untaken del area id del organization chart\r\n            // }\r\n            await this.sendAction('PutOrganizationChart');\r\n        }\r\n        if(this.props.organizationChartReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            organizationChartCleanState()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            organizationChartHandleValidation,\r\n            organizationChartHandleChange,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id, \r\n                    PositionId,\r\n                    PersonDetailId,\r\n                    AreasId\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            positionReducer: {\r\n                list_positions\r\n            },\r\n            personalDetailReducer: {\r\n                list_personal_details\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }\r\n\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionOrganizationChart}\r\n                textButton={ 'Guardar Puesto' }\r\n                textButtonLoading={'Guardando Puesto...' }\r\n                validations={validations}\r\n                handleValidations={organizationChartHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Puesto'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PositionId'}\r\n                    placeHolder={'Selecciona un Puesto'}\r\n                    inputValue={PositionId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PositionId}\r\n                    optionPlaceHolder={'Selecciona un Puesto'}\r\n                    options={list_positions}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Empleado'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PersonDetailId'}\r\n                    placeHolder={'Selecciona un Empleado'}\r\n                    inputValue={PersonDetailId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PersonDetailId}\r\n                    optionPlaceHolder={'Selecciona un Empleado'}\r\n                    options={list_personal_details}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Area'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'AreasId'}\r\n                    placeHolder={'Selecciona una Area o Departamento'}\r\n                    inputValue={AreasId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.AreasId}\r\n                    optionPlaceHolder={'Selecciona una Area o Departamento'}\r\n                    options={list_areas}\r\n                /> \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}) => {\r\n    return {organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...positionActions,\r\n    ...personalDetailActions,\r\n    ...areaActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { DropdownItem } from \"reactstrap\";\r\n\r\nimport { ApiResponses } from \"../components-api\";\r\nimport { connect } from \"react-redux\";\r\nimport * as organizationChartActions from \"./reducer/organizationChartActions\";\r\nimport * as areaActions from \"../components-area/reducer/areaActions\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\n\r\nimport { Collapse, DropDowns } from \"../config-components\";\r\nimport \"./style.css\";\r\n\r\nclass OrganizationChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.container = React.createRef();\r\n    this.state = {\r\n      value: \"Editar\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { organizationChartMethods, areaMethods, companyId } = this.props;\r\n    await organizationChartMethods(\r\n      { companyId },\r\n      \"GetOrganizationChartByCompanyId\"\r\n    );\r\n    companyId &&\r\n      (await areaMethods({ companyId: companyId }, \"GetAreasByCompanyIdTaken\"));\r\n\r\n    this.centerDiagram();\r\n  }\r\n\r\n  centerDiagram = () => {\r\n    const element = this.container.current;\r\n    if (element) {\r\n      //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n      element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n    }\r\n  };\r\n\r\n  createOrganigrama = (organigrama, isOpenAux = false, mode) => {\r\n    let ChartTree1 = organigrama?.ChartTree1;\r\n    if (ChartTree1?.length === 0 || ChartTree1 === undefined || !ChartTree1) {\r\n      return (\r\n        <div>\r\n          <Collapse.Node\r\n            positionChartId={organigrama.Id}\r\n            positionId={organigrama.PositionId}\r\n            labelButton={organigrama.PositionName}\r\n            employee={organigrama.PersonName}\r\n            area={organigrama.Area}\r\n            addChild={() => this.addChild(organigrama?.Id)}\r\n            deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n            updateNode={() => this.updateNode(organigrama?.Id)}\r\n            watchChild={() => this.watchChild(organigrama.PositionChartId)}\r\n            isOpenAux={isOpenAux}\r\n            mode={mode}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Collapse.Node\r\n        positionChartId={organigrama.Id}\r\n        positionId={organigrama.PositionId}\r\n        labelButton={organigrama.PositionName}\r\n        employee={organigrama.PersonName}\r\n        area={organigrama.Area}\r\n        addChild={() => this.addChild(organigrama?.Id)}\r\n        updateNode={() => this.updateNode(organigrama?.Id)}\r\n        watchChild={() => this.watchChild(organigrama.PositionChartId)}\r\n        isFirst={organigrama.PositionChartId}\r\n        isOpenAux={isOpenAux}\r\n        mode={mode}\r\n      >\r\n        {ChartTree1.map((child) => {\r\n          return <>{this.createOrganigrama(child, false, mode)}</>;\r\n        })}\r\n      </Collapse.Node>\r\n    );\r\n  };\r\n\r\n  createOrigin = async () => {\r\n    const { organizationChartMethods, companyId } = this.props;\r\n    await organizationChartMethods(\r\n      { CompanyId: companyId },\r\n      \"PostOrganizationChart\"\r\n    );\r\n    await organizationChartMethods(\r\n      { companyId },\r\n      \"GetOrganizationChartByCompanyId\"\r\n    );\r\n  };\r\n\r\n  addUpChild = async (parentId) => {\r\n    debugger;\r\n    const { organizationChartMethods, companyId } = this.props;\r\n    await organizationChartMethods(\r\n      { CompanyId: companyId, PositionChartId: parentId },\r\n      \"PostOrganizationChart\"\r\n    );\r\n    await organizationChartMethods(\r\n      { companyId },\r\n      \"GetOrganizationChartByCompanyId\"\r\n    );\r\n  };\r\n\r\n  addChild = async (parentId) => {\r\n    debugger;\r\n    const { organizationChartMethods, companyId } = this.props;\r\n    await organizationChartMethods(\r\n      { CompanyId: companyId, PositionChartId: parentId },\r\n      \"PostOrganizationChart\"\r\n    );\r\n    await organizationChartMethods(\r\n      { companyId },\r\n      \"GetOrganizationChartByCompanyId\"\r\n    );\r\n  };\r\n\r\n  deleteChild = async (parentId) => {\r\n    debugger;\r\n    const { organizationChartMethods, companyId } = this.props;\r\n    await organizationChartMethods({ Id: parentId }, \"DeleteOrganizationChart\");\r\n    await organizationChartMethods(\r\n      { companyId },\r\n      \"GetOrganizationChartByCompanyId\"\r\n    );\r\n  };\r\n\r\n  updateNode = (nodeId) => {\r\n    const { history, companyId } = this.props;\r\n    history.push(\r\n      `/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`\r\n    );\r\n  };\r\n\r\n  getOrganizationChartByArea = async (e) => {\r\n    //e.preventDefault();\r\n    const value = e; //e.target.value;\r\n    const { companyId, organizationChartMethods } = this.props;\r\n    value === \"general\"\r\n      ? await organizationChartMethods(\r\n          { companyId },\r\n          \"GetOrganizationChartByCompanyId\"\r\n        )\r\n      : await organizationChartMethods(\r\n          { companyId, areaId: value },\r\n          \"GetOrganizationChartByArea\"\r\n        );\r\n  };\r\n\r\n  watchChild = async (positionChartId) => {\r\n    const { companyId, organizationChartMethods } = this.props;\r\n    await organizationChartMethods(\r\n      { companyId, positionChartId },\r\n      \"GetOrganizationChartByFatherPosition\"\r\n    );\r\n  };\r\n\r\n  getCompleteOrganizationChart = async () => {\r\n    const { organizationChartMethods, companyId } = this.props;\r\n    await organizationChartMethods(\r\n      { companyId },\r\n      \"GetOrganizationChartByCompanyId\"\r\n    );\r\n  };\r\n\r\n  EditOrganizationChart = () => {\r\n    this.setState({ value: \"Editar\" });\r\n  };\r\n\r\n  ViewOrganizationChart = () => {\r\n    this.setState({ value: \"Vista\" });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      organizationChartReducer: {\r\n        data: { Id },\r\n        api_actions: { cargando, error },\r\n      },\r\n      areaReducer: { list_areas },\r\n      hrefBase,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"list-inline m-4\">\r\n          <li className=\"list-inline-item\">\r\n            <small>\r\n              <Link to={`${hrefBase}`} className=\"text-muted\">\r\n                Inicio\r\n              </Link>{\" \"}\r\n              <FaIcons.FaChevronRight className=\"ml-1\" />\r\n            </small>\r\n          </li>\r\n          <li className=\"list-inline-item \">\r\n            <small className=\"font-weight-bold\">\r\n              Organigrama <FaIcons.FaChevronRight className=\"ml-1\" />\r\n            </small>\r\n          </li>\r\n          <li className=\"list-inline-item \">\r\n            <DropDowns.DropDownActions labelButton=\"Areas\">\r\n              <DropdownItem\r\n                onClick={() => this.getOrganizationChartByArea(\"general\")}\r\n              >\r\n                General\r\n              </DropdownItem>\r\n              {list_areas.map((area) => {\r\n                return (\r\n                  <DropdownItem\r\n                    onClick={() => this.getOrganizationChartByArea(area.Id)}\r\n                  >\r\n                    {area.Name}\r\n                  </DropdownItem>\r\n                );\r\n              })}\r\n            </DropDowns.DropDownActions>\r\n          </li>\r\n          <li>\r\n            <DropDowns.DropDownActions labelButton={this.state.value}>\r\n              <DropdownItem onClick={this.EditOrganizationChart}>\r\n                Editar\r\n              </DropdownItem>\r\n              <DropdownItem onClick={this.ViewOrganizationChart}>\r\n                Vista\r\n              </DropdownItem>\r\n            </DropDowns.DropDownActions>\r\n          </li>\r\n        </ul>\r\n        {cargando ? (\r\n          <ApiResponses.Loader activate={true} />\r\n        ) : error ? (\r\n          <ApiResponses.Error message={error} />\r\n        ) : Id ? (\r\n          <div className=\"m-4\">\r\n            <h1>\r\n              {this.props.organizationChartReducer.data.Area\r\n                ? this.props.organizationChartReducer.data.Area\r\n                : \"General\"}\r\n            </h1>\r\n            {this.createOrganigrama(\r\n              this.props.organizationChartReducer.data,\r\n              true,\r\n              this.state.value\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ organizationChartReducer, areaReducer }) => {\r\n  return { organizationChartReducer, areaReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...organizationChartActions,\r\n  ...areaActions,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);\r\n","import ComponentOrganizationChart from './OrganizationChart'\r\nimport ComponentUpdateChild from './UpdateChild'\r\nimport ComponentViewOrganizationChart from './ViewOrganizationChart'\r\nimport ComponentReadChild from './ReadChild'\r\n\r\nexport const OrganizationChart = ComponentOrganizationChart;\r\nexport const UpdateChild = ComponentUpdateChild;\r\nexport const ViewOrganizationChart = ComponentViewOrganizationChart;\r\nexport const ReadChild = ComponentReadChild;","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\n\r\nimport {Tabs} from '../config-components'\r\n\r\nconst ReadChild = ({positionChartId, tab}) => {\r\n    debugger\r\n    const organizationChartReducer = useSelector(state => state.organizationChartReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { read_child } = organizationChartReducer;\r\n    useEffect(() => {\r\n        dispatch(organizationChartActions.organizationChartMethods({positionChartId},'GetPositionFromOrganization', 'loading-child'))\r\n        // return () => {\r\n        //     dispatch(organizationChartActions.organizationChartCleanState());\r\n        // }\r\n    }, [dispatch, positionChartId])\r\n\r\n    let arrayDeCadenas;\r\n    if(read_child.Responsibilities){\r\n        arrayDeCadenas = read_child.Responsibilities.split('-');\r\n        arrayDeCadenas.splice(0, 1);\r\n    } \r\n\r\n    let arrayDeCadenas2;\r\n    if(read_child.Competencias){\r\n        arrayDeCadenas2 = read_child.Competencias.split('-');\r\n        arrayDeCadenas2.splice(0, 1);\r\n    } \r\n\r\n    let arrayDeCadenas3;\r\n    if(read_child.CompetenciasUser){\r\n        arrayDeCadenas3 = read_child.CompetenciasUser.split('-');\r\n        arrayDeCadenas3.splice(0, 1);\r\n    } \r\n    \r\n    \r\n    return (\r\n        <div className={'mb-4'}> \r\n            <Tabs.Tabs tab={tab}\r\n                children1={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Puesto:</div>\r\n                            <div className={'text-muted'}>{read_child.PositionName}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Objetivo:</div>\r\n                            <div className={'text-muted'}>{read_child.Objective}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Responsabilidades:</div>\r\n                            <ul>\r\n                                {arrayDeCadenas ? arrayDeCadenas.map(item => {\r\n                                    return (\r\n                                            <li className='text-muted'>{item}</li>\r\n                                        )\r\n                                    }    \r\n                                ) : 'No hay responsabilidades asignadas a este puesto.'}\r\n                            </ul>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Competencias:</div>\r\n                            <ul>\r\n                                {arrayDeCadenas2 ? arrayDeCadenas2.map(item => {\r\n                                    return (\r\n                                            <li className='text-muted'>{item}</li>\r\n                                        )\r\n                                    }    \r\n                                ) : 'No hay competencias asignadas a este puesto.'}\r\n                            </ul>\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                            <div className={'font-weight-bold'}>Puntos: <span  className={'text-muted'}>{read_child.Puntos ? read_child.Puntos: 0}</span></div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                children2={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Nombre:</div>\r\n                            <div className={'text-muted'}>{read_child.PersonName}</div>\r\n                        </div>\r\n                        {/* <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Sexo:</div>\r\n                            <div className={'text-muted'}>{read_child.Sexo}</div>\r\n                        </div> */}\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Edad:</div>\r\n                            <div className={'text-muted'}>{ read_child.Birthdate ? Number(new Date().getFullYear()) - Number(read_child.Birthdate.substr(0,4)) : ''}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Competencias:</div>\r\n                            <ul>\r\n                                {arrayDeCadenas3 ? arrayDeCadenas3.map(item => {\r\n                                    return (\r\n                                            <li className='text-muted'>{item}</li>\r\n                                        )\r\n                                    }    \r\n                                ) : 'No hay responsabilidades asignadas a este puesto.'}\r\n                            </ul>\r\n                        </div>\r\n                        {\r\n                        read_child.CURP && \r\n                            <div className='mb-2'>\r\n                                <div className={'font-weight-bold'}>CURP:</div>\r\n                                <div className={'text-muted'}>{read_child.CURP}</div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                        read_child.IMSS && \r\n                            <div className='mb-2'>\r\n                                <div className={'font-weight-bold'}>IMSS:</div>\r\n                                <div className={'text-muted'}>{read_child.IMSS}</div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                        read_child.RFC && \r\n                            <div className='mb-2'>\r\n                                <div className={'font-weight-bold'}>RFC:</div>\r\n                                <div className={'text-muted'}>{read_child.RFC}</div>\r\n                            </div>\r\n                        }\r\n                        {\r\n                        read_child.Status && \r\n                            <div className='mb-2'>\r\n                                <div className={'font-weight-bold'}>Estatus:</div>\r\n                                <div className={'text-muted'}>{read_child.Status}</div>\r\n                            </div>\r\n                        }\r\n                        \r\n                        {/* <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>RFC:</div>\r\n                            <div className={'text-muted'}>{read_child.RFC}</div>\r\n                        </div> */}\r\n                    </>\r\n                }\r\n                children3={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Nombre:</div>\r\n                            <div className={'text-muted'}>{read_child.PersonName}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Antiguedad:</div>\r\n                            <div className={'text-muted'}>{ read_child.DateAdmission ? Number(new Date().getFullYear()) - Number(read_child.DateAdmission.substr(0,4)) : ''}</div>\r\n                        </div>\r\n                        \r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Prestaciones:</div>\r\n                            <div className={'text-muted'}>{read_child.Benefits}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Sueldo Mensual:</div>\r\n                            <div className={'text-muted'}>{read_child.MonthlySalary}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Ingreso Total:</div>\r\n                            <div className={'text-muted'}>{read_child.TotalSalary}</div>\r\n                        </div>\r\n                        \r\n                    </>\r\n                }\r\n            ></Tabs.Tabs>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadChild;","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport { ReadChild } from \"../components-organization-chart\";\r\nimport { ReadPosition } from \"../components-position\";\r\n\r\n\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\";\r\n\r\nexport const Modals = ({ positionChartId, children, tab }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <>\r\n      <span role=\"button\" onClick={toggle}>\r\n        {children}\r\n      </span>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Información</ModalHeader>\r\n        <ModalBody>\r\n          <ReadChild positionChartId={positionChartId} tab={tab} />\r\n        </ModalBody>\r\n        {/* <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{''}\r\n          <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n        </ModalFooter> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ModalPosition = ({ positionChartId, children }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <>\r\n      <span role=\"button\" onClick={toggle}>\r\n        {children}\r\n      </span>\r\n      <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Posición</ModalHeader>\r\n        <ModalBody>\r\n          <ReadPosition positionChartId={positionChartId}/>\r\n        </ModalBody>\r\n        {/* <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{''}\r\n          <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n        </ModalFooter> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CollapseSection = ({\r\n  title = \"Sección\",\r\n  countVideos = \"0\",\r\n  videos = [],\r\n  time = \"30 min\",\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        onClick={toggle}\r\n        className=\"d-flex bg-light border-bottom pointer p-3\"\r\n      >\r\n        <div className=\"flex-grow-1\">\r\n          <p className=\"font-weight-bold mb-0\">{title}</p>\r\n          <small>\r\n            {countVideos} | {time}\r\n          </small>\r\n        </div>\r\n        <div>\r\n          <FaIcons.FaChevronDown />\r\n        </div>\r\n      </div>\r\n      <Collapse isOpen={isOpen} className=\"p-3\">\r\n        {videos.map((video, i) => {\r\n          return (\r\n            <div className=\"d-flex mb-3\">\r\n              {/*   <div className=\"mr-3\">\r\n                      <input type=\"checkbox\" class=\"\" id=\"\" />\r\n                  </div> */}\r\n              <div>\r\n                <p className=\"mb-0\">{`${i + 1}. ${video.Name}`}</p>\r\n                <small className=\"text-muted\">\r\n                  <FaIcons.FaPlayCircle className=\"mr-2\" /> 5 min\r\n                </small>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollapseSection;\r\n\r\nexport const Node = ({\r\n  isFirst,\r\n  children,\r\n  area,\r\n  labelButton,\r\n  employee,\r\n  addChild,\r\n  updateNode,\r\n  deleteChild,\r\n  positionId,\r\n  name,\r\n  positionChartId,\r\n  watchChild,\r\n  isOpenAux = false,\r\n  mode,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(isOpenAux);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const rArea = area ? area : \"\";\r\n  return (\r\n    <div>\r\n      <Card className=\"card-left mb-2 mr-0 pr-0\">\r\n        <CardBody className=\"mr-0 pr-0\">\r\n          <div className={\"mr-0\"}>\r\n            <small>\r\n              {rArea?.Name ? (\r\n                <div\r\n                  className=\"text-dark text-start\"\r\n                  style={{ textAlign: \"start\" }}\r\n                >\r\n                  {`Area: ${rArea.Name}`}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </small>\r\n            <div className=\"d-flex my-2\">\r\n              <div></div>\r\n              <div\r\n                onClick={toggle}\r\n                className=\"font-weight-bold  mb-2 pointer mr-2\"\r\n                style={{ textAlign: \"start\" }}\r\n              >\r\n                {!isOpen ? (\r\n                  <FaIcons.FaChevronCircleRight className=\"mr-1  text-muted\" />\r\n                ) : (\r\n                  <FaIcons.FaChevronCircleDown className=\"mr-1 text-primary\" />\r\n                )}\r\n              </div>\r\n              <div\r\n                className=\"text-dark font-weight-bold text-start  mr-5\"\r\n                style={{ textAlign: \"start\" }}\r\n              >\r\n                {mode === \"Editar\" ? (\r\n                  <Modals\r\n                    positionChartId={positionChartId}\r\n                    tab={\"1\"}\r\n                    modalTitle={name}\r\n                    name={name}\r\n                  >\r\n                    {labelButton}\r\n                  </Modals>\r\n                ) : (\r\n                  <ModalPosition\r\n                  positionChartId={positionChartId}\r\n                  >\r\n                    {labelButton}\r\n\r\n                  </ModalPosition>\r\n                )}\r\n              </div>\r\n              <div\r\n                className=\"text-dark text-start mr-5\"\r\n                style={{ textAlign: \"start\" }}\r\n              >\r\n                {mode === \"Editar\" ? (\r\n                  <Modals\r\n                    positionChartId={positionChartId}\r\n                    tab={\"2\"}\r\n                    modalTitle={name}\r\n                    name={name}\r\n                  >\r\n                    {employee ? employee : \"Empleado\"}\r\n                  </Modals>\r\n                ) : employee ? (\r\n                  employee\r\n                ) : (\r\n                  \"Empleado\"\r\n                )}\r\n              </div>\r\n              <div className=\"mr-2\">\r\n                {isFirst !== null ? (\r\n                  <FaIcons.FaEye\r\n                    className=\"text-secondary\"\r\n                    onClick={watchChild}\r\n                  />\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n              {mode === \"Editar\" ? (\r\n                <>\r\n                  <div className=\"mr-2\">\r\n                    <FaIcons.FaUserEdit\r\n                      className=\"text-secondary\"\r\n                      onClick={updateNode}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mr-2\">\r\n                    <FaIcons.FaPlusCircle\r\n                      className=\"text-secondary\"\r\n                      onClick={addChild}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mr-2\">\r\n                    {deleteChild && (\r\n                      <FaIcons.FaMinusCircle\r\n                        className=\"text-secondary\"\r\n                        onClick={deleteChild}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <Collapse isOpen={isOpen}>{children}</Collapse>\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport const A = ({\r\n    href='', \r\n    target='_blank', \r\n    className='',\r\n    children\r\n}) => {\r\n    return (\r\n        <a href={href} target={target} className={className}>{children} </a>\r\n    )\r\n}\r\n\r\nexport const AWhatsapp = ({phone, message,  target='_blank', children, className}) => {\r\n    return(\r\n        <A\r\n            href={`https://api.whatsapp.com/send?phone=${phone}&text=${message}`}\r\n            target={target}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </A>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nexport const Li = ({items}) => {\r\n    return (\r\n        <ul className=\"list-inline m-4\">\r\n            {items.map(item => {\r\n                return(\r\n                    <li key={item} className=\"list-inline-item\">\r\n                        <small  className={`${item?.last && 'font-weight-bold'}`}>\r\n                            {\r\n                                !item?.last ? \r\n                                <Link \r\n                                    to={`${item.href}`} \r\n                                    className={`text-muted`}\r\n                                >\r\n                                    {item.name}\r\n                                </Link> :\r\n                                item.name\r\n                            }\r\n                             \r\n                            \r\n                            {!item?.last && <FaIcons.FaChevronRight className=\"ml-1\" /> }\r\n                        </small>\r\n                    </li>\r\n                )\r\n            })}         \r\n        </ul>\r\n    )\r\n}","import * as ComponentCards from './Cards'\r\nimport * as ComponentDropDowns from './DropDowns'\r\nimport * as ComponentFilter from './Filter'\r\nimport * as ComponentInputs from './Inputs'\r\nimport * as ComponentModals from './Modals'\r\nimport * as ComponentNavbars from './Navbars'\r\nimport * as ComponentNotFound from './NotFound'\r\nimport * as ComponentRegularExpressions from './RegularExpressions'\r\nimport * as ComponentTabs from './Tabs'\r\nimport * as ComponentLogos from './Logos'\r\nimport * as ComponentLists from './Lists'\r\nimport * as ComponentCollapse from './Collapse'\r\nimport {A as Anchor, AWhatsapp as AnchorWhatsapp} from './ExternalLinks'\r\nimport * as ComponentListOfHistory from './ListOfHistory'\r\n\r\nexport const Logos = ComponentLogos;\r\nexport const Cards = ComponentCards;\r\nexport const DropDowns = ComponentDropDowns;\r\nexport const Filter = ComponentFilter;\r\nexport const Inputs = ComponentInputs;\r\nexport const Modals = ComponentModals;\r\nexport const Navbars = ComponentNavbars;\r\nexport const NotFound = ComponentNotFound;\r\nexport const Lists = ComponentLists;\r\nexport const RegularExpressions = ComponentRegularExpressions;\r\nexport const Tabs = ComponentTabs;\r\nexport const Collapse = ComponentCollapse\r\nexport const A = Anchor;\r\nexport const AWhatsapp = AnchorWhatsapp;\r\nexport const ListOfHistory = ComponentListOfHistory;\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components\r\nimport { Inputs, RegularExpressions } from '../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as adminActions from \"./reducer/adminActions\";\r\n\r\nclass UpdateContactInfo extends Component {\r\n    async componentDidMount() {\r\n        const { adminMethods, userId } = this.props;\r\n        await adminMethods({userId},'GetUserInfo' ); \r\n    }\r\n    action = async () => {\r\n        const { \r\n            adminMethods, \r\n            userId, \r\n            adminReducer: {\r\n                data:{ \r\n                    Email, \r\n                    PhoneNumber,\r\n                    UserName,\r\n                    TypeUser \r\n                }\r\n            },\r\n            closeModal\r\n        } = this.props;\r\n\r\n        const contactModel= {\r\n            NewUserName: UserName,\r\n            NewTypeUser: TypeUser,\r\n            NewPhoneNumber: PhoneNumber,\r\n            NewEmail: Email,\r\n            UserId: userId\r\n        }\r\n\r\n        await adminMethods( contactModel,'PutContactInfo')\r\n        \r\n        const {\r\n            adminReducer: {\r\n            api_actions: { error },  \r\n            },\r\n        } = this.props;\r\n\r\n        if(error){\r\n\r\n        }else{\r\n            closeModal && closeModal();\r\n        }\r\n        \r\n    };\r\n\r\n    async componentWillUnmount(){\r\n        const { adminCleanState, adminMethods, userId } = this.props;\r\n        adminCleanState();\r\n        await adminMethods({userId},'GetUserInfo')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            adminHandleChange,\r\n            adminHandleValidation,\r\n            adminReducer: {\r\n                data: { Email, PhoneNumber, UserName },\r\n                validations,\r\n                api_actions: { cargando, error },   \r\n            }\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <Inputs.Form1\r\n                     loading={cargando}\r\n                     error={error}\r\n                     action={this.action}\r\n                     textButton={'Actualizar'}\r\n                     textButtonLoading={'Actualizando ...'}\r\n                     validations={validations}\r\n                     handleValidations={adminHandleValidation}\r\n                >\r\n                    <Inputs.InputEmail \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Email'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='email'\r\n                        inputName={'Email'}\r\n                        placeHolder={'Introduce un Email'}\r\n                        inputValue={Email}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.Email}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Nombre de usuario'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'UserName'}\r\n                        placeHolder={'Introduce un nombre de usuario'}\r\n                        inputValue={UserName}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.UserName}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Celular'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'PhoneNumber'}\r\n                        placeHolder={'Introduce un Celular'}\r\n                        inputValue={PhoneNumber}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.PhoneNumber}\r\n                    />\r\n                    \r\n                </Inputs.Form1>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ adminReducer }) => {\r\n  return { adminReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...adminActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateContactInfo);\r\n","import ComponentIdicators from './Indicators'\r\nimport ComponentsListOfUsers from './ListOfUsers' \r\nimport ComponentReadUser from './ReadUser'\r\nimport ComponentUpdateUserInfo from './UpdateUserInfo'\r\nimport ComponentValidateAccount from './ValidateAccount'\r\nimport ComponentSelectUser from './SelectUser'\r\n\r\nexport const Indicators = ComponentIdicators;\r\nexport const ListOfUsers = ComponentsListOfUsers;\r\nexport const ReadUser = ComponentReadUser;\r\nexport const UpdateUserInfo = ComponentUpdateUserInfo;\r\nexport const ValidateAccount = ComponentValidateAccount;\r\nexport const SelectUser = ComponentSelectUser;\r\n","import React, {useEffect} from 'react'\r\nimport {Button } from 'reactstrap'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as adminActions from './reducer/adminActions'\r\nimport {ApiResponses} from '../components-api'\r\nconst ValidateAccount = ({title}) => {\r\n    const {userId} = useParams();\r\n    const dispatch = useDispatch();\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(adminActions.adminMethods({userId},'GetUserInfo'))\r\n    // }, [dispatch, userId])\r\n\r\n    const {\r\n        data:{\r\n            EmailConfirmed,\r\n        },\r\n        api_actions:{\r\n            cargando,\r\n            error, \r\n            cargandoValidateAccount\r\n        }\r\n    } = adminReducer\r\n\r\n    if(cargando){\r\n        return <></>\r\n    }\r\n    const action = () =>{\r\n        dispatch(adminActions.adminMethods({Active: !EmailConfirmed, UserId: userId},'ValidateAccount'), 'cargandoValidateAccount')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h5 className=\"font-weight-bold mb-3\">Cuenta: {EmailConfirmed}</h5>\r\n            <Button className={`btn btn-${EmailConfirmed ? 'success' : 'danger'}`} onClick={action}> \r\n                {EmailConfirmed ? 'Validada' : 'No Validada'} <ApiResponses.Loader activate={cargandoValidateAccount}/> \r\n            </Button>\r\n            {error && <ApiResponses.Error message={error}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidateAccount;","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../config-components'\r\n\r\n// Imports de actions.\r\nimport * as adminActions from './reducer/adminActions'\r\n\r\nimport {Arrays} from '../utils'\r\n\r\nconst SelectUser = ({\r\n    UserId,\r\n    onChange,\r\n    validations\r\n}) => {\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {    \r\n        dispatch(adminActions.adminMethods({roleName: \"User\"},'GetUsersInfo'))\r\n    }, [dispatch])\r\n    \r\n    const {\r\n        list_users\r\n    } = adminReducer;\r\n\r\n    let fix_select = Arrays.fixSelect('Id','UserName',list_users)\r\n\r\n    return(\r\n        <>\r\n            <Inputs.InputText \r\n                classLabel='font-weight-bold'\r\n                textLabel='Usuario'\r\n                isMandatory='*'\r\n                classMandatory=''\r\n                inputType='select'\r\n                inputName={'UserId'}\r\n                placeHolder={'Selecciona un usuario'}\r\n                inputValue={UserId}\r\n                onChange={onChange}\r\n                RE={RegularExpressions.RE_EMPTY}\r\n                validateRE={validations}\r\n                optionPlaceHolder={'Selecciona un usuario'}\r\n                options={fix_select}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectUser;\r\n\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const COMPANY_CARGANDO = \"company_cargando\";\r\nexport const COMPANY_ERROR = \"company_error\";\r\nexport const COMPANY_HANDLE_CHANGE = \"company_handle_change\";\r\nexport const COMPANY_CLEAN_STATE = \"company_clean_state\";\r\nexport const COMPANY_CRUD = \"company_crud\";\r\nexport const COMPANIES_LIST = \"companies_list\";\r\nexport const COMPANY_HANDLE_VALIDATION = \"company_handle_validation\";\r\n\r\nexport const GetCompanies = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Companies`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\nexport const GetCompaniesByCompanyId = async(data)=> {\r\n  \r\n    const  answer = await axios_api(\r\n        `api/CompaniesByCompanyId?companyId=${data.companyId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\nexport const GetCompaniesByUser = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/CompaniesByUser`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\n\r\nexport const GetCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const PutCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'company_put'};\r\n}\r\n\r\nexport const PostCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const DeleteCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_HANDLE_VALIDATION, \r\n    GetCompanies,\r\n    GetCompaniesByCompanyId,\r\n    GetCompany,\r\n    PutCompany,\r\n    PostCompany,\r\n    DeleteCompany,\r\n    GetCompaniesByUser\r\n  } from \"./companyTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const companyHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const companyHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const companyCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const companyMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCompanies\":\r\n          answer = await GetCompanies(); \r\n          break;\r\n        case \"GetCompaniesByCompanyId\":\r\n          answer = await GetCompaniesByCompanyId(data); \r\n          break;\r\n          \r\n        case \"GetCompaniesByUser\":\r\n          answer = await GetCompaniesByUser(); \r\n          break;\r\n\r\n        case \"GetCompany\":\r\n          answer = await GetCompany(data);\r\n          break;\r\n\r\n        case \"PutCompany\":\r\n          answer = await PutCompany(data);\r\n          break;\r\n\r\n        case \"PostCompany\":\r\n          answer = await PostCompany(data);\r\n          break;\r\n        \r\n        case \"DeleteCompany\":\r\n          answer = await DeleteCompany(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport {SelectUser} from '../components-admin'\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nclass Company extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {companyId, companyMethods} = this.props;\r\n        companyId && await companyMethods({Id: companyId}, 'GetCompany');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            companyMethods, \r\n            companyReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                TradeName,\r\n                BusinessName, \r\n                BusinessActivity,\r\n                UserId\r\n            }},\r\n            userId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            TradeName: TradeName ? TradeName : '',\r\n            BusinessName: BusinessName ? BusinessName : '',\r\n            BusinessActivity: BusinessActivity ? BusinessActivity : 0,\r\n            UserId: UserId ? UserId : userId\r\n        }\r\n        await companyMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            companyReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutCompany');\r\n        }else{\r\n            await this.sendAction('PostCompany')\r\n        }\r\n        if(this.props.companyReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.companyReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            companyHandleValidation,\r\n            companyHandleChange,\r\n            companyReducer: {\r\n                data : {\r\n                    Id, \r\n                    TradeName,\r\n                    BusinessName,\r\n                    BusinessActivity, \r\n                    UserId\r\n                },\r\n                users_list,\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n\r\n       \r\n\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Empresa' : 'Crear Empresa'}\r\n                textButtonLoading={Id ? 'Guardando Empresa...' : 'Crear Empresa...'}\r\n                validations={validations}\r\n                handleValidations={companyHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre Comercial'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'TradeName'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={TradeName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.TradeName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Razón social'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'BusinessName'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={BusinessName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessName}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Actividad'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'BusinessActivity'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={BusinessActivity}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessActivity} \r\n                />\r\n                {\r\n                    localStorage.getItem('role') === 'Admin' ? \r\n                    <SelectUser\r\n                        UserId={UserId}\r\n                        onChange={companyHandleChange}\r\n                        validations={validations.UserId}\r\n                    ></SelectUser>\r\n                    // <InputText \r\n                    //     classLabel='font-weight-bold'\r\n                    //     textLabel='Tipo'\r\n                    //     isMandatory='*'\r\n                    //     classMandatory=''\r\n                    //     inputType='select'\r\n                    //     inputName={'UserId'}\r\n                    //     placeHolder={'Selecciona un usuario'}\r\n                    //     inputValue={UserId}\r\n                    //     onChange={companyHandleChange}\r\n                    //     RE={RE_EMPTY}\r\n                    //     validateRE={validations.UserId}\r\n                    //     optionPlaceHolder={'Selecciona un usuario'}\r\n                    //     options={users_list}\r\n                    // />\r\n                    : ''\r\n                }\r\n\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({companyReducer}) => {\r\n    return {companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...companyActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods, companyMethods, companyId} = this.props;\r\n        await analyticsMethods('count_positions', {companyId})\r\n        await analyticsMethods('count_personal_details', {companyId})\r\n        await analyticsMethods('count_areas', {companyId})\r\n        await companyMethods({Id:companyId},'GetCompany')\r\n    }\r\n    render(){\r\n        const {\r\n            count_positions,\r\n            count_personal_details,\r\n            count_areas,\r\n            api_actions:{\r\n                cargando,\r\n            },\r\n            \r\n        } = this.props.analyticsReducer;\r\n        \r\n        const cardAnalytics = [\r\n            {\r\n                id: '3-p',\r\n                title: 'Organigrama',\r\n                number: 'Ver',\r\n                icon: <FaIcons.FaSitemap className=\"mr-2\" />,\r\n                href: `${this.props.hrefBase}/company/${this.props.companyId}/organization-chart`\r\n            },            \r\n            {\r\n                id: '1-p',\r\n                title: 'Posiciones',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_positions,\r\n                icon: <FaIcons.FaChair className=\"mr-2\" />,\r\n                href: `${this.props.hrefBase}/company/${this.props.companyId}/positions`\r\n            },\r\n            {\r\n                id: '2-p',\r\n                title: 'Colaboradores',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_personal_details,\r\n                icon: <FaIcons.FaUserFriends className=\"mr-2\" />,\r\n                href: `${this.props.hrefBase}/company/${this.props.companyId}/employees`\r\n            }, \r\n            {\r\n                id: '4-p',\r\n                title: 'Areas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_areas,\r\n                icon: <FaIcons.FaBuromobelexperte className=\"mr-2\" />,\r\n                href: `${this.props.hrefBase}/company/${this.props.companyId}/areas`\r\n            },      \r\n            {\r\n                id: '5-p',\r\n                title: 'Indicadores',\r\n                number: 'Ver',\r\n                icon: <FaIcons.FaChartPie className=\"mr-2\" />,\r\n                href: `${this.props.hrefBase}/company/${this.props.companyId}/areas`\r\n            },      \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer, companyReducer}) => {\r\n    return {analyticsReducer, companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n    ...companyActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import ComponentCompany from './Company'\r\nimport ComponentCompanyIndicators from './CompanyIndicators'\r\nimport ComponentListOfCompanies from './ListOfCompanies'\r\nimport ComponentChooseCompany from './ChooseCompany'\r\n\r\n\r\nexport const Company = ComponentCompany;\r\nexport const CompanyIndicators = ComponentCompanyIndicators;\r\nexport const ListOfCompanies = ComponentListOfCompanies;\r\nexport const ChooseCompany = ComponentChooseCompany;","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfCompanies = ({ title='Empresas', create='/create-company'}) => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(companyActions.companyMethods('','GetCompanies'))\r\n    }, [dispatch])\r\n    \r\n    const getCompany = (companyId) => {\r\n        history.push(`/admin-dashboard/company/${companyId}`)\r\n    }\r\n\r\n    const UpdateCompany = (companyId) => {\r\n        history.push(`/admin-dashboard/user/upadate-company/${companyId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_companies\r\n    } = companyReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Empresas</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Empresa','Acciones']}\r\n                propertiesTable={['Id','TradeName']}\r\n                hrefCreate={`/admin-dashboard/user${create}`}\r\n                bodyTable={list_companies}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empresa', handleAction: getCompany },\r\n                    {action: 'Actulizar Empresa', handleAction: UpdateCompany}\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCompanies;\r\n\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {DropDowns} from '../config-components'\r\n\r\n// Imports de actions.\r\nimport * as companyActions from './reducer/companyActions'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\n\r\nconst ChooseCompany = ({user, companyId }) => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    useEffect(() => {    \r\n        dispatch(companyActions.companyMethods({companyId},'GetCompaniesByCompanyId'))\r\n    }, [companyId, dispatch])\r\n    \r\n    const {\r\n        list_companies\r\n    } = companyReducer;\r\n\r\n    const changeCompany = (id) => {\r\n        debugger\r\n        dispatch(companyActions.companyMethods({Id:id},'GetCompany'))\r\n        dispatch(analyticsActions.analyticsMethods('count_positions', {companyId:id}))\r\n        dispatch(analyticsActions.analyticsMethods('count_personal_details', {companyId:id}))\r\n        dispatch(analyticsActions.analyticsMethods('count_areas', {companyId:id}))\r\n        history.push(`${user}/${id}`);\r\n    }\r\n\r\n    let CompanyChoose = []\r\n    if(list_companies.length > 0){\r\n        CompanyChoose = list_companies.filter(item => item.Id === Number(companyId));\r\n    }\r\n\r\n    return(\r\n        <>\r\n           <DropDowns.DropDownActions\r\n            color='primary'\r\n            labelButton={\r\n                <>{CompanyChoose.length>0 && CompanyChoose[0].TradeName}</>\r\n            }\r\n           >\r\n               <DropDowns.Items \r\n                    items={list_companies}\r\n                    action={changeCompany}\r\n               />\r\n           </DropDowns.DropDownActions>\r\n           </>\r\n    )\r\n}\r\n\r\nexport default ChooseCompany;\r\n\r\n","// Imports de react.\r\nimport React, { useState } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport {ChooseCompany} from '../components-company'\r\n\r\nimport {Logo} from './Logos'\r\n// Imports de components-api.\r\nimport {signOff} from '../components-api/ConfigApi'\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Navbars = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar expand=\"md\" className=\"fixed-top bg-white border-bottom\">\r\n        <Container>\r\n        {/* <NavbarBrand href=\"/\" className=\"text className='text-primary'-dark font-weight-bold\">VERSION 4</NavbarBrand> */}\r\n        <Logo />\r\n        <NavbarToggler onClick={toggle}><FaIcons.FaBars className=\"lead\" /></NavbarToggler>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"d-flex mr-2\">\r\n              <NavLink href=\"/login\"className=\"btn btn-outline-secondary align-self-center\">Empresas</NavLink>\r\n            </NavItem>\r\n            {/* <NavItem className=\"d-flex\">\r\n              <NavLink href=\"/sign-up\"className=\"btn btn-primary align-self-center\">Regístrate</NavLink>\r\n            </NavItem> */}\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const NavbarAdmin = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const {companyId} = useParams();\r\n\r\n  return (\r\n      <Navbar light className=\"bg-white\" expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand href=\"/admin-dashboard\" className='text-primary'>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n         \r\n            {companyId &&\r\n             <>\r\n             <NavItem className=\"mr-3\" >\r\n                <NavLink className={\"text-muted\"} href={`/admin-dashboard/company/${companyId}`}>\r\n                <FaIcons.FaBuilding />\r\n              </NavLink></NavItem>\r\n               <NavItem className=\"mr-3\" >\r\n                <NavLink className={\"text-muted\"} href={`/admin-dashboard/company/${companyId}/organization-chart`}>\r\n                <FaIcons.FaSitemap />\r\n              </NavLink></NavItem>\r\n              <NavItem className=\"mr-3\" >\r\n                <NavLink className={\"text-muted\"} href={`/admin-dashboard/company/${companyId}/positions`}>\r\n                <FaIcons.FaChair  />\r\n              </NavLink></NavItem>\r\n              <NavItem className=\"mr-3\" >\r\n                <NavLink className={\"text-muted\"} href={`/admin-dashboard/company/${companyId}/employees`}>\r\n                <FaIcons.FaUserFriends  />\r\n              </NavLink></NavItem>\r\n              <NavItem className=\"mr-3\" >\r\n                <NavLink className={\"text-muted\"} href={`/admin-dashboard/company/${companyId}/areas`}>\r\n                <FaIcons.FaBuromobelexperte  />\r\n              </NavLink></NavItem>\r\n              <NavItem className=\"mr-3\" >\r\n                <NavLink className={\"text-muted\"} href={`/admin-dashboard/company/${companyId}/areas`}>\r\n                <FaIcons.FaChartPie  />\r\n              </NavLink></NavItem>\r\n             </>}\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret className=\"text-dark\">\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff} className=\"text-dark\">\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const User = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const {companyId} = useParams();\r\n  return (\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand className='text-primary' href={`/user-dashboard/company/${companyId}`}>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\" >\r\n              <NavLink className={\"text-muted\"} href={`/user-dashboard/company/${companyId}/organization-chart`}>\r\n              <FaIcons.FaSitemap />\r\n            </NavLink></NavItem>\r\n            <NavItem className=\"mr-3\" >\r\n              <NavLink className={\"text-muted\"} href={`/user-dashboard/company/${companyId}/positions`}>\r\n              <FaIcons.FaChair  />\r\n            </NavLink></NavItem>\r\n            <NavItem className=\"mr-3\" >\r\n              <NavLink className={\"text-muted\"} href={`/user-dashboard/company/${companyId}/employees`}>\r\n              <FaIcons.FaUserFriends  />\r\n            </NavLink></NavItem>\r\n            <NavItem className=\"mr-3\" >\r\n              <NavLink className={\"text-muted\"} href={`/user-dashboard/company/${companyId}/areas`}>\r\n              <FaIcons.FaBuromobelexperte  />\r\n            </NavLink></NavItem>\r\n            <NavItem className=\"mr-3\" >\r\n              <NavLink className={\"text-muted\"} href={`/user-dashboard/company/${companyId}/areas`}>\r\n              <FaIcons.FaChartPie  />\r\n            </NavLink></NavItem>\r\n\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff}>\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/hero-xs.fab06da0.png\";","export default __webpack_public_path__ + \"static/media/vscode.a1907119.svg\";","// Imports de react.\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, } from 'reactstrap';\r\n\r\n// Imports de config-components.\r\nimport {Navbars} from '../../config-components/Navbars'\r\n\r\nimport { A, AWhatsapp } from '../../config-components'\r\n// } from 'components-links'\r\n\r\n// Imports de assets.\r\nimport Heroxs from '../../img/hero-xs.png'\r\nimport { ImgOrganigrama, ImgPuestos, ImgDescripciones, ImgProcesos} from '../../img'\r\nimport WebApps from '../../img/vscode.svg'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div>\r\n        <Navbars />\r\n        <section id=\"hero\" className=\"bg-light d-flex py-6\">\r\n            <Container className=\"align-self-center\">\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        \r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <h1 className=\"display-4 font-weight-bold mb-3\">Somos expertos en Organización de empresas</h1>\r\n                        <p className=\"text-muted mb-4\">Creamos la Organización en tu empresa con las mejores herramientas tecnologicas, tenemos más de 40 años de experiencia</p>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <img src={Heroxs} className=\"img-fluid d-block d-md-none mt-5\" />\r\n            </Container>\r\n        </section>\r\n\r\n        <section className='bg-light-2'>\r\n            <Container>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgOrganigrama className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Organigrama<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Una buena implementación de la Organización es conocer en detalle los roles que ejercen tus colaboradores.</p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Puestos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos los puestos de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgPuestos src={WebApps} className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgDescripciones className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Perfiles<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Define claramente tus procesos y logra sitematizarlos</p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Procesos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos las posiciones de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgProcesos className=\"img-fluid rounded my-4\" />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>  \r\n         \r\n        {/* <section className=\"py-6\">\r\n            <Container>\r\n                <div className=\"tab-container bg-light py-4 px-5\">\r\n                    <Example />\r\n                </div>\r\n            </Container>\r\n        </section>    */}\r\n       \r\n        <section className=\"py-7\">\r\n            <Container>\r\n                <div className=\"w-75 mx-auto text-center mb-5\">\r\n                    <p className=\"lead text-muted\">Dedícate a producir y vender, mientras nosotros organizamos tu empresa.</p>\r\n                    <button className=\"btn btn-primary\">\r\n                        <AWhatsapp \r\n                            phone='+525533333279' \r\n                            message={`Hola, Quiero más información`} \r\n                            className=\"text-white\"\r\n                        >Contáctanos </AWhatsapp>\r\n                    </button>\r\n                    \r\n                </div>\r\n            </Container>\r\n        </section>\r\n        <footer className=\"py-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"list-inline-item mr-5\"><Link class=\"text-dark\" ><FaIcons.FaLinkedin className=\"text-dark mr-1\" /> Linkedin</Link></li>\r\n                            \r\n                        </ul>\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"text-right\">\r\n                        <p>© Version 4 2020. Derechos Reservados.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {  Card, CardBody, Badge  } from 'reactstrap';\r\n// Imports de assets.\r\nimport {ImgProduct} from '../img'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ReadCardProduct = ({uri, name='', description='', categories}) => {\r\n    return(\r\n        <Card className=\"border-0 mb-4\">\r\n            <CardBody>\r\n                <ImgProduct uri={uri} className=\"img-fluid rounded mb-3\"/>\r\n                <div className=\"mb-3\">\r\n                    {categories?.length > 0 ? \r\n                        categories.map(category => {\r\n                            return <Badge color=\"light\" className=\"mr-2\">{category.Name}</Badge>\r\n                        })  : ''  \r\n                    }\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"icon-card d-flex bg-light align-self-center mr-3\">\r\n                        <FaIcons.FaShoppingCart className=\"align-self-center mx-auto\" />\r\n                    </div>\r\n                    <div>\r\n                        <h5>{name}</h5>\r\n                        <h6>{description}</h6>\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReadCardProduct;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_CARGANDO = \"product_cargando\";\r\nexport const PRODUCT_ERROR = \"product_error\";\r\nexport const PRODUCT_HANDLE_CHANGE = \"product_handle_change\";\r\nexport const PRODUCT_CLEAN_STATE = \"product_clean_state\";\r\nexport const PRODUCT_CRUD = \"product_crud\";\r\nexport const PRODUCTS_LIST = \"products_list\";\r\nexport const PRODUCT_HANDLE_VALIDATION = \"product_handle_validation\";\r\n\r\n\r\nexport const GetProducts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Products`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProductsByCategoryId = async(data)=> {\r\n    debugger\r\n    const  answer = await axios_api(\r\n        `api/ProductsByCategoryId?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const PutProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}${data.includeBlobs ? ``:``}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_put'};\r\n}\r\n\r\nexport const PostProduct = async(data)=> {\r\n    const  answer = await axios_api(\"api/Product\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const DeleteProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\n\r\n","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_HANDLE_VALIDATION, \r\n    GetProducts,\r\n    GetProductsByCategoryId,\r\n    GetProduct,\r\n    PutProduct,\r\n    PostProduct,\r\n    DeleteProduct\r\n  } from \"./productTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProducts\":\r\n          answer = await GetProducts(); \r\n          break;\r\n\r\n        case 'GetProductsByCategoryId':\r\n          answer = await GetProductsByCategoryId(data); \r\n          break\r\n\r\n        case \"GetProduct\":\r\n          answer = await GetProduct(data);\r\n          break;\r\n\r\n        case \"PutProduct\":\r\n          answer = await PutProduct(data);\r\n          break;\r\n\r\n        case \"PostProduct\":\r\n          answer = await PostProduct(data);\r\n          break;\r\n        \r\n        case \"DeleteProduct\":\r\n          answer = await DeleteProduct(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\n\r\n\r\nconst CardProduct = () => {\r\n    const { productId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n\r\n    const { data:{\r\n        Id,\r\n        Name,\r\n        Description,\r\n        Blobs,\r\n        fileCover,\r\n        Categories\r\n    } } = productReducer;\r\n\r\n    useEffect(() => {\r\n        productId && dispatch(productActions.productMethods({Id: productId}, 'GetProduct'))\r\n    }, [dispatch, productId, Id])\r\n\r\n    const blobProduct = Blobs.filter(el => el.BlobTypeId === 2 )\r\n    return (\r\n        <>\r\n            <ReadCardProduct uri={fileCover ? URL.createObjectURL(fileCover[0]) : blobProduct[0]?.Uri} name={Name} description={Description} categories={Categories}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardProduct;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Col} from 'reactstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\nconst ListOfCardProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n    const { list_products } = productReducer;\r\n    useEffect(() => {\r\n        list_products.length < 1 && dispatch(productActions.productMethods('', 'GetProducts'))\r\n    }, [dispatch, list_products ])\r\n    return (\r\n        <>\r\n            {\r\n                list_products.map(product => {\r\n                    const blobProduct = product.Blobs.filter(el => el.BlobTypeId === 1 )\r\n                    return (\r\n                        <Col lg='4'>\r\n                            <ReadCardProduct uri={blobProduct[0]?.Uri} name={product.Name} description={product.Description} />\r\n                        </Col>\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCardProducts;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\nimport { Modals} from '../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de actions.\r\nimport * as productActions from './reducer/productActions'\r\nconst ListOfCategories = ({title = 'Productos',reDirect, categoryProductId}) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const productReducer = useSelector(state => state.productReducer)\r\n\r\n    const {\r\n        data: {\r\n            Id,\r\n            Name\r\n        },\r\n        api_actions: {cargando, error},\r\n        list_products\r\n    } = productReducer;\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(categoryProductId) {\r\n            dispatch(productActions.productMethods({Id: categoryProductId},'GetProductsByCategoryId'))\r\n        } else {\r\n            dispatch(productActions.productMethods('','GetProducts'))\r\n        }\r\n    }, [dispatch, categoryProductId])\r\n\r\n    const getProduct = (idProduct) => {\r\n        history.push(`${reDirect}/${idProduct}`)\r\n    }\r\n\r\n    const openDeleteModal = async(idProduct) => {\r\n        await dispatch(productActions.productMethods({Id: idProduct},'GetProduct'));\r\n    }\r\n\r\n    const deleteProduct = async() => {\r\n        await dispatch(productActions.productMethods({Id},'DeleteProduct'));\r\n        dispatch(productActions.productCleanState());\r\n        await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    const cleanProduct = async(cancel) => {\r\n        await dispatch(productActions.productCleanState());\r\n        !cancel && await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n        <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n        <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{title}</small></li>\r\n    </ul>\r\n            {Id \r\n                ?  <Modals.ModalOpenDelete \r\n                        content={`Se eliminara el siguiente producto: \"${Name}\" con Id: #${Id}`}\r\n                        modalTitle={`Eliminar Producto ${Name}`}\r\n                        action={deleteProduct}\r\n                        clean={cleanProduct}\r\n                    />\r\n                : ''\r\n            }\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Nombre','Descripción','Acciones']}\r\n                propertiesTable={['Id','Name','Description']}\r\n                hrefCreate={'/admin-dashboard/create-product'}\r\n                bodyTable={list_products}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Producto', handleAction: getProduct },\r\n                    {action: 'Eliminar Producto', handleAction: openDeleteModal }\r\n                ]}\r\n            />\r\n        </>\r\n    )   \r\n}\r\n\r\nexport default ListOfCategories;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const CATEGORY_CARGANDO = \"category_cargando\";\r\nexport const CATEGORY_ERROR = \"category_error\";\r\nexport const CATEGORY_HANDLE_CHANGE = \"category_handle_change\";\r\nexport const CATEGORY_CLEAN_STATE = \"category_clean_state\";\r\nexport const CATEGORY_CRUD = \"category_crud\";\r\nexport const CATEGORIES_LIST = \"categories_list\";\r\nexport const CATEGORY_HANDLE_VALIDATION = \"category_handle_validation\";\r\n\r\nexport const GetCategories = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Categories`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: CATEGORIES_LIST};\r\n}\r\n\r\nexport const GetCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const PutCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'put_category'};\r\n}\r\n\r\nexport const PostCategory = async(data)=> {\r\n    const answer = await axios_api(\"api/Category\", true, \"post\", data);\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const DeleteCategory = async(data)=> {\r\n    const answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_HANDLE_VALIDATION,\r\n    GetCategories,\r\n    GetCategory,\r\n    PutCategory,\r\n    PostCategory,\r\n    DeleteCategory,\r\n  } from \"./categoryTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCategories\":\r\n          answer = await GetCategories();\r\n          break;\r\n\r\n        case \"GetCategory\":\r\n          answer = await GetCategory(data);\r\n          break;\r\n\r\n        case \"PutCategory\":\r\n          answer = await PutCategory(data);\r\n          break;\r\n\r\n        case \"PostCategory\":\r\n          answer = await PostCategory(data);\r\n          break;\r\n        \r\n        case \"DeleteCategory\":\r\n          answer = await DeleteCategory(data)\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import ComponentCardProduct from './CardProduct'\r\nimport ComponentListOfCardProducts from './ListOfCardProducts'\r\nimport ComponentListOfProducts from './ListOfProducts'\r\nimport ComponentAddCategories from './AddCategories'\r\n\r\nexport const CardProduct = ComponentCardProduct;\r\nexport const ListOfCardProducts = ComponentListOfCardProducts;\r\nexport const ListOfProducts = ComponentListOfProducts;\r\nexport const AddCategories = ComponentAddCategories;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {Container, Row} from 'reactstrap'\r\nimport {Navbars} from '../../config-components' \r\nimport {ListOfCardProducts} from '../../components-product'\r\n\r\nconst LandingProducts = () => {\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <section className=\"bg-light py-6\">\r\n                <Container>\r\n                    <Row>\r\n                    <ListOfCardProducts />\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingProducts;\r\n","import LandingSoftwareAgency from './SoftwareAgency'\r\nimport LandingProducts from './Products'\r\nimport LandingCourses from './Courses'\r\n\r\nexport const SoftwareAgency = LandingSoftwareAgency;\r\nexport const Products = LandingProducts;\r\nexport const Courses = LandingCourses;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { Container } from 'reactstrap'\r\n\r\n// Imports de config-components\r\nimport {NotFound} from '../config-components/NotFound'\r\nimport {Navbars} from '../config-components/Navbars'\r\n\r\n\r\nexport const NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <Navbars />\r\n            <div className=\"bg-light py-6\">\r\n                <Container>\r\n                    <NotFound />\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","export const LOGIN_CARGANDO = \"login_cargando\";\r\nexport const LOGIN_ERROR = \"login_error\";\r\nexport const LOGIN_HANDLE_CHANGE = \"login_handle_change\";\r\nexport const LOGIN_CLEAN_STATE = \"login_clean_state\";\r\nexport const LOGIN_USER = \"login_user\";\r\nexport const LOGIN_HANDLE_VALIDATION = \"login_handle_validation\";\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION,\r\n} from \"./loginTypes\";\r\n\r\nimport {\r\n  axios_api,\r\n  errorHandler,\r\n  setLocalStorage,\r\n} from \"../../components-api/ConfigApi\";\r\n\r\n/*\r\n *Metodo para serializar un objeto\r\n */\r\nconst parserJson = (obj) => {\r\n  var jsonSerialize = \"\";\r\n  for (const prop in obj) {\r\n    jsonSerialize += prop + \"=\" + obj[prop] + \"&\";\r\n  }\r\n  jsonSerialize = jsonSerialize.slice(0, -1);\r\n  return jsonSerialize;\r\n};\r\n\r\nexport const loginHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const loginHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const loginCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const loginMethods = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CARGANDO,\r\n  });\r\n  try {\r\n    setLocalStorage();\r\n    const object = parserJson(data);\r\n    const answer = await axios_api(\"Token\", false, \"post\", object);\r\n    setLocalStorage(answer);\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    \r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: LOGIN_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport { RE_EMPTY } from \"../config-components/RegularExpressions\";\r\nimport {InputEmail, InputPassword, Form1} from '../config-components/Inputs'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as loginActions from \"./reducer-login/loginActions\";\r\nimport * as companyActions from \"../components-company/reducer/companyActions\";\r\nclass LoginForm extends Component {\r\n  ActionLogin = async () => {\r\n    const {\r\n      loginMethods,\r\n      companyMethods,\r\n      loginReducer: {\r\n        data: { grant_type, username, password },\r\n      },\r\n    } = this.props;\r\n    const ModelLogin = {\r\n      grant_type: grant_type,\r\n      username: username,\r\n      password: password,\r\n    };\r\n    await loginMethods(ModelLogin);\r\n    if (this.props.loginReducer.data.access_token) {\r\n      if (localStorage.getItem(\"role\") === \"Admin\") {\r\n        window.open(`/admin-dashboard`, \"_self\");\r\n      }\r\n      if (localStorage.getItem(\"role\") === \"User\") {\r\n        await companyMethods('', 'GetCompaniesByUser')\r\n        const { list_companies} = this.props.companyReducer;\r\n        debugger\r\n        window.open(`/user-dashboard/company/${list_companies[0].Id}`, \"_self\");\r\n      }\r\n      if (!localStorage.getItem(\"role\")) {\r\n        window.open(`/`, \"_self\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRedirect = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/sign-up\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loginHandleValidation,\r\n      loginHandleChange,\r\n      loginReducer: {\r\n        data: { username, password },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Form1\r\n          loading={cargando}\r\n          error={error}\r\n          action={this.ActionLogin}\r\n          textButton={'Iniciar Sesión'}\r\n          textButtonLoading={'Iniciando sesión...'}\r\n          validations={validations}\r\n          handleValidations={loginHandleValidation}\r\n        >\r\n          <InputEmail  \r\n            name='username'\r\n            inputValue={username}\r\n            onChange={loginHandleChange} \r\n            label='Nombre de usuario o correo'\r\n            RE={RE_EMPTY}\r\n            validateRE={validations.username}\r\n          />\r\n          <InputPassword\r\n            inputValue={password}\r\n            onChange={loginHandleChange}\r\n            validateRE={validations.password}\r\n            forgotPassword={true}\r\n          />\r\n        </Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ loginReducer, companyReducer }) => {\r\n  return { loginReducer, companyReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...loginActions,\r\n  ...companyActions\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","export const SIGN_UP_CARGANDO = \"sign_up_cargando\";\r\nexport const SIGN_UP_ERROR = \"sign_up_error\";\r\nexport const SIGN_UP_HANDLE_CHANGE = \"sign_up_handle_change\";\r\nexport const SIGN_UP_CLEAN_STATE = \"sign_up_clean_state\";\r\nexport const SIGN_UP_USER = \"sign_up_user\";\r\nexport const SIGN_UP_HANDLE_VALIDATION = \"sign_up_handle_validation\";\r\nexport const SIGN_UP_PRELOADED_DATA = \"sign_up_preloaded_data\";\r\n\r\n\r\n","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const signUpHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const signUpHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const signUpCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const signUpPreloadedData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_PRELOADED_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n\r\n\r\nexport const signUpMethods = (data, token) => async (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CARGANDO,\r\n  });\r\n  try {\r\n    const answer = await axios_api(\"api/Account/Register\", token, \"post\", data);\r\n    dispatch({\r\n      type: SIGN_UP_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: SIGN_UP_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../config-components';\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as signUpActions from \"./sign-up-reducer/signUpActions\";\r\n\r\nclass SignUp extends Component {\r\n  componentDidMount() {\r\n    this.props.signUpReducer.data.Roles = this.props.role;\r\n  }\r\n  action = async () => {\r\n    const {\r\n      signUpMethods,\r\n      signUpCleanState,\r\n      signUpReducer: {\r\n        data: {\r\n          UserName,\r\n          Email,\r\n          PhoneNumber,\r\n          Password,\r\n          ConfirmPassword,\r\n          ValidateByPhoneOrEmail,\r\n          Roles,\r\n          TypeUser\r\n        },\r\n      },\r\n      role,\r\n      reDirect,\r\n      history,\r\n      token\r\n    } = this.props;\r\n\r\n    const ModelSignUp = {\r\n      UserName: UserName,\r\n      Email: Email,\r\n      PhoneNumber: PhoneNumber,\r\n      Password: Password,\r\n      ConfirmPassword: ConfirmPassword,\r\n      ValidateByPhoneOrEmail: ValidateByPhoneOrEmail,\r\n      Roles: Roles,\r\n      TypeUser: TypeUser\r\n    };\r\n\r\n    await signUpMethods(ModelSignUp, token);\r\n   \r\n    if (this.props.signUpReducer.data.Id) {\r\n        role === 'User' \r\n        ? history.push(`${reDirect}/${this.props.signUpReducer.data.Id}`)\r\n        : history.push(reDirect) \r\n        signUpCleanState();\r\n           \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      signUpHandleChange,\r\n      signUpHandleValidation,\r\n      signUpReducer: {\r\n        data: { UserName, Email, Password, ConfirmPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      }\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${Password}$`)\r\n    return (\r\n       <>\r\n            <Inputs.Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.action}\r\n                textButton={'Registrar'}\r\n                textButtonLoading={'Registrando ...'}\r\n                validations={validations}\r\n                handleValidations={signUpHandleValidation}\r\n            >\r\n                <Inputs.InputEmail \r\n                    inputValue={Email}\r\n                    onChange={signUpHandleChange} \r\n                    validateRE={validations.Email}\r\n                />\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre de usuario'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'UserName'}\r\n                    placeHolder={'Introduce un nombre de usuario'}\r\n                    inputValue={UserName}\r\n                    onChange={signUpHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.UserName}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={Password}\r\n                    onChange={signUpHandleChange}\r\n                    validateRE={validations.Password}\r\n                    inputName={'Password'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmPassword}\r\n                    onChange={signUpHandleChange}\r\n                    inputName={'ConfirmPassword'}\r\n                    validateRE={validations.ConfirmPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ signUpReducer }) => {\r\n  return { signUpReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...signUpActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import { axios_api } from \"../../../components-api/ConfigApi\";\r\n\r\nexport const CHANGE_PASSWORD_CARGANDO = \"change_password_cargando\";\r\nexport const CHANGE_PASSWORD_ERROR = \"change_password_error\";\r\nexport const CHANGE_PASSWORD_HANDLE_CHANGE = \"change_password_handle_change\";\r\nexport const CHANGE_PASSWORD_CLEAN_STATE = \"change_password_clean_state\";\r\nexport const CHANGE_PASSWORD_USER = \"change_password_user\";\r\nexport const CHANGE_PASSWORD_HANDLE_VALIDATION = \"change_password_handle_validation\";\r\n\r\nexport const SetPassword = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/SetPassword`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type:'set_password_put'};\r\n}\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n    SetPassword\r\n  } from \"./changePasswordTypes\";\r\n  \r\n  import {\r\n    axios_api,\r\n    errorHandler,\r\n  } from \"../../../components-api/ConfigApi\";\r\n   \r\n  export const changePasswordHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const changePasswordHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CARGANDO,\r\n    });\r\n    try {\r\n      \r\n      let answer;\r\n      let type = CHANGE_PASSWORD_USER;\r\n      switch(method){\r\n        case 'send_email_code':\r\n            let route = `api/Account/SendVerificationCode?phoneOrEmail=${data.phoneOrEmail}&usernameOrEmailOrPhoneNumber=${data.phoneOrEmail}`\r\n            answer= await axios_api( route, false, \"get\");\r\n            break;\r\n        case 'change_password':\r\n            answer= await axios_api( `/api/Account/ResetPassword`, false, \"post\", data);\r\n            break;\r\n        case 'SetPassword' :\r\n            answer= await SetPassword(data)\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n      \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePassword extends Component {\r\n  action = async () => {\r\n    \r\n    const {\r\n      changePasswordMethods, \r\n      changePasswordReducer: { \r\n        data: {\r\n          NewPassword,\r\n          ConfirmNewPassword,\r\n        }\r\n      },\r\n      code,\r\n      email,\r\n      history,\r\n      reDirect\r\n      } = this.props;\r\n\r\n    const modelChangePassword = {\r\n      phoneOrEmail: email,\r\n      Code: code,\r\n      NewPassword: NewPassword,\r\n      ConfirmNewPassword: ConfirmNewPassword,\r\n      usernameOrEmailOrPhoneNumber: email\r\n    }\r\n    await changePasswordMethods(modelChangePassword, 'change_password')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { Code,\r\n          NewPassword,\r\n          ConfirmNewPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n      code\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.action}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Código'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce tu código'}\r\n                    inputValue={code ? code : Code}\r\n                    onChange={changePasswordHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.Code}\r\n                    readonly\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePasswordForUser extends Component {\r\n  actionChangePasswordForUser = async () => {\r\n    const { changePasswordMethods, userId, changePasswordReducer: {data:{ NewPassword,  ConfirmNewPassword}} } = this.props;\r\n    await changePasswordMethods({NewPassword,  ConfirmPassword: ConfirmNewPassword, UserId: userId},'SetPassword');\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: {\r\n            NewPassword,\r\n            ConfirmNewPassword },\r\n            validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.actionChangePasswordForUser}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    textLabel = 'Repite la contraseña'\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordForUser);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass SendEmail extends Component {\r\n  action = async () => {\r\n    const {changePasswordMethods,\r\n        history,\r\n        reDirect\r\n      } = this.props;\r\n     let email =  this.props.changePasswordReducer.data.phoneOrEmail;\r\n    await changePasswordMethods({phoneOrEmail: email}, 'send_email_code')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { phoneOrEmail },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Inputs.Form1\r\n           loading={cargando}\r\n           error={error}\r\n           action={this.action}\r\n           textButton={'Continuar'}\r\n           textButtonLoading={'Enviando Email...'}\r\n           validations={validations}\r\n           handleValidations={changePasswordHandleValidation}\r\n        >\r\n          <Inputs.InputEmail  \r\n            name='phoneOrEmail'\r\n            inputValue={phoneOrEmail}\r\n            onChange={changePasswordHandleChange} \r\n            label='Correo'\r\n            RE={RegularExpressions.RE_EMAIL}\r\n            validateRE={validations.phoneOrEmail}\r\n          />\r\n        </Inputs.Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SendEmail);\r\n","import ComponentLogin from './Login'\r\nimport ComponentSignUp from './SignUp'\r\nimport ComponentChangePassword from './change-password/ChangePassword'\r\nimport ComponentChangePasswordForUser from './change-password/ChangePasswordForUser'\r\nimport ComponentVerifyAccount from './change-password/VerifyAccount'\r\nimport ComponentSendEmail from './change-password/SendEmail'\r\n\r\nexport const Login = ComponentLogin;\r\nexport const SignUp = ComponentSignUp;\r\nexport const ChangePassword = ComponentChangePassword;\r\nexport const VerifyAccount = ComponentVerifyAccount;\r\nexport const SendEmail = ComponentSendEmail;\r\nexport const ChangePasswordForUser = ComponentChangePasswordForUser;\r\n","// Imports de react.\r\nimport React from 'react';\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Container, \r\n    Card, \r\n    CardBody,\r\n} from 'reactstrap';\r\nimport {Logos, Navbars} from '../../config-components'\r\n\r\n\r\n\r\n// Imports de sessión components\r\nimport {Login, SendEmail, ChangePassword, SignUp} from '../../components-session'\r\n\r\nconst LayoutSection = ({children, message='',classSection='', classContainer='', classLogo= '', classCard='', classCardBody = ''}) =>{\r\n    return (\r\n        <section className={classSection}>\r\n            <Container className={ classContainer}>\r\n                <Card className={classCard}>\r\n                    <CardBody className={classCardBody}>\r\n                        {children} \r\n                        {message}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        {/* <h4 className=\"font-weight-bold mb-4\">Iniciar sesión</h4>      */}\r\n                        <Login />   \r\n                        {/* <p className=\"text-center mb-0\">¿No tienes una cuenta? <Link to='/sign-up'>Crea una cuenta</Link></p> */}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ForgotPassword = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-0\">Restablecer contraseña</h4>     \r\n                        <p className=\"text-muted\">Ingresa el email que tienes registrado</p>\r\n                        <SendEmail\r\n                            history={history}\r\n                            reDirect='/check-your-account'\r\n                        />   \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const CheckYourAccount = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Revisa tu correo</h4>     \r\n                        <p className=\"text-muted\">Te hemos enviado código a tu email, si no \r\n                            lo ves en tu bandeja de entrada, revisa en spam y correos no deseados.</p> \r\n                        <Link to=\"/login\"  className=\"btn btn-primary w-100\">Iniciar sesión</Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ChangePasswordPage = () => {\r\n    const {code, email} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Restablecer Contraseña</h4>    \r\n                        <p className=\"text-muted mb-4\">Ingresa el email que tienes registrado</p>\r\n                        <ChangePassword reDirect='/login' code={code} email={email} history={history}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const SignUpPage = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <LayoutSection\r\n                classSection='bg-light h-100 py-6 mt-5'\r\n                classCard='mx-auto card-form border-0'\r\n                message={\r\n                    <p className=\"text-center mb-0\">¿Ya tienes una cuenta? <Link to='/login'>Inicia Sesión</Link></p>\r\n                }\r\n            >\r\n                <h4 className=\"font-weight-bold mb-4\">Registrate</h4>     \r\n                <SignUp history={history} role='User' reDirect={'/check-your-account'} />\r\n            </LayoutSection>      \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Row, Col, Card, CardBody, Container} from 'reactstrap'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {ListOfUsers as Users, UpdateUserInfo, ValidateAccount} from '../../components-admin'\r\nimport {SignUp, ChangePasswordForUser} from '../../components-session/'\r\nimport {Navbars} from '../../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfUsers = () => {\r\n    return (\r\n        <>\r\n            <Users />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ListOfAdmins = () => {\r\n    return (\r\n        <>\r\n            <Users \r\n                roleName='Admin' \r\n                title='Administradores'\r\n                create='/create-admin'\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateAdmin = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Administrador</h5>\r\n                            <SignUp history={history} role='Admin' reDirect={'/admin-dashboard/admins'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadAdmin = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Admin</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n             </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateUser = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/users\" className=\"text-muted\">Usuarios</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear usuario</small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Usuario</h5>\r\n                            <SignUp history={history} role='User' reDirect={'/admin-dashboard/create-company'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadUser = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Usuario</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser userId={userId}/>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","export const SECTION_CARGANDO = \"section_cargando\";\r\nexport const SECTION_ERROR = \"section_error\";\r\nexport const SECTION_HANDLE_CHANGE = \"section_handle_change\";\r\nexport const SECTION_CLEAN_STATE = \"section_clean_state\";\r\nexport const SECTION_CRUD = \"section_crud\";\r\nexport const SECTIONS_LIST = \"sections_list\";\r\nexport const SECTIONS_SELECT = \"sections_list_select\";\r\nexport const SECTION_HANDLE_VALIDATION = \"section_handle_validation\";","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const sectionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const sectionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const sectionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const sectionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = SECTION_CRUD;\r\n      switch (method) {\r\n        case \"get_list_sections_select\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_SELECT;\r\n          break;\r\n        case \"get_list_sections\":\r\n          answer = await axios_api(\r\n            `api/Sections`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id_with_products\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseIdWithProducts?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n\r\n        case \"get_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n\r\n        case \"put_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_section\":\r\n          answer = await axios_api(\"api/Section\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: SECTION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nclass Section extends Component {\r\n    componentDidMount = async() =>{\r\n        const {sectionId, sectionMethods} = this.props;\r\n        sectionId && await sectionMethods({Id: sectionId}, 'get_section')\r\n    }\r\n    actionSection = async () => {\r\n        const {\r\n            sectionMethods, \r\n            sectionCleanState,\r\n            sectionReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                CourseId\r\n            }},\r\n            reDirect,\r\n            history,\r\n            courseId,\r\n            setModal\r\n        } = this.props\r\n        if(Id){\r\n            await sectionMethods({Id, Name, DateCreated, CourseId }, 'put_section')\r\n        }else{\r\n            await sectionMethods({ Name, CourseId: courseId}, 'post_section')\r\n        }\r\n        if(this.props.sectionReducer.data.Id){\r\n            sectionCleanState()\r\n            await sectionMethods({Id: courseId ? courseId : CourseId },'get_list_sections_by_course_id_with_products');\r\n            setModal && setModal()\r\n            reDirect && history.push(reDirect)\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            sectionHandleValidation,\r\n            sectionHandleChange,\r\n            sectionReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionSection}\r\n                textButton={Id ? 'Actualizar Sección' : 'Agregar Sección'}\r\n                textButtonLoading={Id ? 'Actualizando Sección...' : 'Agregando Sección...'}\r\n                validations={validations}\r\n                handleValidations={sectionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sección'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Sección'}\r\n                    inputValue={Name}\r\n                    onChange={sectionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({sectionReducer}) => {\r\n    return {sectionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...sectionActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Section from './Section'\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateModalSection = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n   \r\n    if(sectionModal.some){\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n    \r\n    return (\r\n        <ModalForm\r\n            state={sectionModal}\r\n            modalTitle={'Crear Sección'}\r\n            content={\r\n                <Section \r\n                    courseId={courseId}\r\n                    setModal={ sectionModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditSectionModal = ({section}) => {\r\n    const sectionModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            state={sectionModal}\r\n            modalTitle={`Editar Sección: ${section.SectionName}`}\r\n            content={<Section sectionId={section.SectionId} />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteSectionModal = ({section, courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n    const deleteSectionAction = async (sectionId) => {\r\n        await dispatch(sectionActions.sectionMethods({Id: sectionId},'delete_section'));\r\n        await dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'));\r\n    }\r\n    \r\n    return (\r\n        <ModalDelete \r\n            state={sectionModal}\r\n            modalTitle={`Eliminar Sección: ${section.SectionName}`}\r\n            content={`La siguiente sección \"${section.SectionName}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={() => deleteSectionAction(section.SectionId)}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","export const CATEGORY_PRODUCT_CARGANDO = \"category_products_cargando\";\r\nexport const CATEGORY_PRODUCT_ERROR = \"category_products_error\";\r\nexport const CATEGORY_PRODUCT_HANDLE_CHANGE = \"category_products_handle_change\";\r\nexport const CATEGORY_PRODUCT_CLEAN_STATE = \"category_products_clean_state\";\r\nexport const CATEGORY_PRODUCT_CRUD = \"category_products_crud\";\r\nexport const CATEGORIES_PRODUCTS_LIST = \"categories_products_list\";\r\nexport const CATEGORY_PRODUCT_HANDLE_VALIDATION = \"category_products_handle_validation\";\r\n\r\n\r\n\r\n\r\n","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryProductHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryProductHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = CATEGORY_PRODUCT_CRUD;\r\n      switch (method) {\r\n\r\n        case \"get_list_categories_products\":\r\n          answer = await axios_api(\r\n            `api/ProductCategories`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = CATEGORIES_PRODUCTS_LIST;\r\n          break;\r\n\r\n        case \"get_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n        \r\n        case \"put_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_category_product\":\r\n          answer = await axios_api(\"api/ProductCategory\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","export const BLOB_CARGANDO = \"blob_cargando\";\r\nexport const BLOB_ERROR = \"blob_error\";\r\nexport const BLOB_HANDLE_CHANGE = \"blob_handle_change\";\r\nexport const BLOB_HANDLE_VALIDATION = \"blob_handle_validation\";\r\nexport const BLOB_CLEAN_STATE = \"blob_clean_state\";\r\nexport const BLOB_CRUD = \"blob_crud\";\r\n","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const blobHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const blobHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const blobCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const blobMethods = (data, method) => async (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CARGANDO,\r\n  });\r\n  try {\r\n    let answer;\r\n    let type = BLOB_CRUD;\r\n    switch (method) {\r\n      case \"post_blob\":\r\n        answer = await axios_api(`api/Blob`, true, \"post\", data);\r\n        break;\r\n      case \"put_blob\":\r\n        answer = await axios_api(\r\n          `api/Blob?id=${data.id}`,\r\n          true,\r\n          \"put\",\r\n          data.blob\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    //answer = { data: answer.data[0], status: answer.status };\r\n    dispatch({\r\n      type: type,\r\n      payload: answer.data[0],\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: BLOB_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","/*\r\n * Funciones para el manejo de archivos y form datas\r\n */\r\n\r\nexport const b64toBlob = (b64Data, contentType = \"\", sliceSize = 512) => {\r\n  let byteCharacters = atob(b64Data);\r\n  let byteArrays = [];\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    let slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n    let byteNumbers = new Array(slice.length);\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i);\r\n    }\r\n\r\n    let byteArray = new Uint8Array(byteNumbers);\r\n\r\n    byteArrays.push(byteArray);\r\n  }\r\n\r\n  let blob = new Blob(byteArrays, { type: contentType });\r\n  return blob;\r\n};\r\n\r\n/*\r\n * creamos un blob\r\n */\r\nexport const createBlob = (dataUri) => {\r\n  let block = dataUri.split(\";\");\r\n  let contentType = block[0].split(\":\")[1];\r\n  let realData = block[1].split(\",\")[1];\r\n  const blob = b64toBlob(realData, contentType);\r\n  return blob;\r\n};\r\n\r\n/*\r\n * Convertimos un blob a form data\r\n */\r\nexport const createFormData = (\r\n  blob,\r\n  BlobTypeId = 1,\r\n  ContainerName = \"publicproducts\",\r\n  IsPrivate = true,\r\n  UserId = \"\"\r\n) => {\r\n  const data = new FormData();\r\n  data.set(\"BlobTypeId\", BlobTypeId);\r\n  data.set(\"ContainerName\", ContainerName);\r\n  data.set(\"IsPrivate\", IsPrivate);\r\n  //   if (localStorage.getItem(\"role\") === \"Admin\") {\r\n  //     data.set(\"UserId\", UserId);\r\n  //   }\r\n  data.append(\"file\", blob);\r\n  return data;\r\n};\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as categoryProductActions from '../components-category-product/reducer/categoryProductActions'\r\nimport * as categoryActions from '../components-category/reducer/categoryActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Product extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, categoryProductMethods, categoryMethods} = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        await categoryProductMethods(\"\", 'get_list_categories_products');\r\n        await categoryMethods(\"\",\"GetCategories\")\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    ProductCategoryId, \r\n                    fileCover,\r\n                    Categories\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            categoryProductReducer:{\r\n                list_categories_products\r\n            },\r\n            blobReducer,\r\n            categoryReducer:{\r\n                list_categories\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'ProductCategoryId'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={ProductCategoryId}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.ProductCategoryId}\r\n                    optionPlaceHolder={'Selecciona un tipo de producto'}\r\n                    options={list_categories_products}\r\n                /> \r\n\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Caracteristicas'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Categories'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={Categories}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Categories}\r\n                    optionPlaceHolder={'Selecciona caracteristicas'}\r\n                    options={list_categories}\r\n                /> */}\r\n                \r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer, categoryProductReducer, blobReducer, categoryReducer}) => {\r\n    return {productReducer, categoryProductReducer, blobReducer, categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...categoryProductActions,\r\n    ...blobActions,\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Product from './Product'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateProductModal = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const porductModal = SwitchSome();\r\n\r\n    if(porductModal.some){\r\n        dispatch(productActions.productCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={porductModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Product \r\n                    courseId={courseId} \r\n                    hasSection={true}\r\n                    setModal={porductModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditProductModal = ({product, courseId}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={porductModal}\r\n            modalTitle={`Editar Recurso: ${product.Name}`}\r\n            content={<Product \r\n                productId={product.Id} \r\n                hasSection={true} \r\n                courseId={courseId}\r\n                setModal={porductModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteProductModal = ({product, action}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ porductModal}\r\n            modalTitle={`Eliminar Recurso: ${product.Name}`}\r\n            content={`El siguiente Recurso \"${product.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","// Imports de react.\r\nimport React, { useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Badge} from 'reactstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Import de components.\r\nimport {EditSectionModal, DeleteSectionModal} from './ModalSections'\r\nimport {EditProductModal, DeleteProductModal} from '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\n\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfSections = ({courseId}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [dispatch, courseId])\r\n\r\n    const cleanSection = () => {\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n\r\n    const deleteProductAction = (sectionId) => {\r\n        dispatch(productActions.productMethods({Id: sectionId},'delete_product'))\r\n        dispatch(productActions.productCleanState())\r\n        cleanSection()\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    // if(list_sections.len){\r\n    //     dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n            {list_sections.map(section => {\r\n                 //TODO: implementar nuevo formato para leer lor recursos de de una seción\r\n                 //TODO: Crear reducers de resources.\r\n                return <>\r\n                    <div className=\"border mb-3 p-2\">\r\n                        <div className='d-flex mb-2 p-2 text-left'>\r\n                            <h6 className='flex-grow-1 font-weight-bold mb-0'>{section.SectionName} </h6>\r\n                            <div>\r\n                                <EditSectionModal section={section} cleanSection={cleanSection}/>\r\n                                <DeleteSectionModal section={section} courseId={courseId}/>\r\n                            </div>\r\n                        </div>\r\n                    {\r\n                        section.Products && \r\n                        section.Products.map(product => {\r\n                        if(product !== null){\r\n                        return(\r\n                            <Badge color={'light'} className='d-flex mb-2 p-2 text-left'>\r\n                                <p className='flex-grow-1 mb-0'>{product.Name} </p>\r\n                                <div>\r\n                                    <Link to={`/player/watch-class/${product.Id}/${courseId}`}>\r\n                                    <FaIcons.FaEye className=\"mr-2\" />\r\n                                    </Link>\r\n                                    <EditProductModal product={product} courseId={courseId} />\r\n                                    <DeleteProductModal product={product} action={() => deleteProductAction(product.Id)}/>\r\n                                </div>\r\n                            </Badge>\r\n                            )\r\n                        }\r\n                        return '';\r\n                        })\r\n                    }\r\n                    </div>\r\n                </>\r\n            })}\r\n            {error ? <Error message={error}></Error> : ''}\r\n        </>\r\n    )\r\n}\r\n\r\n","import ComponentSection from './Section'\r\nimport * as ComponentListOfSections from './ListOfSections'\r\nimport * as ComponentModalSections from './ModalSections'\r\nimport * as ComponentCrudCourse from './CrudCourse'\r\n\r\nexport const Section =  ComponentSection;\r\nexport const ModalSections = ComponentModalSections;\r\nexport const CrudCourse = ComponentCrudCourse.CrudCourse;\r\nexport const ListOfSections = ComponentListOfSections.ListOfSections;","// Imports de react.\r\nimport React from 'react'\r\n\r\n// Imports de components.\r\nimport {CreateModalSection} from './ModalSections'\r\nimport {ListOfSections} from './ListOfSections'\r\nimport {CreateProductModal} from  '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nexport const CrudCourse = ({courseId}) => {\r\n\r\n    \r\n    return(\r\n        <>\r\n        <div className='d-flex justify-content-between'>\r\n            <h5 className=\"font-weight-bold mb-3\">Crea una sección nueva a tu curso</h5>\r\n            <CreateModalSection courseId={courseId}/>\r\n        </div> \r\n\r\n            <div className='d-flex justify-content-between'>\r\n            <h6 className=\"font-weight-bold mb-3\">Añade videos o documentos a tus secciones</h6>\r\n            <CreateProductModal courseId={courseId}/>\r\n        </div>       \r\n        <ListOfSections courseId={courseId}></ListOfSections>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Container, Row } from 'reactstrap'\r\n\r\n// Imports de config-components.\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\n// Imports de components\r\nimport Indicators from '../../components-admin/Indicators'\r\n\r\nimport {\r\n    AdminUsersPages, AdminCoursesPages, AdminProductPages, AdminCompanyPages\r\n} from './index'\r\n\r\nexport const Dashboard = () => {\r\n    \r\n    let {indicator} = useParams();\r\n    let history = useHistory();\r\n    const AdminSections = (page) =>{\r\n        switch(page){\r\n\r\n            case 'create-admin':\r\n                return <AdminUsersPages.CreateAdmin />\r\n            case 'admins':\r\n                return <AdminUsersPages.ListOfAdmins reDirect={'admin'} history={history} />\r\n            case 'create-user':\r\n                return <AdminUsersPages.CreateUser />\r\n            case 'users':\r\n                return <AdminUsersPages.ListOfUsers reDirect={'section'} history={history} />\r\n                 \r\n            case 'create-product':\r\n                return <AdminProductPages.CreateProduct />\r\n            case 'companies':\r\n                return <AdminCompanyPages.ListOfCompanies />\r\n            \r\n            default:\r\n                return <>\r\n                    <Row className=\"mb-4\">\r\n                        <Indicators />\r\n                    </Row>\r\n                </>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           AdminSections(indicator)\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const TemplateDashboardAdmin = ({children}) => {\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           children\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}","// Imports de react.\r\nimport React from 'react' \r\nimport { useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {CrudCourse} from '../../components-section'\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const CreateSection = () => {\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <Row>\r\n                <Col lg=\"8\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <CrudCourse  courseId={courseId} ></CrudCourse>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            {/* <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/> */}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Course extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, } = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        this.props.productReducer.data.ProductCategoryId = 6;\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            //TODO: revisar porque al crear el curso truena\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}${this.props.courseReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    fileCover,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer,  blobReducer}) => {\r\n    return {productReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);","// Imports de react.\r\nimport React from 'react'\r\n\r\nimport {ListOfProducts} from '../components-product'\r\n\r\nconst ListOfCourses = ({reDirect}) => {\r\n    return(\r\n        <ListOfProducts \r\n            title={'Cursos'} \r\n            categoryProductId={6} \r\n            reDirect={reDirect}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ListOfCourses\r\n\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\n\r\nexport const Player = ({\r\n    url = 'https://Version 4storage.blob.core.windows.net/publicproducts/5ad7523a-cf4e-4dfa-8942-6c6fa1a86744.mp4'\r\n}) => {\r\n    return (\r\n        <div> \r\n            <ReactPlayer \r\n                url={url}\r\n                width='100%'\r\n                height='100%'\r\n                controls\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import * as ComponentPlayer from './Player'\r\n\r\nexport const PlayerMedia = ComponentPlayer;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Container } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst TabCourse = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Descripción General\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Sporte\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab} className=\"py-4\">\r\n        <TabPane tabId=\"1\">\r\n            <Container>\r\n                <h5>Acerca de este curso</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">  \r\n            <Container>\r\n                <h5>Soporte y ayuda</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabCourse;","import React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Navbars} from '../config-components'\r\nimport {PlayerMedia} from '../components-player'\r\nimport { Row, Col } from 'reactstrap';\r\nimport CollapseSection from '../config-components/Collapse'\r\nimport TabCourse from '../config-components/TabCourse'\r\n\r\nimport * as productActions from '../components-product/reducer/productActions';\r\nimport * as sectionActions from '../components-section/reducer/sectionActions';\r\n\r\n\r\nexport const WatchClass = () => {\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n    const stateProduct = useSelector(state => state.productReducer)\r\n    const dispatch = useDispatch();\r\n    const {productId, courseId} = useParams();\r\n    useEffect(() => {\r\n        dispatch(productActions.productMethods({Id: productId},'get_product'));\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [productId, courseId, dispatch])\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    return (\r\n        <div>\r\n            <Navbars.NavbarAdmin /> \r\n            <Row className=\"no-gutters\">\r\n                <Col lg=\"8\">\r\n                    <PlayerMedia.Player \r\n                        url={stateProduct.data.Blobs?.length > 0 \r\n                            ? stateProduct.data.Blobs[0].Uri\r\n                            : ''\r\n                    }\r\n                    />  \r\n                    <TabCourse />\r\n                </Col>\r\n                <Col lg=\"4\" className=\"border-left\">\r\n                    <div>\r\n                        <div className=\"p-3 border-bottom shadow-sm\">\r\n                            <h6 className=\"font-weight-bold mb-0\">Contenido del curso</h6>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                {list_sections.map(section => {\r\n                                    return (\r\n                                        <CollapseSection \r\n                                            title={section.SectionName} \r\n                                            countVideos={section.Products.length} \r\n                                            videos={section.Products}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                                \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import ComponentCourse from './Course'\r\nimport ComponentListOfCourses from './ListOfCourses'\r\nimport * as ComponentWatchClass from './WatchClass'\r\n\r\n\r\nexport const Course = ComponentCourse ;\r\nexport const ListOfCourses = ComponentListOfCourses ;\r\nexport const PlayerMedia = ComponentWatchClass;\r\n","// Imports de react.\r\nimport React from 'react' \r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {ListOfCourses as Courses, Course, PlayerMedia} from '../../components-course'\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfCourses = ({reDirect, history}) =>{\r\n    return (\r\n        <Courses reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCourse = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <Card className=\"border-0\">\r\n            <CardBody className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\">Crea un curso nuevo</h5>\r\n                <Course reDirect={'/admin-dashboard/section/'} history={history}/>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const WhatchCourse = () => {\r\n    return (\r\n        <>\r\n            <PlayerMedia.WatchClass /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    const history = useHistory();\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\n\r\nclass CategoryProduct extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryProductId, categoryProductMethods} = this.props;\r\n        categoryProductId && await categoryProductMethods({Id: categoryProductId}, 'get_category_product')\r\n    }\r\n    actionCategoryProduct = async () => {\r\n        const {\r\n            categoryProductMethods, \r\n            categoryProductCleanState,\r\n            categoryProductReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryProductMethods({Id: Id, Name: Name}, 'put_category_product')\r\n\r\n        }else{\r\n            await categoryProductMethods({Name: Name}, 'post_category_product')\r\n        }\r\n        if(this.props.categoryProductReducer.data.Id){\r\n            categoryProductCleanState()\r\n            await categoryProductMethods('','get_list_categories_products');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryProductHandleValidation,\r\n            categoryProductHandleChange,\r\n            categoryProductReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategoryProduct}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryProductHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Categoria de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryProductHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryProduct);","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport {Badge} from 'reactstrap'\r\n\r\n// Import de components.\r\nimport CategoryProduct from './CategoryProduct'\r\n\r\n// Imports de config-components.\r\nimport {ModalForm, ModalDelete} from '../config-components/Modals'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass ListOfCategoriesProducts extends Component {\r\n    componentDidMount = async () => {\r\n        const {categoryProductMethods} = this.props;\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    deleteAction = async (categoryProductId) => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        await categoryProductMethods({Id: categoryProductId},'delete_category_product');\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    cleanModal = async () => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            categoryProductReducer: { \r\n                api_actions: {cargando, error},\r\n                list_categories_products\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n                {list_categories_products.map(category => {\r\n                    return <Badge color={'light'} className='d-inline-block mr-2 p-2'>\r\n                        <span className='mr-2'>{category.Name} </span>\r\n                        {/* <ModalForm \r\n                            key={category.Id}\r\n                            clean={this.cleanModal}\r\n                            modalTitle={`Editar Categoria: ${category.Name}`}\r\n                            content={<CategoryProduct categoryProductId={category.Id}></CategoryProduct>}\r\n                        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm> */}\r\n                        {/* <ModalDelete \r\n                            key={category.Id}\r\n                            modalTitle={`Eliminar Categoría: ${category.Name}`}\r\n                            content={`La siguiente categoría \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n                            action={() => this.deleteAction(category.Id)}\r\n                        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete> */}\r\n                     </Badge>\r\n                   \r\n                })}\r\n                {error ? <Error message={error}></Error> : ''}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfCategoriesProducts);","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nclass Category extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryId, categoryMethods} = this.props;\r\n        categoryId && await categoryMethods({Id: categoryId}, 'GetCategory')\r\n    }\r\n    actionCategory = async () => {\r\n        const {\r\n            categoryMethods, \r\n            categoryCleanState,\r\n            categoryReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryMethods({Id: Id, Name: Name}, 'PutCategory')\r\n\r\n        }else{\r\n            await categoryMethods({Name: Name}, 'PostCategory')\r\n        }\r\n        if(this.props.categoryReducer.data.Id){\r\n            categoryCleanState()\r\n            await categoryMethods('','GetCategories');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryHandleValidation,\r\n            categoryHandleChange,\r\n            categoryReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategory}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Añade caracteristicas para seleccionar en los proyectos'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryReducer}) => {\r\n    return {categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Category from './Category'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateCategoryModal = ({category}) => {\r\n    const dispatch = useDispatch()\r\n    const categoryModal = SwitchSome();\r\n\r\n    if(categoryModal.some){\r\n        dispatch(categoryActions.categoryCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={categoryModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Category \r\n                    category={category} \r\n                    hasSection={true}\r\n                    setModal={categoryModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditCategoryModal = ({category}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={categoryModal}\r\n            modalTitle={`Editar Recurso: ${category.Name}`}\r\n            content={<Category \r\n                categoryId={category.Id} \r\n                hasSection={true} \r\n                setModal={categoryModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteCategoryModal = ({category, action}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ categoryModal}\r\n            modalTitle={`Eliminar Recurso: ${category.Name}`}\r\n            content={`El siguiente Recurso \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_DETAIL_CARGANDO = \"product_detail_cargando\";\r\nexport const PRODUCT_DETAIL_ERROR = \"product_detail_error\";\r\nexport const PRODUCT_DETAIL_HANDLE_CHANGE = \"product_detail_handle_change\";\r\nexport const PRODUCT_DETAIL_CLEAN_STATE = \"product_detail_clean_state\";\r\nexport const PRODUCT_DETAIL_CRUD = \"product_detail_crud\";\r\nexport const PRODUCT_DETAILS_LIST = \"product_details_list\";\r\nexport const PRODUCT_DETAIL_HANDLE_VALIDATION = \"product_detail_handle_validation\";\r\n\r\nexport const GetProductDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/ProductDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCT_DETAILS_LIST};\r\n}\r\n\r\nexport const GetProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const GetProductDetailByProductId = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetailByProductId?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_detail_put'};\r\n}\r\n\r\nexport const PostProductDetail = async(data)=> {\r\n    const  answer = await axios_api(\"api/ProductDetail\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION, \r\n    GetProductDetails,\r\n    GetProductDetail,\r\n    GetProductDetailByProductId,\r\n    PutProductDetail,\r\n    PostProductDetail,\r\n    DeleteProductDetail,\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProductDetails\":\r\n          answer = await GetProductDetails(); \r\n          break;\r\n\r\n        case \"GetProductDetail\":\r\n          answer = await GetProductDetail(data);\r\n          break;\r\n\r\n        case \"GetProductDetailByProductId\":\r\n          answer = await GetProductDetailByProductId(data);\r\n          break;\r\n        case \"PutProductDetail\":\r\n          answer = await PutProductDetail(data);\r\n          break;\r\n\r\n        case \"PostProductDetail\":\r\n          answer = await PostProductDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteProductDetail\":\r\n          answer = await DeleteProductDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productDetailActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\n\r\nclass ProductDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productDetailMethods} = this.props;\r\n        productId && await productDetailMethods({Id: productId}, 'GetProductDetailByProductId');\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            productDetailMethods, \r\n            productDetailReducer: {data : {\r\n                Id,\r\n                SubTitle,\r\n                DateCreated,\r\n                Description, \r\n                BlobId\r\n            }},\r\n            productId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            SubTitle: SubTitle ? SubTitle : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            ProductId: productId ? productId : '',\r\n            BlobId: BlobId ? BlobId : '',\r\n        }\r\n        await productDetailMethods(model, action);\r\n    }\r\n\r\n    actionProductDetail = async () => {\r\n        const {\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blob,\r\n                    fileZip\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileZip?.length &&  Blob){\r\n                let fileZipAnswer = await this.actionBlob(fileZip, 1 ,[Blob]);\r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            } else{\r\n                let fileZipAnswer = fileZip?.length && await this.actionBlob(fileZip, 1); \r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            }\r\n        }else{\r\n            let fileZipAnswer = fileZip.length && await this.actionBlob(fileZip, 1); \r\n            this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n            fileZipAnswer &&  await this.sendAction('PostProductDetail')\r\n        }\r\n        if(this.props.productDetailReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productDetailReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productDetailHandleValidation,\r\n            productDetailHandleChange,\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    SubTitle,\r\n                    Description, \r\n                    fileZip\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                <Form1\r\n                    loading={\r\n                        cargando \r\n                            ? cargando : \r\n                            blobReducer.api_actions.cargando \r\n                            ? blobReducer.api_actions.cargando \r\n                            : false \r\n                        }\r\n                    error={error}\r\n                    action={this.actionProductDetail}\r\n                    textButton={Id ? 'Guardar Detalle' : 'Agregar Detalle'}\r\n                    textButtonLoading={Id ? 'Guardando Detalle...' : 'Agregando Detalle...'}\r\n                    validations={validations}\r\n                    handleValidations={productDetailHandleValidation}\r\n                >\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Subtitulo'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'SubTitle'}\r\n                        placeHolder={'Introduce un subtitulo '}\r\n                        inputValue={SubTitle}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={50}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.SubTitle}\r\n                    />\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Detalles'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='textarea'\r\n                        inputName={'Description'}\r\n                        placeHolder={'Introduce detalles'}\r\n                        inputValue={Description}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={500}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.Description}\r\n                    />\r\n                    <InputFile\r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Sube un .zip con tus archivos'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='file'\r\n                        inputName='fileZip'\r\n                        inputId='fileZip-video'\r\n                        inputValue={fileZip ? fileZip : ''}\r\n                        onChange={productDetailHandleChange}\r\n                        validateRE={validations.fileZip}\r\n                    /> \r\n                </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productDetailReducer,  blobReducer}) => {\r\n    return {productDetailReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","import ComponentProductDetail from './ProductDetails'\r\n\r\nexport const ProductDetail = ComponentProductDetail;","// Imports de react\r\nimport React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {Row, Col, Card, CardBody} from 'reactstrap'\r\n\r\n// Imports de componentes.\r\nimport {CardProduct, ListOfProducts as Products, AddCategories} from '../../components-product'\r\nimport Product from '../../components-product/Product'\r\nimport CategoryProduct from '../../components-category-product/CategoryProduct'\r\nimport ListOfCategoriesOfProducts from '../../components-category-product/ListOfCategoriesOfProducts'\r\nimport {Category, ListOfCategories} from '../../components-category'\r\nimport {ProductDetail} from '../../components-product-details'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfProducts = () => {\r\n    return(\r\n        <Products reDirect={'/admin-dashboard/product'}/>\r\n    )\r\n}\r\n\r\nexport const CreateProduct = () => {\r\n    const history = useHistory();  \r\n    return (\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear producto</small></li>\r\n        </ul>\r\n        <Row>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Crea un producto nuevo</h5>\r\n                        <Product reDirect={`/admin-dashboard/product`} history={history}/>\r\n                        \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <CardProduct />\r\n                \r\n                {/* <Card className=\"border-0\">\r\n                    <CardBody>\r\n                        <Category />\r\n                        <ListOfCategories/>\r\n                    </CardBody>\r\n                </Card> */}\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditProduct = () => {\r\n    let {productId,section} = useParams();\r\n    const history = useHistory();\r\n\r\n    const ProductSection = (section) => {\r\n        switch(section){\r\n            case 'cover':\r\n                return <>\r\n                <h5 className=\"font-weight-bold mb-3\">Edita este producto </h5>\r\n                <Product productId={productId} history={history}/>\r\n                </>\r\n            case 'detail':\r\n                return <div>\r\n                    <h5 className=\"font-weight-bold mb-3\">Sube detalle del producto </h5>\r\n                    <ProductDetail productId={productId} />\r\n                </div>\r\n                \r\n            default:\r\n                return <Product productId={productId} history={history}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Editar producto</small></li>\r\n            </ul>\r\n             <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <Link to={`/admin-dashboard/product/${productId}/cover`}>producto </Link>/ \r\n                            <Link  to={`/admin-dashboard/product/${productId}/detail`}> detalle</Link>\r\n                            \r\n                            {\r\n                                ProductSection(section)\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg=\"6\">\r\n                    <CardProduct />\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <AddCategories />\r\n                        </CardBody>\r\n                    </Card> */}\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <Category />\r\n                            <ListOfCategories/>\r\n                        </CardBody>\r\n                    </Card> */}\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CategoryProducts = () =>{\r\n    return (\r\n        <>\r\n            <CategoryProduct />\r\n            <ListOfCategoriesOfProducts></ListOfCategoriesOfProducts>\r\n        </>\r\n    )\r\n}\r\n\r\n","\r\nimport React from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport { CompanyIndicators, Company, ChooseCompany } from '../../components-company'\r\nimport { Row, Col, Card, CardBody } from 'reactstrap'\r\n\r\nexport const Indicators = ({user, companyId, hrefBase}) => {\r\n    debugger\r\n    return (\r\n        <>\r\n            <ChooseCompany user={user} companyId={companyId}> </ChooseCompany>\r\n            <Row className=\"mb-4\">\r\n                <CompanyIndicators companyId={companyId} hrefBase={hrefBase}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateCompany = () => {\r\n    const {userId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Crea una Empresa</h5>\r\n                        <Company userId={userId} history={history} reDirect={'/admin-dashboard/company'} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const JOB_DETAIL_CARGANDO = \"job_detail_cargando\";\r\nexport const JOB_DETAIL_ERROR = \"job_detail_error\";\r\nexport const JOB_DETAIL_HANDLE_CHANGE = \"job_detail_handle_change\";\r\nexport const JOB_DETAIL_CLEAN_STATE = \"job_detail_clean_state\";\r\nexport const JOB_DETAIL_CRUD = \"job_detail_crud\";\r\nexport const JOB_DETAILS_LIST = \"job_detail_list\";\r\nexport const JOB_DETAIL_HANDLE_VALIDATION = \"job_detail_handle_validation\";\r\n\r\nexport const GetJobDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAILS_LIST};\r\n}\r\n\r\nexport const GetJobDetailByPersonalDetailId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/JobDetailByPersonalDetailId?personalDetailId=${data.personalDetailId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\n\r\nexport const GetJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'job_detail_put'};\r\n}\r\n\r\nexport const PostJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_HANDLE_VALIDATION, \r\n    GetJobDetails,\r\n    GetJobDetailByPersonalDetailId,\r\n    GetJobDetail,\r\n    PutJobDetail,\r\n    PostJobDetail,\r\n    DeleteJobDetail\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const jobDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const jobDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetJobDetails\":\r\n          answer = await GetJobDetails(); \r\n          break;\r\n\r\n        case \"GetJobDetailByPersonalDetailId\":\r\n          answer = await GetJobDetailByPersonalDetailId(data);\r\n          break;\r\n        \r\n          case \"GetJobDetail\":\r\n          answer = await GetJobDetail(data);\r\n          break;\r\n\r\n        case \"PutJobDetail\":\r\n          answer = await PutJobDetail(data);\r\n          break;\r\n\r\n        case \"PostJobDetail\":\r\n          answer = await PostJobDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteJobDetail\":\r\n          answer = await DeleteJobDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: JOB_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as jobDetailActions from './reducer/jobDetailActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\n\r\nclass JobDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, jobDetailMethods, areaMethods, companyId} = this.props;\r\n        personalDetailId && await jobDetailMethods({personalDetailId}, 'GetJobDetailByPersonalDetailId');\r\n        await areaMethods({companyId},'GetAreasByCompanyId')\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            jobDetailMethods, \r\n            jobDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PersonDetailId,\r\n                DateAdmission,\r\n                Contract,\r\n                Benefits,\r\n                TotalSalary,\r\n                MonthlySalary,\r\n                Type,\r\n                AreaId,\r\n                CompanyId\r\n            }},\r\n            personalDetailId,\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PersonDetailId: PersonDetailId ? PersonDetailId : personalDetailId,\r\n            DateAdmission: DateAdmission ? DateAdmission : '',\r\n            Contract: Contract ? Contract : '',\r\n            Benefits: Benefits ? Benefits : '',\r\n            TotalSalary: TotalSalary ? TotalSalary : '',\r\n            MonthlySalary: MonthlySalary ? MonthlySalary : '',\r\n            Type: Type ? Type : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            AreaId: AreaId ? AreaId : '',\r\n        }\r\n        \r\n        await jobDetailMethods(model, action);\r\n    }\r\n\r\n    actionJobDetail = async () => {\r\n        const {\r\n            jobDetailCleanState,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutJobDetail');\r\n        }else{\r\n            await this.sendAction('PostJobDetail')\r\n        }\r\n        if(this.props.jobDetailReducer.data.Id && reDirect){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            jobDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { jobDetailCleanState } = this.props;\r\n        jobDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            jobDetailHandleValidation,\r\n            jobDetailHandleChange,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    DateAdmission,\r\n                    Benefits,\r\n                    TotalSalary,\r\n                    MonthlySalary,\r\n                    AreaId,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            areaReducer : {\r\n                list_areas\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionJobDetail}\r\n                textButton={Id ? 'Guardar Información Laboral' : 'Crear Información Laboral'}\r\n                textButtonLoading={Id ? 'Guardando Información Laboral...' : 'Creando Información Laboral...'}\r\n                validations={validations}\r\n                handleValidations={jobDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Ingreso'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'DateAdmission'}\r\n                    placeHolder={''}\r\n                    inputValue={DateAdmission}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.DateAdmission}\r\n                />\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de Contrato'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Contract'}\r\n                    placeHolder={'Selecciona el tipo de Contrato'}\r\n                    inputValue={Contract}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Contract}\r\n                    optionPlaceHolder={'Selecciona el tipo de Contrato'}\r\n                    options={[\r\n                        {Id:'Eventual',Name:'Eventual'},\r\n                        {Id:'Planta',Name:'Planta'}\r\n                    ]}\r\n                /> */}\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Mensual'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'MonthlySalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={MonthlySalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.MonthlySalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Total'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'TotalSalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={TotalSalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.TotalSalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Prestaciones'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Benefits'}\r\n                    placeHolder={'Selecciona el tipo de Prestaciones'}\r\n                    inputValue={Benefits}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Benefits}\r\n                    optionPlaceHolder={'Selecciona el tipo de Prestaciones'}\r\n                    options={[\r\n                        {Id:'LFT',Name:'LFT'},\r\n                        {Id:'CC',Name:'CC'}\r\n                    ]}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Area'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'AreaId'}\r\n                    placeHolder={'Selecciona una Area o Departamento'}\r\n                    inputValue={AreaId}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.AreaId}\r\n                    optionPlaceHolder={'Selecciona una Area o Departamento'}\r\n                    options={list_areas}\r\n                /> \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({jobDetailReducer, areaReducer}) => {\r\n    return {jobDetailReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...jobDetailActions,\r\n    ...areaActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDetail);\r\n","import ComponentJobDetails from './JobDetails'\r\n\r\nexport const JobDetails = ComponentJobDetails;","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport { JobDetails} from '../../components-job-detail'\r\n\r\n\r\n\r\n\r\nexport const CreateJobDetail = ({ reDirect=''}) => {\r\n    const {personalDetailId, companyId} = useParams();\r\n    const history = useHistory();\r\n\r\n    const jobDetailReducer = useSelector(state => state.jobDetailReducer);\r\n    const {data: {Id}} = jobDetailReducer;\r\n    \r\n    return (\r\n        <>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea Información Laboral del Empleado' : 'Actualiza Información Laboral del Empleado'}</h5>\r\n                        <JobDetails companyId={companyId} personalDetailId={personalDetailId} history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateJobDetail = ({reDirect=''}) => {\r\n    const {personalDetailId, companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>            \r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Actualiza Información Laboral del Empleado</h5>\r\n                        <JobDetails companyId={companyId} personalDetailId={personalDetailId}  history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport {Position, ListOfPositions as Positions, ListFromPositions} from '../../components-position'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\n\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\nexport const ListOfPositions = ({reDirect, reDirectBase, reDirectCreate,  history}) =>{\r\n    const {companyId} = useParams();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    debugger\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={reDirectBase.replace('companyId', companyId)} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n            <Positions reDirect={reDirect} create={reDirectCreate}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = ({reDirect, reDirectBase}) => {\r\n    const history = useHistory();\r\n    const {companyId, positionId} = useParams();\r\n    debugger\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Col lg=\"6\" className='mb-5'>\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!positionId ? 'Crear Puesto' : 'Guardar Puesto'}</h5>\r\n                        <Position \r\n                            positionId={positionId} \r\n                            companyId={companyId} \r\n                            history={history} \r\n                            reDirect={reDirect.replace('companyId', companyId)} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Responsabilidades</h5>\r\n                        <ListFromPositions.ListOfResponsabilities /> \r\n                        <h5 className=\"font-weight-bold mb-3\">Descripciones</h5>\r\n                        <ListFromPositions.ListOfDescriptions />     \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfPersonalDetails = ({ title='Colaboradores', redirectUser, create='/create-personal-detail'}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(personalDetailActions.personalDetailMethods({companyId},'GetPersonalDetailsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (personalDetailId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-personal-detail/${personalDetailId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_personal_details\r\n    } = personalDetailReducer;\r\n    \r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Colaboradores</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Apellido Paterno','Apellido Materno','Acciones']}\r\n                propertiesTable={['Name', 'LastName', 'SecondLastName']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_personal_details}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empleado', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPersonalDetails;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\nclass PersonDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, personalDetailMethods} = this.props;\r\n        personalDetailId && await personalDetailMethods({Id: personalDetailId}, 'GetPersonalDetail');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            personalDetailMethods, \r\n            personalDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                LastName,\r\n                SecondLastName,\r\n                CompanyId,\r\n                RFC,\r\n                Birthdate,\r\n                Gender,\r\n                Competencias,\r\n                IMSS,\r\n                CURP,\r\n                Status,\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            LastName: LastName ? LastName : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            SecondLastName: SecondLastName ? SecondLastName : '',\r\n            RFC: RFC ? RFC : '',\r\n            Birthdate: Birthdate ? Birthdate : '',\r\n            Gender: Gender ? Gender : '',\r\n            Competencias: Competencias ? Competencias : '',\r\n            IMSS: IMSS ? IMSS : '',\r\n            CURP: CURP ? CURP : '',\r\n            Status: Status ? Status : '',\r\n        }\r\n        await personalDetailMethods(model, action);\r\n    }\r\n\r\n    actionPersonalDetail = async () => {\r\n        const {\r\n            personalDetailCleanState,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPersonalDetail');\r\n        }else{\r\n            await this.sendAction('PostPersonalDetail')\r\n        }\r\n        if(this.props.personalDetailReducer.data.Id){\r\n            debugger\r\n            reDirect && history.push(`${reDirect}/${this.props.personalDetailReducer.data.Id}`)\r\n            setModal && setModal();\r\n            //personalDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { personalDetailCleanState } = this.props;\r\n        personalDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            personalDetailHandleValidation,\r\n            personalDetailHandleChange,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    LastName,\r\n                    SecondLastName,\r\n                    RFC,\r\n                    Birthdate,\r\n                    Gender,\r\n                    Competencias,\r\n                    IMSS,\r\n                    CURP,\r\n                    Status,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPersonalDetail}\r\n                textButton={Id ? 'Guardar Empleado' : 'Crear Empleado'}\r\n                textButtonLoading={Id ? 'Guardando Empleado...' : 'Creando Empleado...'}\r\n                validations={validations}\r\n                handleValidations={personalDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                     xs={6}\r\n                     sm={6}\r\n                     md={6}\r\n                     lg={6}\r\n                     xl={6}\r\n                     classCol='pl-0 pr-1'\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Paterno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'LastName'}\r\n                    placeHolder={'Introduce apellido paterno'}\r\n                    inputValue={LastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.LastName}\r\n                />\r\n                <InputText \r\n                    xs='6'\r\n                    sm='6'\r\n                    md='6'\r\n                    lg='6'\r\n                    xl='6'\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Materno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'SecondLastName'}\r\n                    placeHolder={'Introduce apellido materno'}\r\n                    inputValue={SecondLastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.SecondLastName}\r\n                />\r\n                \r\n                <InputText \r\n                     xs={8}\r\n                     sm={8}\r\n                     md={8}\r\n                     lg={8}\r\n                     xl={8}\r\n                     classCol='pl-0 pr-1'\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Nacimiento'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'Birthdate'}\r\n                    placeHolder={''}\r\n                    inputValue={Birthdate}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Birthdate}\r\n                />\r\n                <InputText \r\n                    xs={4}\r\n                    sm={4}\r\n                    md={4}\r\n                    lg={4}\r\n                    xl={4}\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sexo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Gender'}\r\n                    placeHolder={'Selecciona el Sexo'}\r\n                    inputValue={Gender}\r\n                    onChange={personalDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Gender}\r\n                    optionPlaceHolder={' Sexo'}\r\n                    options={[\r\n                        {Id:'M',Name:'M'},\r\n                        {Id:'F',Name:'F'}\r\n                    ]}\r\n                />\r\n                <InputText \r\n                   \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Competencias'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Competencias'}\r\n                    placeHolder={'Introduce un sueldo'}\r\n                    inputValue={Competencias}\r\n                    onChange={personalDetailHandleChange}\r\n                   \r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Competencias}\r\n                />\r\n                <InputText \r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    lg={6}\r\n                    xl={6}\r\n                    classCol='pl-0 pr-1'\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='RFC'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'RFC'}\r\n                    placeHolder={'Introduce un rfc'}\r\n                    inputValue={RFC}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.RFC}\r\n                />\r\n                <InputText \r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    lg={6}\r\n                    xl={6}\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='IMSS'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'IMSS'}\r\n                    placeHolder={'Introduce un numero'}\r\n                    inputValue={IMSS}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.IMSS}\r\n                />\r\n                <InputText \r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    lg={6}\r\n                    xl={6}\r\n                    classCol='pl-0 pr-1'\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='CURP'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'CURP'}\r\n                    placeHolder={'Introduce una curp'}\r\n                    inputValue={CURP}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.CURP}\r\n                />\r\n                <InputText \r\n                    xs={6}\r\n                    sm={6}\r\n                    md={6}\r\n                    lg={6}\r\n                    xl={6}\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Estatus'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Status'}\r\n                    placeHolder={'Selecciona un Estatus'}\r\n                    inputValue={Status}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Status}\r\n                    optionPlaceHolder={'Selecciona un Estatus'}\r\n                    options={[\r\n                        {Id:'Activo',Name:'Activo'},\r\n                        {Id:'Inactivo',Name:'Inactivo'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({personalDetailReducer}) => {\r\n    return {personalDetailReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...personalDetailActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonDetail);\r\n","import ComponentListOfPersonalDetails from './ListOfPersonDetails'\r\nimport ComponentPersonDetail from './PersonDetail'\r\n\r\nexport const ListOfPersonDetails = ComponentListOfPersonalDetails;\r\nexport const PersonDetail = ComponentPersonDetail;","import React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {ListOfPersonDetails as PersonDetails, PersonDetail} from '../../components-personal-detail'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport {JobDetails} from './'\r\n\r\n\r\nexport const ListOfPersonDetails = ({ redirectUser }) =>{\r\n    const history = useHistory();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <PersonDetails redirectUser={redirectUser}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\n// Alt + z\r\nexport const CreatePersonDetail = ({redirectUser}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer);\r\n    const {data: {Id}}= personalDetailReducer;\r\n    const {companyId, personalDetailId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n                <ul className=\"list-inline mb-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/employees`} className=\"text-muted\">Empleados</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\"> {!Id ? 'Crear Empleado' : 'Actualizar Empleado'}</small></li>\r\n                </ul>\r\n                <Row>\r\n                    <Col lg=\"6\" className='mb-5'>\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea un Empleado' : 'Actualizar Empleado'}</h5>\r\n                                <PersonDetail personalDetailId={personalDetailId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/update-personal-detail`} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    {Id ? <JobDetails.CreateJobDetail personalDetailId={personalDetailId}/> : '' }\r\n                </Row>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfAreas = ({ title='Areas y departamentos', redirectUser, create='/create-area'}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(areaActions.areaMethods({companyId},'GetAreasByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getArea = (areaId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-area/${areaId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_areas\r\n    } = areaReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Tipo' ,'Acciones']}\r\n                propertiesTable={['Name', 'Type']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_areas}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Area', handleAction: getArea },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfAreas;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\nclass Area extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {areaId, areaMethods} = this.props;\r\n        areaId && await areaMethods({Id: areaId}, 'GetArea');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            areaMethods, \r\n            areaReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                CompanyId,\r\n                Taken,\r\n                Type,\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Taken: Taken ? Taken : false,\r\n            Type: Type ? Type : '',\r\n        }\r\n        await areaMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            areaReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutArea');\r\n        }else{\r\n            await this.sendAction('PostArea')\r\n        }\r\n        if(this.props.areaReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { areaCleanState } = this.props;\r\n        areaCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            areaHandleValidation,\r\n            areaHandleChange,\r\n            areaReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Type\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            \r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Area' : 'Crear Area'}\r\n                textButtonLoading={Id ? 'Guardando Area...' : 'Crear Area...'}\r\n                validations={validations}\r\n                handleValidations={areaHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={areaHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Type'}\r\n                    placeHolder={'Selecciona el tipo de Area'}\r\n                    inputValue={Type}\r\n                    onChange={areaHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Type}\r\n                    optionPlaceHolder={'Selecciona el tipo de Area'}\r\n                    options={[\r\n                        {Id:'Area',Name:'Area'},\r\n                        {Id:'Departamento',Name:'Departamento'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({areaReducer}) => {\r\n    return {areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...areaActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Area);\r\n","import ComponentListOfAreas from './ListOfAreas'\r\nimport ComponentArea from './Area'\r\n\r\nexport const ListOfAreas = ComponentListOfAreas;\r\nexport const Area = ComponentArea;","import {ListOfAreas as Areas, Area} from '../../components-area'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfAreas = ({redirectUser}) =>{\r\n    const history = useHistory();\r\n\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2>{TradeName}</h2>\r\n            <Areas redirectUser={redirectUser} history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateArea = ({redirectUser}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer);\r\n    const {data: {Id}}= areaReducer;\r\n    const {companyId, areaId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/areas`} className=\"text-muted\">Areas</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{!Id ? 'Crear Area' : 'Actualizar Area'} </small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Puesto</h5>\r\n                            <Area  areaId={areaId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/areas`} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n","import * as ComponentCompanies from './Company'\r\nimport * as ComponentJobDetails from './JobDetails'\r\nimport * as ComponentPosition from './Position'\r\nimport * as ComponentPersonDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\nexport const Company = ComponentCompanies;\r\nexport const JobDetails = ComponentJobDetails;\r\nexport const Position = ComponentPosition;\r\nexport const PersonDetail = ComponentPersonDetail;\r\nexport const Area = ComponentArea;","import {Company, ListOfCompanies as Companies} from '../../components-company'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\n\r\nimport {Company as CompanyTemplate} from '../templates'\r\n\r\nimport {ListOfHistory} from '../../config-components'\r\n\r\nexport const ListOfCompanies = ({reDirect, history}) =>{\r\n    return (\r\n        <Companies reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCompany = () => {\r\n    const {userId, companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <ListOfHistory.Li\r\n                    items={[\r\n                        {href: '/admin-dashboard', name: 'Inicio'},\r\n                        {href: '/admin-dashboard/companies', name: 'Empresas'},\r\n                        {href: '', name: 'Empresas', last: true},\r\n                    ]}\r\n                />\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Crea una Empresa</h5>\r\n                                <Company companyId={companyId} userId={userId} history={history} reDirect={'/admin-dashboard/company'} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Indicators = () => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const {companyId} = useParams();\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <CompanyTemplate.Indicators \r\n                    user={'/admin-dashboard/company'} \r\n                    companyId={companyId} \r\n                    hrefBase={'/admin-dashboard'}\r\n                />\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row } from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\nimport {Position as TemplatePosition} from '../templates'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfPositions = () =>{\r\n    return (\r\n        <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <TemplatePosition.ListOfPositions \r\n                reDirect={`/admin-dashboard/company/companyId/update-position/positionId`}\r\n                reDirectBase='/admin-dashboard/company/companyId'\r\n                reDirectCreate='/admin-dashboard/company/companyId/create-position'\r\n            />\r\n        </AdminDashboardPages.TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = () => {\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/admin-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect={`/admin-dashboard/company/companyId/positions`}\r\n                    />\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import {OrganizationChart, UpdateChild, ViewOrganizationChart} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {AdminDashboardPages} from './'\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/admin-dashboard/company/${companyId}`}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/admin-dashboard/company/${companyId}/organization-chart`}/>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport { PersonDetail as TemplatesPersonalDetail} from '../templates'\r\n\r\n\r\nexport const ListOfPersonDetails = () =>{\r\n    \r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/admin-dashboard' />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport {Area as TemplateArea} from '../templates'\r\n\r\nexport const ListOfAreas = () =>{\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplateArea.ListOfAreas redirectUser={'/admin-dashboard'} />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentUsers from './Users'\r\nimport * as ComponentSections from './Sections'\r\nimport * as ComponentCourses from './Courses'\r\nimport * as ComponentProducts from './Products'\r\nimport * as ComponentDashboard from './Dashboard'\r\nimport * as ComponentCompany from './Company'\r\nimport * as ComponentPositions from './Position'\r\nimport * as ComponentOrganizationChart from './OrganizationChart'\r\nimport * as ComponentPersonalDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\n\r\nexport const AdminUsersPages = ComponentUsers;\r\nexport const AdminSectionsPages = ComponentSections;\r\nexport const AdminCoursesPages = ComponentCourses;\r\nexport const AdminProductPages = ComponentProducts;\r\nexport const AdminDashboardPages = ComponentDashboard;\r\nexport const AdminCompanyPages = ComponentCompany;\r\nexport const AdminPositionsPages = ComponentPositions;\r\nexport const AdminOrganizationChart = ComponentOrganizationChart;\r\nexport const AdminPersonalDetail = ComponentPersonalDetail;\r\nexport const AdminArea = ComponentArea;\r\n\r\n\r\n\r\n","import {ViewOrganizationChart, UpdateChild} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {DashboardUserTemplate} from './'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/user-dashboard/company/${companyId}`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/user-dashboard/company/${companyId}/organization-chart`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react' \r\nimport {Row} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {Container} from 'reactstrap'\r\nimport {Navbars} from '../../config-components'\r\nimport {\r\n    Company, \r\n    Position as TemplatePosition, \r\n    PersonDetail as TemplatesPersonalDetail,\r\n    Area as TemplateArea\r\n} from '../templates'\r\nimport * as ComponentsOrganizatioChart from './OrganizationChart'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { } from '../templates'\r\n\r\n\r\nexport const DashboardUserTemplate = ({children}) => {\r\n    return(\r\n            <>\r\n                <Navbars.User />\r\n                <section className=\"bg-light h-100 py-6\">\r\n                    <Container>\r\n                        {children}\r\n                    </Container>\r\n                </section>\r\n            </>\r\n    )\r\n}\r\n\r\nexport const DashboardUserPage = () => {\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <Company.Indicators user={`/user-dashboard/company`} companyId={companyId} hrefBase={'/user-dashboard'}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPositionPage = () =>{\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatePosition.ListOfPositions \r\n                    reDirect={`/user-dashboard/company/companyId/update-position/positionId`}\r\n                    reDirectBase='/user-dashboard/company/companyId'\r\n                    reDirectCreate='/user-dashboard/company/companyId/create-position'\r\n                />\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserCreatePosition = () =>{\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/user-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect='/user-dashboard/company/companyId/positions'\r\n                    />\r\n                </Row>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPersonDetails = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/user-dashboard' />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfAreas = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplateArea.ListOfAreas redirectUser={'/user-dashboard'} />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserOrganizationChart = ComponentsOrganizatioChart;","// Imports de react.\r\nimport React from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\n// Imports del landing page\r\nimport * as Landings from './pages/landing'\r\nimport {NotFoundPage} from './pages/NotFoundPage'\r\n\r\n// Imports de PageSessions.\r\n//import {LoginPage} from './pages/Login'\r\nimport {\r\n  LoginPage,\r\n  SignUpPage,\r\n  ForgotPassword,  \r\n  CheckYourAccount,\r\n  ChangePasswordPage\r\n} from './pages/session'\r\n\r\n// Imports de Páginas del administrador\r\nimport {\r\n  AdminUsersPages, \r\n  AdminSectionsPages, \r\n  AdminCoursesPages,\r\n  AdminProductPages,\r\n  AdminDashboardPages,\r\n  AdminCompanyPages,\r\n  AdminPositionsPages,\r\n  AdminOrganizationChart,\r\n  AdminPersonalDetail,\r\n  AdminArea\r\n}from './pages/admin'\r\n\r\n/* Imports de Páginas de usario */\r\nimport {\r\n  DashboardUserPage,\r\n  UserOrganizationChart,\r\n  UserListOfPositionPage,\r\n  UserCreatePosition,\r\n  UserListOfPersonDetails,\r\n  UserCreatePersonDetail,\r\n  UserUpdatePersonDetail,\r\n  UserListOfAreas,\r\n  UserCreateArea,\r\n  UserUpdateArea\r\n} from './pages/user'\r\n\r\nimport {OrganizationChart} from './components-organization-chart'\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter >\r\n        <Switch>\r\n          {/* Páginas de Home */}\r\n          <Route  exact path=\"/\" component={Landings.SoftwareAgency}></Route>\r\n          <Route  exact path=\"/products\" component={Landings.Products}></Route>\r\n\r\n         \r\n\r\n          {/* Páginas para el manejo de sesión */}\r\n          <Route  exact path=\"/login\" component={LoginPage}></Route>\r\n          <Route  exact path=\"/sign-up\" component={SignUpPage}></Route>\r\n          <Route  exact path=\"/forgot-password\" component={ForgotPassword}></Route>\r\n          <Route  exact path=\"/check-your-account\" component={CheckYourAccount}></Route>\r\n          <Route  exact path=\"/change-password/:code/:email\" component={ChangePasswordPage}></Route>\r\n  \r\n          {/* Páginas para el admin */}\r\n          <Route  exact path=\"/admin-dashboard\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard/:indicator\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-user/:userId\" component={AdminUsersPages.ReadUser}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-admin/:userId\" component={AdminUsersPages.ReadAdmin}></Route>\r\n          { /* crud empresas */ }\r\n          <Route  exact path=\"/admin-dashboard/create-company/:userId\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/user/create-company\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/user/upadate-company/:companyId\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId\" component={AdminCompanyPages.Indicators}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/positions\" component={AdminPositionsPages.ListOfPositions}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-position\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-position/:positionId\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={AdminOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart/node/:nodeId\" component={AdminOrganizationChart.UpdateCurrent}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/employees\" component={AdminPersonalDetail.ListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-personal-detail\" component={AdminPersonalDetail.CreatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={AdminPersonalDetail.UpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/areas\" component={AdminArea.ListOfAreas}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-area\" component={AdminArea.CreateArea}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-area/:areaId\" component={AdminArea.UpdateArea}></Route>\r\n\r\n         \r\n          {/* <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={OrganizationChart}></Route> */}\r\n\r\n          <Route  exact path=\"/admin-dashboard/product/:productId/:section\" component={AdminProductPages.EditProduct}></Route>\r\n          { /* crud videos para admins */ }\r\n          <Route  exact path=\"/admin-dashboard/course/:courseId\" component={AdminCoursesPages.EditCourse}></Route>\r\n          <Route  exact path=\"/admin-dashboard/section/:courseId\" component={AdminSectionsPages.CreateSection}></Route>\r\n          <Route exact path=\"/player/watch-class/:productId/:courseId\" component={AdminCoursesPages.WhatchCourse}/>\r\n\r\n          {/* Páginas para dashboard de usuarios */}\r\n          <Route  exact path=\"/user-dashboard/company/:companyId\" component={DashboardUserPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/organization-chart\" component={UserOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/positions\" component={UserListOfPositionPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-position\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-position/:positionId\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/employees\" component={UserListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-personal-detail\" component={UserCreatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={UserUpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/areas\" component={UserListOfAreas}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-area\" component={UserCreateArea}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-area/:areaId\" component={UserUpdateArea}></Route>\r\n\r\n          <Route  exact path=\"/organigrama-prueba\" component={OrganizationChart}></Route>\r\n\r\n\r\n          {/* Vista pare ver un video de un curso */}\r\n          <Route path=\"*\" component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION\r\n} from \"./loginTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    roles: localStorage.getItem(\"role\"),\r\n    grant_type: \"password\",\r\n    username: \"\",\r\n    password: \"\",\r\n    access_token: \"\",\r\n  },\r\n  validations: {\r\n    username: \"\",\r\n    password: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          roles: localStorage.getItem(\"role\"),\r\n          grant_type: \"password\",\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          grant_type: \"password\",\r\n          roles: action.payload.roles,\r\n          username: action.payload.username,\r\n          password: action.payload.password,\r\n          access_token: action.payload.access_token,\r\n          userName: action.payload.userName,\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: \"\",\r\n    Roles: \"\",\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"email\",\r\n    TypeUser: '',\r\n    Idd: \"\",\r\n  },\r\n  validations: {\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"\",\r\n    Idd: \"\",\r\n  },\r\n};\r\n\r\nconst reducer =  (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: \"\",\r\n          Roles: \"\",\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser:\"\"\r\n        },\r\n      };\r\n    case SIGN_UP_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          Roles: action.payload.Roles,\r\n          UserName: action.payload.UserName,\r\n          PhoneNumber: action.payload.PhoneNumber,\r\n          Email: action.payload.Email,\r\n          Password: action.payload.Password,\r\n          ConfirmPassword: action.payload.ConfirmPassword,\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: action.payload.Idd,\r\n          TypeUser: action.payload.TypeUser\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n      };\r\n\r\n      case SIGN_UP_PRELOADED_DATA:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Roles: action.payload.Roles,\r\n            UserName: action.payload.UserName,\r\n            PhoneNumber: action.payload.PhoneNumber,\r\n            Email: action.payload.Email,\r\n            Password: action.payload.Password,\r\n            ConfirmPassword: action.payload.ConfirmPassword,\r\n            ValidateByPhoneOrEmail: \"email\",\r\n            Idd: action.payload.Idd,\r\n            TypeUser: action.payload.TypeUser\r\n          },\r\n          validations: {\r\n            UserName: \"\",\r\n            PhoneNumber: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            ValidateByPhoneOrEmail: \"\",\r\n            Idd: \"\",\r\n            TypeUser: \"\"\r\n          },\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n  } from \"./changePasswordTypes\";\r\n\r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      phoneOrEmail: '',\r\n      Code:'',\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n      usernameOrEmailOrPhoneNumber:'',\r\n    },\r\n    validations: {\r\n      phoneOrEmail: \"\",\r\n      Code:true,\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n    },\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_PASSWORD_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_USER:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              cargando: false,\r\n              error: \"\",\r\n            },\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_CRUD,\r\n    COMPANIES_LIST,\r\n    COMPANY_HANDLE_VALIDATION\r\n  } from \"./companyTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity: '',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      \r\n    },\r\n    validations: {\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity:'',\r\n      fileCover: '',\r\n      UserId:'',\r\n    },\r\n    list_companies: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COMPANY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COMPANY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity: '',\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity:'',\r\n            fileCover: '',\r\n            UserId:'',\r\n          },\r\n          list_companies: [],\r\n        };\r\n      case COMPANY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            UserId: action.payload.UserId,\r\n            TradeName:  action.payload.TradeName,\r\n            BusinessName: action.payload.BusinessName,\r\n            BusinessActivity:  action.payload.BusinessActivity,\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: true,\r\n            BusinessName: true,\r\n            BusinessActivity: true,\r\n            fileCover: '',\r\n            UserId:'',\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COMPANIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_companies: action.payload,\r\n        };\r\n  \r\n      case \"company_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_CRUD,\r\n    POSITIONS_LIST,\r\n    POSITION_HANDLE_VALIDATION\r\n  } from \"./positionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      Description: \"\",\r\n      Description2: \"\",\r\n      CompanyId:'',\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      Description2: \"\",\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    list_positions: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case POSITION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case POSITION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            Description: \"\",\r\n            Description2: \"\",\r\n            CompanyId:'',\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Description2: \"\",\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          list_positions: [],\r\n        };\r\n      case POSITION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            Description: action.payload.Description,\r\n            Description2: action.payload.Description2,\r\n            CompanyId: action.payload.CompanyId,\r\n            Objective: action.payload.Objective,\r\n            Knowledge: action.payload.Knowledge,\r\n            Salary: action.payload.Salary\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Description: action.payload.Description ? true : '',\r\n            Description2: action.payload.Description2 ? true : '',\r\n            Objective: action.payload.Objective ? true: '',\r\n            Knowledge: action.payload.Knowledge ? action.payload.Knowledge: '',\r\n            Salary: action.payload.Salary ? true: ''\r\n          },\r\n          list_positions: [],\r\n        };\r\n  \r\n      case POSITIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_positions: action.payload,\r\n        };\r\n  \r\n      case \"position_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_CRUD,\r\n    ORGANIZATION_CHARTS_LIST,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n    ORGANIZATION_CHART_CHILD\r\n  } from \"./organizationChartTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated: '',\r\n      PositionId: '',\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n      Area: '',\r\n      CompanyId:0,\r\n      PositionChartId:0,\r\n      PositionName:'',\r\n      Objective:'',\r\n      PersonName: '',\r\n      ChartTree1:[],\r\n    },\r\n    validations: {\r\n      PositionId: \"\",\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n    },\r\n    list_organization_chart: [],\r\n    read_child: {}\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ORGANIZATION_CHART_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated: '',\r\n            PositionId: '',\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n            Area:'',\r\n            CompanyId:0,\r\n            PositionChartId:0,\r\n            PositionName:'',\r\n            Objective:'',\r\n            PersonName: '',\r\n            ChartTree1:[],\r\n\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n          read_child: {}\r\n\r\n        };\r\n      case ORGANIZATION_CHART_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id, \r\n            DateCreated: action.payload.DateCreated,\r\n            PositionId:  action.payload.PositionId,\r\n            PersonDetailId: action.payload.PersonDetailId,\r\n            AreasId: action.payload.AreasId,\r\n            Area: action.payload.Area,\r\n            CompanyId: action.payload.CompanyId,\r\n            PositionChartId:action.payload.PositionChartId,\r\n            PositionName:action.payload.PositionName,\r\n            Objective: action.payload.Objective,\r\n            PersonName: action.payload.PersonName,\r\n            ChartTree1: action.payload.ChartTree1,\r\n          },\r\n          validations: {\r\n            PositionId: '',\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n      case ORGANIZATION_CHARTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_organization_chart: action.payload,\r\n        };\r\n      case ORGANIZATION_CHART_CHILD:\r\n        debugger\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          read_child: action.payload[0],\r\n        };\r\n  \r\n      case \"organization_chart_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_CRUD,\r\n    PERSONAL_DETAILS_LIST,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      LastName: \"\",\r\n      SecondLastName:'',\r\n      CompanyId:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:'',\r\n      Competencias:'',\r\n      IMSS:'',\r\n      CURP:'',\r\n      Status:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      LastName:'',\r\n      SecondLastName:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:'',\r\n      Competencias:'',\r\n      IMSS:'',\r\n      CURP:'',\r\n      Status:'',\r\n    },\r\n    list_personal_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PERSONAL_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            LastName: \"\",\r\n            SecondLastName:'',\r\n            CompanyId:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:'',\r\n            Competencias:'',\r\n            IMSS:'',\r\n            CURP:'',\r\n            Status:'',\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            LastName:'',\r\n            SecondLastName:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:'',\r\n            Competencias:'',\r\n            IMSS:'',\r\n            CURP:'',\r\n            Status:'',\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n      case PERSONAL_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            LastName:  action.payload.LastName,\r\n            SecondLastName: action.payload.SecondLastName,\r\n            CompanyId: action.payload.CompanyId,\r\n            RFC: action.payload.RFC,\r\n            Birthdate: action.payload.Birthdate?.slice(0, 10),\r\n            Gender:action.payload.Gender,\r\n            Competencias: action.payload.Competencias,\r\n            IMSS: action.payload.IMSS,\r\n            CURP: action.payload.CURP,\r\n            Status: action.payload.Status,\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            LastName: action.payload.LastName ? true : '',\r\n            SecondLastName: action.payload.SecondLastName ? true : '',\r\n            RFC: action.payload.RFC ? true : '',\r\n            Birthdate: action.payload.Birthdate ? true : '',\r\n            Gender: action.payload.Gender ? true : '',\r\n            Competencias: action.payload.Competencias ? true: '',\r\n            IMSS: action.payload.IMSS ? true: '',\r\n            CURP: action.payload.CURP ? true: '',\r\n            Status: action.payload.Status ? true: '',\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n  \r\n      case PERSONAL_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_personal_details: action.payload,\r\n        };\r\n  \r\n      case \"personal_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_CRUD,\r\n    AREAS_LIST,\r\n    AREA_HANDLE_VALIDATION\r\n  } from \"./areaTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      CompanyId:'',\r\n      Type:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Type:'',\r\n    },\r\n    list_areas: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case AREA_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case AREA_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case AREA_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            CompanyId: \"\",\r\n            Type:'',\r\n           \r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Type:'',\r\n          },\r\n          list_areas: [],\r\n        };\r\n      case AREA_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CompanyId:  action.payload.CompanyId,\r\n            Type:  action.payload.Type,\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Type: action.payload.Type ? true : '',\r\n          },\r\n          list_areas: [],\r\n        };\r\n  \r\n      case AREAS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_areas: action.payload,\r\n        };\r\n  \r\n      case \"area_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_CRUD,\r\n    JOB_DETAILS_LIST,\r\n    JOB_DETAIL_HANDLE_VALIDATION\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      PersonDetailId:'',\r\n      DateAdmission: \"\",\r\n      Contract:'',\r\n      Benefits:'',\r\n      IntegratedSalary:'',\r\n      DailySalary:'',\r\n      Type:'',\r\n      CompanyId:'',\r\n      AreaId:''\r\n    },\r\n    validations: {\r\n      DateAdmission: \"\",\r\n      Contract:'',\r\n      Benefits:'',\r\n      IntegratedSalary:'',\r\n      DailySalary:'',\r\n      Type:'',\r\n      AreaId:''\r\n    },\r\n    list_job_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case JOB_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case JOB_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PersonDetailId:'',\r\n            DateAdmission:'',\r\n            Contract:'',\r\n            Benefits:'',\r\n            IntegratedSalary:'',\r\n            DailySalary:'',\r\n            Type:'',\r\n            CompanyId:'',\r\n            AreaId:''\r\n          },\r\n          validations: {\r\n              DateAdmission: \"\",\r\n              Contract:'',\r\n              Benefits:'',\r\n              IntegratedSalary:'',\r\n              DailySalary:'',\r\n              Type:'',\r\n              AreaId:''\r\n          },\r\n          list_job_details: [],\r\n        };\r\n      case JOB_DETAIL_CRUD:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PersonDetailId: action.payload.PersonDetailId,\r\n            DateAdmission: action.payload.DateAdmission?.slice(0, 10),\r\n            Contract: action.payload.Contract,\r\n            Benefits: action.payload.Benefits,\r\n            IntegratedSalary: action.payload.IntegratedSalary,\r\n            DailySalary: action.payload.DailySalary,\r\n            Type: action.payload.Type,\r\n            CompanyId: action.payload.CompanyId,\r\n            AreaId: action.payload.AreaId\r\n          },\r\n          validations: {\r\n              DateAdmission: action.payload.DateAdmission ? true : '',\r\n              Contract: action.payload.Contract ? true : '',\r\n              Benefits: action.payload.Benefits ? true : '',\r\n              IntegratedSalary: action.payload.IntegratedSalary ? true : '',\r\n              DailySalary: action.payload.DailySalary ? true : '',\r\n              Type: action.payload.Type ? true : '',\r\n              AreaId: action.payload.AreaId ? true : '',\r\n          },\r\n          \r\n          list_job_details: [],\r\n        };\r\n  \r\n      case JOB_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_job_details: action.payload,\r\n        };\r\n  \r\n      case \"job_detail_put\":\r\n        debugger\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_CRUD,\r\n    CATEGORIES_LIST,\r\n    CATEGORY_HANDLE_VALIDATION\r\n  } from \"./categoryTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_VALIDATION: \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories: [],\r\n        };\r\n      case CATEGORY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories_products: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories_products: [],\r\n        };\r\n      case CATEGORY_PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories_products: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_CRUD,\r\n    PRODUCTS_LIST,\r\n    PRODUCT_HANDLE_VALIDATION\r\n  } from \"./productTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n      Price: '',\r\n      ProductCategoryId:'',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      Categories: []\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      ProductCategoryId:'',\r\n      fileCover: ''\r\n    },\r\n    list_products: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n            Price: '',\r\n            ProductCategoryId:'',\r\n            Blobs:[],\r\n            Categories: [],\r\n            fileCover: ''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Price:'',\r\n            ProductCategoryId:'',\r\n            fileCover: ''\r\n          },\r\n          list_products: [],\r\n        };\r\n      case PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n            Price: action.payload.Price,\r\n            ProductCategoryId:action.payload.ProductCategoryId,\r\n            Blobs: action.payload.Blobs,\r\n            Categories: action.payload.Categories\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n            Price: true,\r\n            ProductCategoryId: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_products: action.payload,\r\n        };\r\n  \r\n      case \"product_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_CRUD,\r\n    PRODUCT_DETAILS_LIST,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      SubTitle:'',\r\n      Description:'',\r\n      ProductId: '',\r\n      BlobId: '',\r\n      fileZip: '',\r\n      Blob: {}\r\n    },\r\n    validations: {\r\n        SubTitle:'',\r\n        Description:'',\r\n        fileZip: ''\r\n    },\r\n    list_product_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            SubTitle:'',\r\n            Description:'',\r\n            ProductId: '',\r\n            BlobId: '',\r\n            fileZip: '',\r\n            Blob: {}\r\n          },\r\n          validations: {\r\n              SubTitle:'',\r\n              Description:'',\r\n              fileZip: ''\r\n          },\r\n          list_product_details: [],\r\n        };\r\n      case PRODUCT_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            SubTitle:action.payload.SubTitle,\r\n            Description:action.payload.Description,\r\n            ProductId: action.payload.ProductId,\r\n            BlobId: action.payload.BlobId,\r\n            Blob: action.payload.Blob\r\n          },\r\n          validations: {\r\n              SubTitle:true,\r\n              Description:true,\r\n              fileZip: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCT_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_product_details: action.payload,\r\n        };\r\n  \r\n      case \"product_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","export const COURSE_CARGANDO = \"course_cargando\";\r\nexport const COURSE_ERROR = \"course_error\";\r\nexport const COURSE_HANDLE_CHANGE = \"course_handle_change\";\r\nexport const COURSE_CLEAN_STATE = \"course_clean_state\";\r\nexport const COURSE_CRUD = \"course_crud\";\r\nexport const COURSES_LIST = \"courses_list\";\r\nexport const COURSE_HANDLE_VALIDATION = \"course_handle_validation\";","import {\r\n    COURSE_CARGANDO,\r\n    COURSE_ERROR,\r\n    COURSE_HANDLE_CHANGE,\r\n    COURSE_CLEAN_STATE,\r\n    COURSE_CRUD,\r\n    COURSES_LIST,\r\n    COURSE_HANDLE_VALIDATION\r\n  } from \"./courseTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    list_courses: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COURSE_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COURSE_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          list_courses: [],\r\n        };\r\n      case COURSE_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COURSES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_courses: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    list_sections: [],\r\n    list_sections_select: []\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case SECTION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case SECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name: \"\",\r\n            CourseId: \"\"\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            CourseId:'',\r\n          },\r\n          list_sections: [],\r\n          list_sections_select: []\r\n        };\r\n      case SECTION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CourseId:action.payload.CourseId,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            CourseId:true,\r\n          },\r\n          list_brands: [],\r\n          list_sections_select: []\r\n        };\r\n  \r\n      case SECTIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections: action.payload,\r\n        };\r\n      case SECTIONS_SELECT:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections_select: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_CRUD,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    ADMIN_USERS_LIST,\r\n  } from \"./adminTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      cargandoUsername: false,\r\n      errorUsername: '',\r\n      cargandoEmail: false,\r\n      errorEmail: '',\r\n      cargandoPhone: false,\r\n      errorPhone: '',\r\n      cargandoPassword: false,\r\n      errorPassword: '',\r\n      cargandoValidateAccount: '',\r\n      errorValidateAccount: '',\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: '',\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    validations: {\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    list_users: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ADMIN_CARGANDO:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload]: true,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            errorValidateAccount: ''\r\n          },\r\n        };\r\n      case ADMIN_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            cargandoValidateAccount: false,\r\n            [action.payload.typeError]: action.payload.messageError,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n              ? [action.payload.e.files[0]]\r\n              : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_VALIDATION:\r\n        return {\r\n            ...state,\r\n            validations: {\r\n              ...state.validations,\r\n              [action.payload.name]: action.payload.isInvalid,\r\n            },\r\n          };\r\n      case ADMIN_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {},\r\n          validations: {},\r\n        };\r\n      case ADMIN_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload.cargando]: false,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            UserName: action.payload.UserName ? action.payload.UserName : '',\r\n            Email: action.payload.Email ? action.payload.Email : '',\r\n            EmailConfirmed: action.payload.EmailConfirmed ? action.payload.EmailConfirmed : '',\r\n            PhoneNumber: action.payload.PhoneNumber ? action.payload.PhoneNumber : '',\r\n          },\r\n          validations: {\r\n            UserName: true,\r\n            Email: true,\r\n            EmailConfirmed: '',\r\n            PhoneNumber: '',\r\n            Password: '',\r\n            ConfirmPassword: '',\r\n          },\r\n        };\r\n  \r\n      case ADMIN_USERS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          list_users: action.payload,\r\n        };\r\n  \r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              errorUsername: '',\r\n              errorEmail: '',\r\n              error: \"\",    \r\n              errorPhone: '',\r\n              errorPassword: '',\r\n              cargando: false,\r\n              cargandoUsername: false,\r\n              cargandoEmail: false,\r\n              cargandoPhone: false,\r\n              cargandoPassword: false,\r\n              errorValidateAccount: '',\r\n              cargandoValidateAccount: false\r\n            },\r\n          };\r\n  \r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    count_products: 0,\r\n    count_courses: 0,\r\n    count_users: 0,\r\n    count_admins: 0,\r\n    count_companies: 0,\r\n    count_positions: 0,\r\n    count_personal_details: 0,\r\n    count_areas: 0\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ANALYTICS_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ANALYTICS_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n  \r\n      case ANALYTICS_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: 0,\r\n        };\r\n  \r\n      case ANALYTICS_COUNT_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_COURSES:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_courses: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_USERS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_users: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_ADMINS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_admins: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_COMPANIES:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_companies: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_POSITIONS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_positions: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_PERSONAL_DETAILS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_personal_details: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_AREAS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_areas: action.payload,\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: 0,\r\n    UserId: \"\",\r\n    DateCreated: \"\",\r\n    DateModified: \"\",\r\n    BlobName: \"\",\r\n    BlobTypeId: \"\",\r\n    ContainerName: \"\",\r\n    IsPrivate: true,\r\n    Uri: null,\r\n    BlobType: null,\r\n    Brand_Blob: [],\r\n    Product_Blob: [],\r\n    BlogPosts: [],\r\n    AspNetUsers: [],\r\n  },\r\n  validations: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case BLOB_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case BLOB_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case BLOB_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n\r\n    case BLOB_HANDLE_VALIDATION:\r\n      let messageError = \"\";\r\n      if (action.payload.props.valueInput === \"\") {\r\n        messageError = \"El campo no puede ir vacio\";\r\n      }\r\n      if (action.payload.props.isInvalid !== \"\") {\r\n        messageError = action.payload.props.isInvalid;\r\n      }\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: messageError,\r\n        },\r\n      };\r\n    case BLOB_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: 0,\r\n          UserId: \"\",\r\n          DateCreated: \"\",\r\n          DateModified: \"\",\r\n          BlobName: \"\",\r\n          BlobTypeId: \"\",\r\n          ContainerName: \"\",\r\n          IsPrivate: true,\r\n          Uri: null,\r\n          BlobType: null,\r\n          Brand_Blob: [],\r\n          Product_Blob: [],\r\n          BlogPosts: [],\r\n          AspNetUsers: [],\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    case BLOB_CRUD:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          UserId: action.payload.UserId,\r\n          DateCreated: action.payload.DateCreated,\r\n          DateModified: action.payload.DateModified,\r\n          BlobName: action.payload.BlobName,\r\n          BlobTypeId: action.payload.BlobTypeId + \"\",\r\n          ContainerName: action.payload.ContainerName,\r\n          IsPrivate: action.payload.IsPrivate,\r\n          Uri: action.payload.Uri,\r\n          BlobType: action.payload.BlobType,\r\n          Brand_Blob: action.payload.Brand_Blob,\r\n          Product_Blob: action.payload.Product_Blob,\r\n          BlogPosts: action.payload.BlogPosts,\r\n          AspNetUsers: action.payload.AspNetUsers,\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","// Imports de redux.\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Components-session.\r\nimport loginReducer from \"../components-session/reducer-login/loginReducer\";\r\nimport signUpReducer from \"../components-session/sign-up-reducer/signUpReducer\";\r\nimport changePasswordReducer from \"../components-session/change-password/reducer/changePasswordReducer\";\r\n\r\n// Components\r\nimport companyReducer from '../components-company/reducer/companyReducer'\r\nimport positionReducer from '../components-position/reducer/positionReducer'\r\nimport organizationChartReducer from '../components-organization-chart/reducer/organizationChartReducer'\r\nimport personalDetailReducer from '../components-personal-detail/reducer/personalDetailReducer'\r\nimport areaReducer from '../components-area/reducer/areaReducer'\r\nimport jobDetailReducer from '../components-job-detail/reducer/jobDetailReducer'\r\n\r\n// Components que tienen que ver con producto.\r\nimport categoryReducer from '../components-category/reducer/categoryReducer'\r\nimport categoryProductReducer from '../components-category-product/reducer/categoryProductReducer'\r\nimport productReducer from '../components-product/reducer/productReducer'\r\nimport productDetailReducer from '../components-product-details/reducer/productDetailReducer'\r\n\r\n\r\n// Componentes que tienen que ver con cursos.\r\nimport courseReducer from '../components-course/reducer/courseReducer'\r\nimport sectionReducer from '../components-section/reducer/sectionReducer'\r\n\r\n// Componentes de administrador.\r\nimport adminReducer from '../components-admin/reducer/adminReducer'\r\n// Components de analiticos.\r\nimport analyticsReducer from '../components-analytics/reducer/analyticsReducer'\r\n\r\n// Componentes de blobs.\r\nimport blobReducer from '../components-blob/blob-reducer/blobReducer'\r\n\r\n// Reducers.\r\nexport default combineReducers({\r\n    // Reducers de sesión.\r\n    loginReducer,\r\n    changePasswordReducer,\r\n    signUpReducer,\r\n    // Components.\r\n    companyReducer,\r\n    positionReducer,\r\n    organizationChartReducer,\r\n    personalDetailReducer,\r\n    categoryReducer,\r\n    categoryProductReducer,\r\n    productReducer,\r\n    productDetailReducer,\r\n    areaReducer,\r\n    jobDetailReducer,\r\n    // Componentes que tienen que ver con cursos.\r\n    courseReducer,\r\n    sectionReducer,\r\n    // Componentes de administrador.\r\n    adminReducer,\r\n    // Componentes de analiticos.\r\n    analyticsReducer,\r\n    // Componentes de blobs\r\n    blobReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './scss/app.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Imports de components-api.\r\nimport {setPathApi} from './components-api/ConfigApi';\r\n\r\n// Imports de redux.\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// Google Fonts\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Poppins:400,600', 'sans-serif']\r\n  }\r\n});\r\n\r\n// Store de reducers.\r\nconst store = createStore(reducers, {}, composeWithDevTools(applyMiddleware(reduxThunk)));\r\n\r\n// Configuración de la ruta del api.\r\nsetPathApi();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n      <App />\r\n    {/* </React.StrictMode> */}\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}