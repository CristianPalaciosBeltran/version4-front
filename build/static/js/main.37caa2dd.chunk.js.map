{"version":3,"sources":["img/product.jpg","img/cristian.jpg","img/Jesus.jpg","img/version-4-logo.svg","img/organigrama.jpeg","img/puestos.jpeg","img/descripciones.jpeg","img/procesos.jpeg","img/index.js","config-components/Logos.js","components-api/ConfigApi.js","config-components/Navbars.js","config-components/Cards.js","utils/Arrays.js","utils/index.js","config-components/DropDowns.js","components-api/ApiResponses.js","config-components/Filter.js","components-api/index.js","config-components/Inputs.js","config-components/Modals.js","config-components/NotFound.js","config-components/RegularExpressions.js","config-components/Tabs.js","config-components/Lists.js","components-position/reducer/positionTypes.js","components-position/reducer/positionActions.js","components-position/Positions.js","components-position/Responsibilities.js","components-position/index.js","components-position/ListOfPositions.js","components-position/ReadPosition.js","components-organization-chart/reducer/organizationChartTypes.js","components-organization-chart/reducer/organizationChartActions.js","components-area/reducer/areaTypes.js","components-area/reducer/areaActions.js","components-organization-chart/OrganizationChart.js","components-personal-detail/reducer/personalDetailTypes.js","components-personal-detail/reducer/personalDetailActions.js","components-organization-chart/UpdateChild.js","components-organization-chart/ViewOrganizationChart.js","components-organization-chart/index.js","components-organization-chart/ReadChild.js","config-components/Collapse.js","config-components/ExternalLinks.js","config-components/ListOfHistory.js","config-components/index.js","img/hero-xs.png","img/vscode.svg","pages/landing/SoftwareAgency.js","components-product/ReadCardProduct.js","components-product/reducer/productTypes.js","components-product/reducer/productActions.js","components-product/CardProduct.js","components-product/ListOfCardProducts.js","components-product/ListOfProducts.js","components-category/reducer/categoryTypes.js","components-category/reducer/categoryActions.js","components-product/index.js","pages/landing/Products.js","pages/landing/index.js","pages/NotFoundPage.js","components-session/reducer-login/loginTypes.js","components-session/reducer-login/loginActions.js","components-company/reducer/companyTypes.js","components-company/reducer/companyActions.js","components-session/Login.js","components-session/sign-up-reducer/signUpTypes.js","components-session/sign-up-reducer/signUpActions.js","components-session/SignUp.js","components-session/change-password/reducer/changePasswordTypes.js","components-session/change-password/reducer/changePasswordActions.js","components-session/change-password/ChangePassword.js","components-session/change-password/ChangePasswordForUser.js","components-session/change-password/SendEmail.js","components-session/index.js","pages/session/index.js","components-analytics/reducer/analyticsTypes.js","components-analytics/reducer/analyticsActions.js","components-admin/Indicators.js","components-admin/reducer/adminTypes.js","components-admin/reducer/adminActions.js","components-admin/ListOfUsers.js","components-admin/UpdateUserInfo.js","components-admin/ValidateAccount.js","components-admin/SelectUser.js","components-admin/index.js","pages/admin/Users.js","components-section/reducer/sectionTypes.js","components-section/reducer/sectionActions.js","components-section/Section.js","components-section/ModalSections.js","components-category-product/reducer/categoryProductTypes.js","components-category-product/reducer/categoryProductActions.js","components-blob/blob-reducer/blobType.js","components-blob/blob-reducer/blobActions.js","components-blob/blobUtils.js","components-product/Product.js","components-product/ModalProducts.js","components-section/ListOfSections.js","components-section/index.js","components-section/CrudCourse.js","pages/admin/Dashboard.js","pages/admin/Sections.js","components-course/Course.js","components-course/ListOfCourses.js","components-player/Player.js","components-player/index.js","config-components/TabCourse.js","components-course/WatchClass.js","components-course/index.js","pages/admin/Courses.js","components-category-product/CategoryProduct.js","components-category-product/ListOfCategoriesOfProducts.js","components-category/Category.js","components-category/ModalCategory.js","components-product-details/reducer/productDetailsTypes.js","components-product-details/reducer/productDetailActions.js","components-product-details/ProductDetails.js","components-product-details/index.js","pages/admin/Products.js","components-company/Company.js","components-company/CompanyIndicators.js","components-company/index.js","components-company/ListOfCompanies.js","components-company/ChooseCompany.js","pages/templates/Company.js","components-job-detail/reducer/jobDetailTypes.js","components-job-detail/reducer/jobDetailActions.js","components-job-detail/JobDetails.js","components-job-detail/index.js","pages/templates/JobDetails.js","pages/templates/Position.js","components-personal-detail/ListOfPersonDetails.js","components-personal-detail/PersonDetail.js","components-personal-detail/index.js","pages/templates/PersonalDetail.js","components-area/ListOfAreas.js","components-area/Area.js","components-area/index.js","pages/templates/Area.js","pages/templates/index.js","pages/admin/Company.js","pages/admin/Position.js","pages/admin/OrganizationChart.js","pages/admin/PersonalDetail.js","pages/admin/Area.js","pages/admin/index.js","pages/user/OrganizationChart.js","pages/user/index.js","App.js","reportWebVitals.js","components-session/reducer-login/loginReducer.js","components-session/sign-up-reducer/signUpReducer.js","components-session/change-password/reducer/changePasswordReducer.js","components-company/reducer/companyReducer.js","components-position/reducer/positionReducer.js","components-organization-chart/reducer/organizationChartReducer.js","components-personal-detail/reducer/personalDetailReducer.js","components-area/reducer/areaReducer.js","components-job-detail/reducer/jobDetailReducer.js","components-category/reducer/categoryReducer.js","components-category-product/reducer/categoryProductReducer.js","components-product/reducer/productReducer.js","components-product-details/reducer/productDetailReducer.js","components-course/reducer/courseTypes.js","components-course/reducer/courseReducer.js","components-section/reducer/sectionReducer.js","components-admin/reducer/adminReducer.js","components-analytics/reducer/analyticsReducer.js","components-blob/blob-reducer/blobReducer.js","reducers/index.js","index.js"],"names":["Img","src","width","alt","className","ImgOrganigrama","Organigrama","ImgProcesos","Procesos","ImgPuestos","Puestos","ImgDescripciones","Descripciones","SvgLogo","Logo","ImgProduct","uri","ProductDefault","LogoNavbar","href","to","errorResponse","data","ModelState","Message","error_description","error","errorHandler","messageError","response","status","setLocalStorage","window","open","configHeader","token","localStorage","getItem","headers","Authorization","respuesta","undefined","removeItem","setItem","access_token","roles","userName","axios_api","a","header","apiMethod","body","config","pathApi","toLowerCase","axios","get","post","put","delete","signOff","e","preventDefault","setPathApi","route","Navbars","useState","isOpen","setIsOpen","Navbar","expand","Container","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","NavbarAdmin","light","NavbarBrand","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","User","companyId","useParams","color","CardAnalytics","title","number","icon","rTitle","rNumber","rIcon","Card","CardBody","fixSelect","id","name","list","length","map","item","Id","Name","Arrays","UtilsArrays","DropDownActions","children","labelButton","dropdownOpen","setDropdownOpen","Dropdown","toggle","prevState","Items","items","action","fixDropDown","area","Loader","rColor","activate","Spinner","Error","message","UseSearchItems","propertiesTable","searchByItem","setSearchItem","query","setQuery","React","useMemo","filteredSome","filter","res","property","includes","TableFilter","titlesTable","bodyTable","loading","hrefCreate","actions","rHrefCreate","Form","FormGroup","Input","type","placeholder","value","onChange","target","Table","handleAction","ApiResponses","ComponentApiResponses","useInputState","inputValue","inputChange","setInputChange","setOnChange","InputText","forName","classLabel","textLabel","isMandatory","classMandatory","inputType","inputName","inputId","placeHolder","maxLength","minLength","RE","validateRE","options","optionPlaceHolder","forgotPassword","xs","sm","md","lg","xl","classCol","rFor","rClassLabel","rTextLabel","rIsMandatory","rClassMandatory","rInputType","rInputName","rInputId","rPlaceHolder","rInputValue","rMaxLength","rMinLength","rRE","handleRE","match","re","Col","Label","for","valid","invalid","option","LastName","FormFeedback","validMessage","invalidMessage","InputEmail","label","rName","rLabel","RegularExpressions","RE_EMAIL","InputPassword","RE_PASSWORD","InputFile","ValidateInputs","validations","onValidate","i","props","isInvalid","Form1","textButton","textButtonLoading","handleValidations","Button","SwitchSome","some","setSome","ModalForm","content","modalTitle","state","Modal","ModalHeader","ModalBody","ModalDelete","ModalFooter","ModalOpenDelete","clean","modal","setToogle","toggleCancel","NotFound","RE_PASSWORD_MATCHES","RE_EMPTY","Tabs","children1","children2","children3","tab","activeTab","setActiveTab","tabs","classnames","active","TabContent","TabPane","tabId","Row","ShowListFromText","description","arrayDeCadenas","split","splice","POSITION_CARGANDO","POSITION_ERROR","POSITION_HANDLE_CHANGE","POSITION_CLEAN_STATE","POSITION_CRUD","POSITIONS_LIST","POSITION_HANDLE_VALIDATION","GetPositions","answer","GetPositionsByCompanyId","GetPosition","PutPosition","PostPosition","DeletePosition","positionHandleChange","dispatch","payload","positionHandleValidation","validation","positionCleanState","positionMethods","method","Position","componentDidMount","positionId","sendAction","positionReducer","DateCreated","Description","Description2","CompanyId","Objective","Knowledge","Salary","model","actionPosition","reDirect","history","setModal","push","this","api_actions","cargando","Component","mapDispatchToProps","positionActions","connect","ListOfResponsabilities","useSelector","Lists","ListOfDescriptions","ComponentPosition","ListOfPositions","create","useDispatch","useHistory","useEffect","list_positions","replace","ListFromPositions","ComponentsListFromPositions","ReadPosition","postionActions","ORGANIZATION_CHART_CARGANDO","ORGANIZATION_CHART_ERROR","ORGANIZATION_CHART_HANDLE_CHANGE","ORGANIZATION_CHART_CLEAN_STATE","ORGANIZATION_CHART_CRUD","ORGANIZATION_CHARTS_LIST","ORGANIZATION_CHART_HANDLE_VALIDATION","ORGANIZATION_CHART_CHILD","GetOrganizationCharts","GetOrganizationChart","GetPositionFromOrganization","positionChartId","GetOrganizationChartChild","GetOrganizationChartByCompanyId","PutOrganizationChart","PostOrganizationChart","DeleteOrganizationChart","organizationChartHandleChange","organizationChartHandleValidation","organizationChartCleanState","organizationChartMethods","padre","child","PositionChartId","createTree","tree","AreasId","Number","areaId","createTreeByArea","fatherPosition","createTreeByFatherPosition","hijos","ChartTree1","AREA_CARGANDO","AREA_ERROR","AREA_HANDLE_CHANGE","AREA_CLEAN_STATE","AREA_CRUD","AREAS_LIST","AREA_HANDLE_VALIDATION","GetAreas","GetAreasByCompanyId","GetAreasByCompanyIdWithoutTaken","GetAreasByCompanyIdTaken","GetArea","PutArea","PutAreaTaken","organizationChartId","PostArea","DeleteArea","areaHandleChange","areaHandleValidation","areaCleanState","areaMethods","cn","bem","StyledNode","styled","div","Modals","role","CardNode","employee","addChild","updateNode","deleteChild","rArea","style","textAlign","OrganizationChart","centerDiagram","element","container","current","scrollLeft","scrollWidth","clientHeight","createOrganigrama","organigrama","PositionName","PersonName","Area","PersonalDetail","createOrigin","addUpChild","parentId","nodeId","getOrganizationChartByArea","getCompleteOrganizationChart","createRef","organizationChartReducer","list_areas","areaReducer","hrefBase","innerRef","lineWidth","lineColor","lineBorderRadius","organizationChartActions","areaActions","PERSONAL_DETAIL_CARGANDO","PERSONAL_DETAIL_ERROR","PERSONAL_DETAIL_HANDLE_CHANGE","PERSONAL_DETAIL_CLEAN_STATE","PERSONAL_DETAIL_CRUD","PERSONAL_DETAILS_LIST","PERSONAL_DETAIL_HANDLE_VALIDATION","GetPersonalDetails","GetPersonalDetailsByCompanyId","GetPersonalDetail","PutPersonalDetail","PostPersonalDetail","DeletePersonalDetail","personalDetailHandleChange","personalDetailHandleValidation","personalDetailCleanState","personalDetailMethods","PositionId","PersonDetailId","actionOrganizationChart","list_personal_details","personalDetailReducer","personalDetailActions","isOpenAux","Node","watchChild","isFirst","DropDowns","ComponentOrganizationChart","UpdateChild","ComponentUpdateChild","ViewOrganizationChart","ComponentViewOrganizationChart","ReadChild","arrayDeCadenas2","read_child","Responsibilities","Competencias","Puntos","Birthdate","Date","getFullYear","substr","DateAdmission","Benefits","MonthlySalary","TotalSalary","CollapseSection","countVideos","videos","time","video","A","Li","last","ComponentDropDowns","Inputs","ComponentInputs","ComponentModals","ComponentNavbars","ComponentLists","ComponentRegularExpressions","ComponentTabs","ComponentCollapse","AWhatsapp","phone","ListOfHistory","ComponentListOfHistory","Landing","Heroxs","WebApps","class","ReadCardProduct","categories","category","Badge","PRODUCT_CARGANDO","PRODUCT_ERROR","PRODUCT_HANDLE_CHANGE","PRODUCT_CLEAN_STATE","PRODUCT_CRUD","PRODUCTS_LIST","PRODUCT_HANDLE_VALIDATION","GetProducts","GetProductsByCategoryId","GetProduct","PutProduct","includeBlobs","PostProduct","DeleteProduct","productHandleChange","productHandleValidation","productCleanState","productMethods","CardProduct","productId","productReducer","Blobs","fileCover","Categories","productActions","blobProduct","el","BlobTypeId","URL","createObjectURL","Uri","ListOfCardProducts","list_products","product","ListOfCategories","categoryProductId","openDeleteModal","idProduct","deleteProduct","cleanProduct","cancel","CATEGORY_CARGANDO","CATEGORY_ERROR","CATEGORY_HANDLE_CHANGE","CATEGORY_CLEAN_STATE","CATEGORY_CRUD","CATEGORIES_LIST","CATEGORY_HANDLE_VALIDATION","GetCategories","GetCategory","PutCategory","PostCategory","DeleteCategory","categoryHandleChange","categoryHandleValidation","categoryCleanState","categoryMethods","ComponentCardProduct","ComponentListOfCardProducts","ListOfProducts","ComponentListOfProducts","LandingProducts","SoftwareAgency","LandingSoftwareAgency","Products","NotFoundPage","LandingCourses","LOGIN_CARGANDO","LOGIN_ERROR","LOGIN_HANDLE_CHANGE","LOGIN_CLEAN_STATE","LOGIN_USER","LOGIN_HANDLE_VALIDATION","parserJson","obj","jsonSerialize","prop","slice","loginHandleChange","loginHandleValidation","loginCleanState","loginMethods","object","COMPANY_CARGANDO","COMPANY_ERROR","COMPANY_HANDLE_CHANGE","COMPANY_CLEAN_STATE","COMPANY_CRUD","COMPANIES_LIST","COMPANY_HANDLE_VALIDATION","GetCompanies","GetCompaniesByCompanyId","GetCompaniesByUser","GetCompany","PutCompany","PostCompany","DeleteCompany","companyHandleChange","companyHandleValidation","companyCleanState","companyMethods","LoginForm","ActionLogin","loginReducer","grant_type","username","password","ModelLogin","list_companies","companyReducer","handleRedirect","loginActions","companyActions","SIGN_UP_CARGANDO","SIGN_UP_ERROR","SIGN_UP_HANDLE_CHANGE","SIGN_UP_CLEAN_STATE","SIGN_UP_USER","SIGN_UP_HANDLE_VALIDATION","SIGN_UP_PRELOADED_DATA","signUpHandleChange","signUpHandleValidation","signUpCleanState","signUpPreloadedData","signUpMethods","SignUp","signUpReducer","UserName","Email","PhoneNumber","Password","ConfirmPassword","ValidateByPhoneOrEmail","Roles","TypeUser","ModelSignUp","RegExp","signUpActions","CHANGE_PASSWORD_CARGANDO","CHANGE_PASSWORD_ERROR","CHANGE_PASSWORD_HANDLE_CHANGE","CHANGE_PASSWORD_CLEAN_STATE","CHANGE_PASSWORD_USER","CHANGE_PASSWORD_HANDLE_VALIDATION","SetPassword","changePasswordHandleChange","changePasswordHandleValidation","changePasswordCleanState","changePasswordMethods","phoneOrEmail","ChangePassword","changePasswordReducer","NewPassword","ConfirmNewPassword","code","email","modelChangePassword","Code","usernameOrEmailOrPhoneNumber","readonly","changePasswordActions","ChangePasswordForUser","actionChangePasswordForUser","userId","UserId","SendEmail","Login","ComponentLogin","ComponentSignUp","ComponentChangePassword","ComponentVerifyAccount","ComponentSendEmail","ComponentChangePasswordForUser","LayoutSection","classSection","classContainer","classLogo","classCard","classCardBody","LoginPage","ForgotPassword","CheckYourAccount","ChangePasswordPage","SignUpPage","ANALYTICS_CARGANDO","ANALYTICS_ERROR","ANALYTICS_CLEAN_STATE","ANALYTICS_COUNT_PRODUCTS","ANALYTICS_COUNT_COURSES","ANALYTICS_COUNT_USERS","ANALYTICS_COUNT_ADMINS","ANALYTICS_COUNT_COMPANIES","ANALYTICS_COUNT_POSITIONS","ANALYTICS_COUNT_PERSONAL_DETAILS","ANALYTICS_COUNT_AREAS","analyticsCleanState","analyticsMethods","Indicators","analyticsReducer","count_companies","count_users","count_admins","cardAnalytics","analyticsActions","ADMIN_CARGANDO","ADMIN_ERROR","ADMIN_HANDLE_CHANGE","ADMIN_CLEAN_STATE","ADMIN_CRUD","ADMIN_HANDLE_VALIDATION","ADMIN_USERS_LIST","GetUserInfo","GetUsersInfo","roleName","PutContactInfo","ValidateAccount","adminHandleChange","adminHandleValidation","adminCleanState","adminMethods","typeError","ListOfUsers","adminReducer","adminActions","list_users","typeUser","UpdateContactInfo","closeModal","contactModel","NewUserName","NewTypeUser","NewPhoneNumber","NewEmail","EmailConfirmed","cargandoValidateAccount","Active","SelectUser","fix_select","ComponentsListOfUsers","UpdateUserInfo","ComponentUpdateUserInfo","ComponentValidateAccount","ComponentSelectUser","ListOfAdmins","CreateAdmin","ReadAdmin","CreateUser","ReadUser","SECTION_CARGANDO","SECTION_ERROR","SECTION_HANDLE_CHANGE","SECTION_CLEAN_STATE","SECTION_CRUD","SECTIONS_LIST","SECTIONS_SELECT","SECTION_HANDLE_VALIDATION","sectionHandleChange","sectionHandleValidation","sectionCleanState","sectionMethods","Section","sectionId","actionSection","sectionReducer","CourseId","courseId","sectionActions","CreateModalSection","sectionModal","EditSectionModal","section","SectionName","SectionId","DeleteSectionModal","deleteSectionAction","CATEGORY_PRODUCT_CARGANDO","CATEGORY_PRODUCT_ERROR","CATEGORY_PRODUCT_HANDLE_CHANGE","CATEGORY_PRODUCT_CLEAN_STATE","CATEGORY_PRODUCT_CRUD","CATEGORIES_PRODUCTS_LIST","CATEGORY_PRODUCT_HANDLE_VALIDATION","categoryProductHandleChange","categoryProductHandleValidation","categoryProductCleanState","categoryProductMethods","BLOB_CARGANDO","BLOB_ERROR","BLOB_HANDLE_CHANGE","BLOB_HANDLE_VALIDATION","BLOB_CLEAN_STATE","BLOB_CRUD","blobHandleChange","blobHandleValidation","blobCleanState","blobMethods","blob","createFormData","ContainerName","IsPrivate","FormData","set","append","Product","actionBlob","file","blobType","blobs","formData","blobReducer","Price","ProductCategoryId","actionProduct","fileCoverAnswer","list_categories_products","categoryProductReducer","categoryReducer","list_categories","categoryProductActions","blobActions","categoryActions","CreateProductModal","porductModal","hasSection","EditProductModal","DeleteProductModal","ListOfSections","cleanSection","list_sections","CrudCourse","Dashboard","indicator","page","AdminUsersPages","AdminProductPages","CreateProduct","AdminCompanyPages","ListOfCompanies","AdminSections","TemplateDashboardAdmin","CreateSection","EditCourse","Course","courseReducer","ListOfCourses","Player","url","height","controls","PlayerMedia","ComponentPlayer","TabCourse","WatchClass","stateProduct","ComponentCourse","ComponentListOfCourses","ComponentWatchClass","CreateCourse","WhatchCourse","CategoryProduct","actionCategoryProduct","ListOfCategoriesProducts","deleteAction","cleanModal","Category","categoryId","actionCategory","CreateCategoryModal","categoryModal","EditCategoryModal","DeleteCategoryModal","PRODUCT_DETAIL_CARGANDO","PRODUCT_DETAIL_ERROR","PRODUCT_DETAIL_HANDLE_CHANGE","PRODUCT_DETAIL_CLEAN_STATE","PRODUCT_DETAIL_CRUD","PRODUCT_DETAILS_LIST","PRODUCT_DETAIL_HANDLE_VALIDATION","GetProductDetails","GetProductDetail","GetProductDetailByProductId","PutProductDetail","PostProductDetail","DeleteProductDetail","productDetailHandleChange","productDetailHandleValidation","productDetailCleanState","productDetailMethods","ProductDetail","productDetailReducer","SubTitle","BlobId","ProductId","actionProductDetail","Blob","fileZip","fileZipAnswer","EditProduct","ProductSection","CategoryProducts","ListOfCategoriesOfProducts","Company","TradeName","BusinessName","BusinessActivity","users_list","count_positions","count_personal_details","count_areas","ComponentCompany","CompanyIndicators","ComponentCompanyIndicators","ChooseCompany","user","CompanyChoose","CreateCompany","JOB_DETAIL_CARGANDO","JOB_DETAIL_ERROR","JOB_DETAIL_HANDLE_CHANGE","JOB_DETAIL_CLEAN_STATE","JOB_DETAIL_CRUD","JOB_DETAILS_LIST","JOB_DETAIL_HANDLE_VALIDATION","GetJobDetails","GetJobDetailByPersonalDetailId","personalDetailId","GetJobDetail","PutJobDetail","PostJobDetail","DeleteJobDetail","jobDetailHandleChange","jobDetailHandleValidation","jobDetailCleanState","jobDetailMethods","JobDetail","jobDetailReducer","Contract","Type","AreaId","actionJobDetail","jobDetailActions","JobDetails","CreateJobDetail","UpdateJobDetail","reDirectBase","reDirectCreate","CreatePosition","ListOfPersonalDetails","redirectUser","PersonDetail","SecondLastName","RFC","Gender","actionPersonalDetail","ListOfPersonDetails","ComponentListOfPersonalDetails","ComponentPersonDetail","CreatePersonDetail","ListOfAreas","Taken","ComponentListOfAreas","ComponentArea","CreateArea","ComponentCompanies","ComponentJobDetails","AdminDashboardPages","OrgainaztionChart","UpdateCurrent","UpdatePersonDetail","UpdateArea","ComponentUsers","AdminSectionsPages","ComponentSections","AdminCoursesPages","ComponentCourses","ComponentProducts","ComponentDashboard","AdminPositionsPages","ComponentPositions","AdminOrganizationChart","AdminPersonalDetail","ComponentPersonalDetail","AdminArea","DashboardUserTemplate","DashboardUserPage","UserListOfPositionPage","UserCreatePosition","UserListOfPersonDetails","UserCreatePersonDetail","UserUpdatePersonDetail","UserListOfAreas","UserCreateArea","UserUpdateArea","UserOrganizationChart","ComponentsOrganizatioChart","App","exact","path","component","Landings","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","reducer","Idd","nameInput","DateModified","Reducer","files","list_brands","list_organization_chart","IntegratedSalary","DailySalary","list_job_details","list_product_details","COURSE_CARGANDO","COURSE_ERROR","COURSE_HANDLE_CHANGE","COURSE_CLEAN_STATE","COURSE_CRUD","COURSES_LIST","COURSE_HANDLE_VALIDATION","list_courses","list_sections_select","cargandoUsername","errorUsername","cargandoEmail","errorEmail","cargandoPhone","errorPhone","cargandoPassword","errorPassword","errorValidateAccount","count_products","count_courses","BlobName","BlobType","Brand_Blob","Product_Blob","BlogPosts","AspNetUsers","combineReducers","valueInput","WebFont","load","google","families","store","createStore","reducers","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37caa2dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/product.d9246254.jpg\";","export default __webpack_public_path__ + \"static/media/cristian.319f1962.jpg\";","export default __webpack_public_path__ + \"static/media/Jesus.7acb2fb5.jpg\";","export default __webpack_public_path__ + \"static/media/version-4-logo.e2c73c24.svg\";","export default __webpack_public_path__ + \"static/media/organigrama.b28e5e03.jpeg\";","export default __webpack_public_path__ + \"static/media/puestos.6832c674.jpeg\";","export default __webpack_public_path__ + \"static/media/descripciones.25a448ed.jpeg\";","export default __webpack_public_path__ + \"static/media/procesos.19e7ff14.jpeg\";","import React from 'react'\r\nimport Cristian from './cristian.jpg';\r\nimport Jesus from './Jesus.jpg';\r\nimport ProductDefault from './product.jpg'\r\nimport Logo from './version-4-logo.svg'\r\nimport Organigrama from './organigrama.jpeg'\r\nimport Puestos from './puestos.jpeg'\r\nimport Descripciones from './descripciones.jpeg'\r\nimport Procesos from './procesos.jpeg'\r\n   \r\n\r\n\r\n\r\nconst Img = ({src='', width='', alt='', className=''}) => {\r\n    return (\r\n        <img src={src} width={width} alt={alt} className={className}/>\r\n    )\r\n}\r\n\r\nexport const ImgCristian = ({className}) =>(\r\n    <Img src={Cristian} alt='Cristian photo' className={className}/>\r\n)\r\n\r\nexport const ImgJesus = ({className}) =>(\r\n    <Img src={Jesus} alt='jesus photo' className={className}/>\r\n)\r\n\r\nexport const ImgOrganigrama = ({className}) =>(\r\n    <Img src={Organigrama} alt='Organigrama' className={className}/>\r\n)\r\n\r\nexport const ImgProcesos = ({className}) =>(\r\n    <Img src={Procesos} alt='Procesos' className={className}/>\r\n)\r\n\r\nexport const ImgPuestos = ({className}) =>(\r\n    <Img src={Puestos} alt='Puestos' className={className}/>\r\n)\r\n\r\nexport const ImgDescripciones = ({className}) =>(\r\n    <Img src={Descripciones} alt='Descripciones' className={className}/>\r\n)\r\n\r\nexport const SvgLogo = ({className}) =>(\r\n    <Img src={Logo} width={150} alt='logo version 4' className={className}/>\r\n)\r\n\r\nexport const ImgProduct = ({uri = '', className}) =>(\r\n    <Img src={uri ? uri : ProductDefault} alt='default product' className={className}/>\r\n)\r\n\r\n\r\n    \r\n","//imports de react.\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {SvgLogo} from '../img'\r\n\r\nexport const LogoNavbar = ({href = '/', className=''}) => {\r\n    return (\r\n        <h6 className={`font-weight-bold ${className}`}> <Link to='/' className=\"text-dark\">Version 4</Link> </h6>\r\n    )\r\n}\r\n\r\n\r\nexport const Logo = ({href = '/', className=''}) => {\r\n    return (\r\n        <SvgLogo />\r\n    )\r\n}","// Imports de axios.\r\nimport axios from \"axios\";\r\n\r\n/*\r\n * Función para detectar el tipo de error.\r\n */\r\nexport const errorResponse = (data) => {\r\n  //debugger;\r\n  if (data.ModelState) {\r\n    return data.ModelState[\"\"];\r\n  }\r\n  if (data.Message) {\r\n    return data.Message;\r\n  }\r\n  if (data.error_description) {\r\n    return data.error_description;\r\n  }\r\n  if (data.error) {\r\n    return data.error;\r\n  }\r\n};\r\n\r\n/*\r\n * F.unción para manejar errores.\r\n */\r\nexport const errorHandler = (error) => {\r\n  let messageError = \"\";\r\n  //debugger;\r\n  if (!error.response) {\r\n    messageError = \"Error de conexión\";\r\n  } else {\r\n    switch (error.response.status) {\r\n      case 400:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 404:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 500:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n      case 401:\r\n        setLocalStorage();\r\n        window.open(`https://version4-front.azurewebsites.net/login-expired`, \"_self\");\r\n        break;\r\n      default:\r\n        messageError = errorResponse(error.response.data);\r\n        break;\r\n    }\r\n  }\r\n  return messageError;\r\n};\r\n\r\n/*\r\n * Funcion para manejar el encabezado del token.\r\n */\r\nfunction configHeader(token) {\r\n  if (token) {\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    return config;\r\n  }\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  return config;\r\n}\r\n\r\n/*\r\n * Función para setear local storage\r\n */\r\nexport const setLocalStorage = (respuesta) => {\r\n  if (respuesta === undefined) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"username\");\r\n\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem(\"token\", respuesta.data.access_token);\r\n  localStorage.setItem(\"role\", respuesta.data.roles);\r\n  localStorage.setItem(\"username\", respuesta.data.userName);\r\n\r\n  return;\r\n};\r\n\r\n/*\r\n * Función para manejar las peticiones del api, reducir y optimizar código\r\n * uri: dirección que vamos a llamar del back\r\n * header: si requiere autenticación el usuario\r\n * apiMethod: get, post, put, delete\r\n * body: cuerpo si lo necesita\r\n */\r\nexport const axios_api = async (\r\n  uri = \"\",\r\n  header,\r\n  apiMethod = \"\",\r\n  body = {}\r\n) => {\r\n  let respuesta = {};\r\n\r\n  if (uri === \"\") {\r\n    return (respuesta = {\r\n      data: \"No se especifico ninguna uri\",\r\n    });\r\n  }\r\n\r\n  const config = configHeader(header);\r\n\r\n  const pathApi = `${localStorage.getItem(\"route\")}${uri}`;\r\n\r\n  switch (apiMethod.toLowerCase()) {\r\n    case \"get\":\r\n      respuesta = await axios.get(pathApi, config);\r\n      break;\r\n    case \"post\":\r\n      respuesta = await axios.post(pathApi, body, config);\r\n      break;\r\n    case \"put\":\r\n      respuesta = await axios.put(pathApi, body, config);\r\n      break;\r\n    case \"delete\":\r\n      respuesta = await axios.delete(pathApi, config);\r\n      break;\r\n    default:\r\n      respuesta = {\r\n        data: \"No se envio ningun ApiMethod\",\r\n      };\r\n      break;\r\n  }\r\n\r\n  return respuesta;\r\n};\r\n\r\nexport const signOff = (e) => {\r\n  e.preventDefault();\r\n  setLocalStorage();\r\n  window.open(`/`, \"_self\");\r\n};\r\n\r\n// Metodo para manejar las rutas del api\r\nexport const setPathApi = () => {\r\n  const option = 2;\r\n  let route = \"\";\r\n  switch (option) {\r\n    case 1:\r\n      // Local\r\n      route = \"https://localhost:44356/\";\r\n      break;\r\n    case 2:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    case 3:\r\n      // Production\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n    default:\r\n      // Develop\r\n      route = \"https://version4-back.azurewebsites.net/\";\r\n      break;\r\n  }\r\n\r\n  localStorage.setItem(\"route\", route);\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport {\r\n  Container,\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  DropdownMenu\r\n} from 'reactstrap';\r\n\r\nimport {Logo} from './Logos'\r\n// Imports de components-api.\r\nimport {signOff} from '../components-api/ConfigApi'\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Navbars = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar expand=\"md\" className=\"fixed-top bg-white border-bottom\">\r\n        <Container>\r\n        {/* <NavbarBrand href=\"/\" className=\"text className='text-primary'-dark font-weight-bold\">VERSION 4</NavbarBrand> */}\r\n        <Logo />\r\n        <NavbarToggler onClick={toggle}><FaIcons.FaBars className=\"lead\" /></NavbarToggler>\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"d-flex mr-2\">\r\n              <NavLink href=\"/login\"className=\"btn btn-outline-secondary align-self-center\">Empresas</NavLink>\r\n            </NavItem>\r\n            {/* <NavItem className=\"d-flex\">\r\n              <NavLink href=\"/sign-up\"className=\"btn btn-primary align-self-center\">Regístrate</NavLink>\r\n            </NavItem> */}\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const NavbarAdmin = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n      <Navbar light className=\"bg-white\" expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand href=\"/admin-dashboard\" className='text-primary'>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret className=\"text-dark\">\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff} className=\"text-dark\">\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport const User = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const {companyId} = useParams();\r\n  return (\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand className='text-primary' href={`/user-dashboard/company/${companyId}`}>VERSION 4</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem className=\"mr-3\">\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                {localStorage.getItem('username')}\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"border-0 shadow-sm\">\r\n                <DropdownItem onClick={signOff}>\r\n                  Cerrar sesión\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}","// Imports de react.\r\nimport React from 'react'\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CardAnalytics = ({title, number, icon}) => {\r\n    const rTitle = title ? title : 'title';\r\n    const rNumber = number ? number : '0'\r\n    const rIcon = icon ? icon : <FaIcons.FaVideo className=\"mr-2\" />;\r\n    return (\r\n        <Card className=\"border-0 my-3\">\r\n            <CardBody>\r\n                <p className=\"text-muted mb-2\">{rIcon} {rTitle}</p>\r\n                <h5 className=\"display-4 text-dark\">{rNumber}</h5>\r\n                {/* <div className=\"d-inline-block text-success mr-2\"><FaIcons.FaArrowUp className=\"mr-2\" />0%</div><p className=\"text-dark d-inline-block mb-0\">vs los últimos 7 días</p> */}\r\n            </CardBody>\r\n        </Card>   \r\n    )\r\n}\r\n","export const fixSelect = (id ='Id', name='Name', list) => {\r\n    let fixSelect = [];\r\n    if(list?.length > 0){\r\n        fixSelect = list.map(item => {\r\n            return {Id: item[id], Name: item[name]}\r\n        })\r\n    }\r\n    return fixSelect;\r\n}","import * as UtilsArrays from './Arrays'\r\n\r\nexport const Arrays = UtilsArrays;","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from \"reactstrap\";\r\n\r\nimport {Arrays} from '../utils'\r\n\r\nexport const DropDownActions = ({children, labelButton, color='link'}) => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n  return (\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n      <DropdownToggle caret color={color} className=\"text-dark\">{labelButton}</DropdownToggle>\r\n      <DropdownMenu>{children}</DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport const Items = ({items, action}) => {\r\n  let fixDropDown = Arrays.fixSelect('Id','TradeName', items);\r\n  return(\r\n    <>\r\n      {\r\n        fixDropDown.map(area => {\r\n            \r\n            return <DropdownItem key={area.Id} onClick={() => action(area.Id)}>{area.Name}</DropdownItem>\r\n        })\r\n      }\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Spinner } from 'reactstrap';\r\n\r\nexport const Loader = ({color, activate}) => {\r\n    const rColor = color ? color: 'primary';\r\n    if(activate){\r\n        return(\r\n            <Spinner color={rColor} className=\"align-middle ml-1\" />\r\n        )\r\n    }\r\n    return '';\r\n}\r\n\r\nexport const Error = ({message}) => {\r\n    \r\n    return <>\r\n        {message ? \r\n            <div className='text-danger text-center mb-4'>{message}</div>\r\n        : ''}\r\n    </>;\r\n}\r\n","// Imports de react.\r\nimport React, { useState } from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport {DropdownItem, Form, FormGroup, Input, Table} from 'reactstrap'\r\n\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de components.\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\nimport {DropDownActions} from '../config-components/DropDowns'\r\n\r\nexport const UseSearchItems = (list, propertiesTable) => {\r\n  const [searchByItem, setSearchItem] = useState(propertiesTable);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n\r\n  React.useMemo(() => {\r\n    const filteredSome = list.filter((items) => {\r\n      let res = \"\";\r\n      res += propertiesTable.map((property) => {\r\n        return `${items[property]} `;\r\n      });\r\n      return res.toLowerCase().includes(query.toLowerCase());\r\n    });\r\n    setSearchItem(filteredSome);\r\n  }, [list, query, propertiesTable]);\r\n\r\n  return { query, setQuery, searchByItem };\r\n};\r\n\r\nexport const TableFilter = ({\r\n    title, \r\n    titlesTable,\r\n    propertiesTable,\r\n    bodyTable,\r\n    loading,\r\n    error,\r\n    hrefCreate,\r\n    actions\r\n}) => {\r\n    const rTitle = title ? title : 'Titulo';\r\n    const rHrefCreate= hrefCreate ? hrefCreate : '/admin-dashboard';\r\n\r\n    const { query, setQuery, searchByItem } = UseSearchItems(\r\n        bodyTable,\r\n        propertiesTable\r\n    );\r\n    return (\r\n        <>\r\n            <div className=\"d-flex mb-4\">\r\n                <h3 className=\"flex-grow-1\">{rTitle}</h3>\r\n                \r\n                <div>\r\n                    <Form>\r\n                        <FormGroup className=\"d-flex\">\r\n                            <Input \r\n                                className=\"mr-3\" \r\n                                type=\"text\" \r\n                                placeholder=\"Buscar...\" \r\n                                value={query}\r\n                                onChange={(e) => {\r\n                                    setQuery(e.target.value);\r\n                                }}\r\n                            />\r\n                            <Link to={rHrefCreate} className={'btn btn-primary'}>Crear</Link>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n            <Table className=\"bg-white\">\r\n                <thead>\r\n                    <tr>\r\n                        {titlesTable.map(title => {\r\n                            return(\r\n                            <th>{title}</th>\r\n                            )\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n                {\r\n                    error ? <Error message={error} /> :\r\n                    loading ? <Loader activate={loading}/> : \r\n                    <tbody>\r\n                        {searchByItem?.map(item => {\r\n                            return(\r\n                                <tr>\r\n                                    {propertiesTable?.map(property => {\r\n                                        return <td>{item[property]}</td>\r\n                                    })}\r\n                                        <td>\r\n                                        <DropDownActions \r\n                                            labelButton={<FaIcons.FaEllipsisH />}\r\n                                        >\r\n                                            {actions &&\r\n                                                actions.map( action => {\r\n                                                    return<DropdownItem onClick={() => action.handleAction(item['Id'])}>\r\n                                                        {action.action}\r\n                                                    </DropdownItem>\r\n                                                })\r\n                                            }\r\n                                        </DropDownActions>  \r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}      \r\n                    </tbody>\r\n                }               \r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentConfigApi from './ConfigApi'\r\nimport * as ComponentApiResponses from './ApiResponses'\r\n\r\nexport const ConfigApi = ComponentConfigApi;\r\nexport const ApiResponses = ComponentApiResponses;","// Imports de react.\r\nimport React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Input, Label, FormGroup, FormFeedback, Form, Button, Col} from 'reactstrap'\r\nimport {RegularExpressions} from './index'\r\nimport {ApiResponses} from '../components-api'\r\n\r\n\r\n// Hook para manejar el cambio en inputs.\r\nexport const useInputState = (inputValue) => {\r\n    const [inputChange, setInputChange] = useState(inputValue);\r\n    const setOnChange = (e) => {\r\n        setInputChange(e)\r\n    }\r\n    return {inputChange, setOnChange}\r\n}\r\n\r\n\r\n// Input para textos.\r\nexport const InputText = ({forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    placeHolder,\r\n    inputValue,\r\n    onChange,\r\n    maxLength,\r\n    minLength,\r\n    RE,\r\n    validateRE,\r\n    options,\r\n    optionPlaceHolder,\r\n    forgotPassword = false,\r\n    xs='12',\r\n    sm='12',\r\n    md='12',\r\n    lg='12',\r\n    xl='12',\r\n    classCol='px-0'\r\n}) => {\r\n    const rFor = forName ? forName : 'for';\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n    const rPlaceHolder = placeHolder ? placeHolder : '';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rMaxLength = maxLength ? maxLength : 524288;\r\n    const rMinLength = minLength ? minLength : 0;\r\n    const rRE = RE ? RE : '';\r\n\r\n    const handleRE = (e) =>{\r\n        \r\n        validateRE = e.target.value.match(rRE.re) ? true : false;\r\n        if(validateRE && e.target.value === '' && isMandatory){\r\n            validateRE = false;\r\n        }\r\n        if(!validateRE && e.target.value === '' && !isMandatory){\r\n            validateRE = '';\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <Col \r\n            xs={xs}\r\n            sm={sm}\r\n            md={md}\r\n            lg={lg}\r\n            xl={xl}\r\n            className={classCol}\r\n        >\r\n            <FormGroup>\r\n                <Label\r\n                    for={rFor}\r\n                    className={`${rClassLabel} d-flex justify-content-between`}\r\n                >\r\n                        <div>\r\n                            {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n                        </div>\r\n                        {forgotPassword && <small>\r\n                            <Link to='/forgot-password'>\r\n                                ¿Olvidaste tu contraseña?\r\n                            </Link>\r\n                        </small>}\r\n                </Label>\r\n                <Input\r\n                    type={rInputType}\r\n                    name={rInputName}\r\n                    id={rInputId}\r\n                    placeholder={rPlaceHolder}\r\n                    value={rInputValue}\r\n                    onChange={(e)=>handleRE(e)}\r\n                    maxLength={rMaxLength}\r\n                    minLength={rMinLength}\r\n                    valid={validateRE === true && true }\r\n                    invalid={validateRE === false && true}\r\n                >\r\n                    {\r\n                        options && \r\n                        <>\r\n                            <option value=\"\">{optionPlaceHolder}</option>\r\n                            {options.map(option => {\r\n                                return <option key={option.Id} value={option.Id}>{option.Name} {option?.LastName ? option?.LastName : ''}</option>\r\n                            })}\r\n                        </> \r\n                    }\r\n                </Input>\r\n                <FormFeedback  valid >{validateRE && rRE.validMessage}</FormFeedback>\r\n                <FormFeedback  invalid >{validateRE === false && rRE.invalidMessage}</FormFeedback>\r\n\r\n            </FormGroup>\r\n        </Col>\r\n    )\r\n}\r\n\r\n// Input para correo.\r\nexport const InputEmail = ({name, inputValue, onChange, label, RE, validateRE}) => {\r\n    const rName = name ? name : 'Email';\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    const rLabel = label ? label : 'Email';\r\n    const rRE = RE ? RE : RegularExpressions.RE_EMAIL;\r\n    return <InputText\r\n            forName='Email'\r\n            classLabel='font-weight-bold'\r\n            textLabel={rLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='text'\r\n            inputName={rName}\r\n            inputId='Email'\r\n            placeHolder={`Introduce tu ${rLabel}`}\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={20}\r\n            RE={rRE}\r\n            validateRE={validateRE}\r\n        />\r\n}\r\n\r\nexport const InputPassword = ({\r\n    inputValue, \r\n    onChange, \r\n    validateRE, \r\n    forgotPassword = false,\r\n    RE = RegularExpressions.RE_PASSWORD,\r\n    inputName = 'password',\r\n    textLabel = 'Contraseña'\r\n}) => {\r\n    const rInputValue = inputValue ? inputValue : '';\r\n    return <InputText\r\n            forName='Password'\r\n            classLabel='font-weight-bold'\r\n            textLabel={textLabel}\r\n            isMandatory='*'\r\n            classMandatory=''\r\n            inputType='password'\r\n            inputName={inputName}\r\n            inputId='password'\r\n            placeHolder='Introduce tu contraseña'\r\n            inputValue={rInputValue}\r\n            onChange={onChange}\r\n            maxLength={100}\r\n            minLength={1}\r\n            RE={RE}\r\n            validateRE={validateRE}\r\n            forgotPassword={forgotPassword}\r\n        />\r\n}\r\n\r\n\r\nexport const InputFile = ({//forName, \r\n    classLabel,\r\n    textLabel, \r\n    isMandatory,\r\n    classMandatory,\r\n    inputType,\r\n    inputName,\r\n    inputId,\r\n    onChange,\r\n    RE,\r\n    validateRE,\r\n   \r\n}) => {\r\n    const rClassLabel = classLabel ? classLabel : '';\r\n    const rTextLabel = textLabel ? textLabel : '';\r\n    const rIsMandatory = isMandatory ? isMandatory : '';\r\n    const rClassMandatory = classMandatory ? classMandatory : 'text-danger';\r\n    const rInputType = inputType ? inputType : 'text';\r\n    const rInputName = inputName ? inputName : '';\r\n    const rInputId = inputId ? inputId : '';\r\n \r\n    const handleRE = (e) =>{\r\n        if(validateRE && e.target.value === [] && isMandatory){\r\n            validateRE = false;\r\n        }else {\r\n            validateRE = true;\r\n        }\r\n        onChange(e.target, validateRE);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            <Label\r\n                className={rClassLabel}\r\n            >\r\n                {rTextLabel} <span className={rClassMandatory}>{rIsMandatory}</span>\r\n            </Label>\r\n            <Input\r\n                type={rInputType}\r\n                name={rInputName}\r\n                id={rInputId}\r\n                onChange={(e)=>handleRE(e)}\r\n                valid={validateRE === true && true }\r\n                invalid={validateRE === false && true}\r\n            />\r\n            <FormFeedback  valid >{validateRE && 'archivo valido'}</FormFeedback>\r\n            <FormFeedback  invalid >{validateRE === false && 'archivo invalido'}</FormFeedback>\r\n        </FormGroup>\r\n    )\r\n}\r\n  \r\nexport const ValidateInputs = (validations, e, onValidate) => {\r\n    e.preventDefault()\r\n    for(let i = 0; i < validations.length ; i++){\r\n        if(validations[i] !== '' && validations[i].props.isMandatory === '*' ){\r\n            if(!validations[i].props.validateRE || validations[i].props.validateRE === \"\"){\r\n                let model = {\r\n                    name: validations[i].props.inputName,\r\n                    isInvalid: false\r\n                }\r\n                onValidate(model);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const Form1 = ({children, \r\n    loading, \r\n    error, \r\n    action,\r\n    textButton,\r\n    textButtonLoading,\r\n    handleValidations,\r\n}) => {\r\n    const HandleAction = (e) =>{\r\n        const isValid = ValidateInputs(children, e, handleValidations);\r\n        if(isValid) {\r\n            action();\r\n        }\r\n    }\r\n    return <Form className={'d-flex flex-wrap'}>\r\n        {children}\r\n        <ApiResponses.Error message={error}/> \r\n        {loading ? \r\n            <Button color=\"primary\" className=\"w-100 mb-3\" >{textButtonLoading}<ApiResponses.Loader activate={loading}  color={'light'} /></Button>  :\r\n            <Button color=\"primary\" className=\"w-100 mb-3\" onClick={HandleAction}>{textButton} <ApiResponses.Loader activate={loading}  color={'light'} /></Button>\r\n        }\r\n         \r\n    </Form>\r\n}","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nexport const SwitchSome = () => {\r\n  const [some, setSome] = useState(false);\r\n  const toggle = () => {\r\n    setSome(!some)\r\n  }\r\n  return {some, setSome, toggle}\r\n}\r\n\r\nexport const ModalForm  = ({children, content, modalTitle, state}) => {\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody> \r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalDelete  = ({children, content, modalTitle, action, state}) => {\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    state.toggle();\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <div color=\"danger\" onClick={state.toggle}>{children}</div>\r\n      <Modal isOpen={state.some} toggle={state.toggle} >\r\n        <ModalHeader toggle={state.toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={state.toggle}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const ModalOpenDelete  = ({content, modalTitle, action, clean}) => {\r\n\r\n  const [modal, setToogle] = useState(true);\r\n\r\n  const toggle = () => { \r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  const handleAction = () => {\r\n    action();\r\n    toggle();\r\n  }\r\n\r\n  const toggleCancel = () => {\r\n    setToogle(false)\r\n    clean()\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-inline-block\">\r\n      <Modal isOpen={modal} toggle={toggleCancel} >\r\n        <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n        <ModalBody>\r\n            {content}\r\n        </ModalBody>\r\n        <ModalFooter className=\"d-flex\">\r\n          <Button color=\"outline-primary\" className=\"flex-1\" onClick={toggleCancel}>Cancelar</Button>\r\n          <Button color=\"danger\" className=\"flex-1\" onClick={handleAction}>Eliminar</Button>{' '}\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n    Card, CardBody,\r\n} from 'reactstrap';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <Card className=\"card-form mx-auto text-center border-0\">\r\n            <CardBody>\r\n                <h4 className=\"display-1 font-weight-bold mb-0\">404</h4>\r\n                <h4 className=\"text-muted mb-4\">Página no encontrada</h4>\r\n                <Link to='/' className=\"btn btn-primary\">Regresar a inicio</Link>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\n","export const RE_EMAIL = {\r\n    re: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,\r\n    validMessage: \"Email correcto\",\r\n    invalidMessage: \"El email necesita un @ y un . para ser valido\",\r\n  };\r\n  \r\n  export const RE_PASSWORD = {\r\n    re: /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i,\r\n    validMessage: \"Contraseña valida\",\r\n    invalidMessage:\r\n      \"La contraseña debe tener más de 8 caracteres, un dígito, una minúscula y una mayúscula  \",\r\n  };\r\n  \r\n  export const RE_PASSWORD_MATCHES = {\r\n    re: \"\",\r\n    validMessage: \"La Contraseña coincide\",\r\n    invalidMessage: \"La contraseña no coincide\",\r\n  };\r\n  \r\n  export const RE_EMPTY = {\r\n    re: /^[^]+$/i,\r\n    validMessage: \"Campo correcto\",\r\n    invalidMessage: \"No puede ir vacio\",\r\n  };\r\n  ","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nexport const Tabs = ({children1, children2, children3, tab=\"1\"}) => {\r\n  const [activeTab, setActiveTab] = useState(tab);\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs className=\"mb-2\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Posición\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Personal\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Laboral\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                      {children1}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                    {children2}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n            <Row>\r\n                <Col lg=\"12\" className=\"d-flex\">\r\n                    <div className=\"align-self-center\">\r\n                    {children3}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport const ShowListFromText = ({description = []}) => {\r\n\r\n    if(!description){\r\n        return 'no hay información';\r\n    }\r\n\r\n    let arrayDeCadenas = description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n\r\n    return(\r\n        <ul>\r\n            {arrayDeCadenas.map(item => {\r\n                return (\r\n                        <li>{item}</li>\r\n                    )\r\n                }    \r\n            )}\r\n        </ul>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const POSITION_CARGANDO = \"position_cargando\";\r\nexport const POSITION_ERROR = \"position_error\";\r\nexport const POSITION_HANDLE_CHANGE = \"position_handle_change\";\r\nexport const POSITION_CLEAN_STATE = \"position_clean_state\";\r\nexport const POSITION_CRUD = \"position_crud\";\r\nexport const POSITIONS_LIST = \"position_list\";\r\nexport const POSITION_HANDLE_VALIDATION = \"position_handle_validation\";\r\n\r\nexport const GetPositions = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Positions`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\nexport const GetPositionsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PositionsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: POSITIONS_LIST};\r\n}\r\n\r\n\r\nexport const GetPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const PutPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'position_put'};\r\n}\r\n\r\nexport const PostPosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}\r\n\r\nexport const DeletePosition = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Position?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: POSITION_CRUD};\r\n}","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_HANDLE_VALIDATION, \r\n    GetPositions,\r\n    GetPositionsByCompanyId,\r\n    GetPosition,\r\n    PutPosition,\r\n    PostPosition,\r\n    DeletePosition\r\n  } from \"./positionTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const positionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const positionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const positionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const positionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: POSITION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPositions\":\r\n          answer = await GetPositions(); \r\n          break;\r\n\r\n        case \"GetPositionsByCompanyId\":\r\n          answer = await GetPositionsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPosition\":\r\n          answer = await GetPosition(data);\r\n          break;\r\n\r\n        case \"PutPosition\":\r\n          answer = await PutPosition(data);\r\n          break;\r\n\r\n        case \"PostPosition\":\r\n          answer = await PostPosition(data);\r\n          break;\r\n        \r\n        case \"DeletePosition\":\r\n          answer = await DeletePosition(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: POSITION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nclass Position extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {positionId, positionMethods} = this.props;\r\n        positionId && await positionMethods({Id: positionId}, 'GetPosition');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            positionMethods, \r\n            positionReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                Description,\r\n                Description2,\r\n                CompanyId,\r\n                Objective,\r\n                Knowledge,\r\n                Salary\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            Description: Description ? Description : '',\r\n            Description2: Description2 ? Description2 : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Objective: Objective ? Objective : '',\r\n            Knowledge: Knowledge ? Knowledge : '',\r\n            Salary: Salary ? Salary : ''\r\n        }\r\n        await positionMethods(model, action);\r\n    }\r\n\r\n    actionPosition = async () => {\r\n        const {\r\n            positionCleanState,\r\n            positionReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPosition');\r\n        }else{\r\n            await this.sendAction('PostPosition')\r\n        }\r\n        if(this.props.positionReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            positionCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const {positionCleanState} = this.props;\r\n        positionCleanState()\r\n\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            positionHandleValidation,\r\n            positionHandleChange,\r\n            positionReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Description,\r\n                    Description2,\r\n                    Objective,\r\n                    Salary\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPosition}\r\n                textButton={Id ? 'Guardar Puesto' : 'Crear Puesto'}\r\n                textButtonLoading={Id ? 'Guardando PUesto...' : 'Creando Puesto...'}\r\n                validations={validations}\r\n                handleValidations={positionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Objetivo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Objective'}\r\n                    placeHolder={'Introduce el objetivo del puesto'}\r\n                    inputValue={Objective}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Objective}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Responsabilidades'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce las responsabilidades del puesto'}\r\n                    inputValue={Description}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Competencias'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description2'}\r\n                    placeHolder={'Introduce información'}\r\n                    inputValue={Description2}\r\n                    onChange={positionHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description2}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Puntos'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Salary'}\r\n                    placeHolder={'Introduce puntos'}\r\n                    inputValue={Salary}\r\n                    onChange={positionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Salary}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({positionReducer}) => {\r\n    return {positionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...positionActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Position);\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Lists} from '../config-components'\r\n\r\nexport const ListOfResponsabilities = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description}/>\r\n    )\r\n}\r\n\r\nexport const ListOfDescriptions = () => {\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const {data:{Description2}} = positionReducer;\r\n    return(\r\n        <Lists.ShowListFromText description={Description2}/>\r\n    )\r\n}\r\n","import ComponentPosition from './Positions'\r\nimport ComponentListOfPositions from './ListOfPositions'\r\nimport * as ComponentsListFromPositions from './Responsibilities'\r\nimport ComponentReadPosition from './ReadPosition'\r\nexport const Position = ComponentPosition;\r\nexport const ListOfPositions = ComponentListOfPositions;\r\nexport const ListFromPositions = ComponentsListFromPositions; \r\nexport const ReadPosition = ComponentReadPosition; ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as positionActions from './reducer/positionActions'\r\n\r\nconst ListOfPositions = ({ title='Posiciones', reDirect='', create='/create-position'}) => {\r\n    const positionReducer = useSelector(state => state.positionReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(positionActions.positionMethods({companyId},'GetPositionsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (positionId) => {\r\n        //history.push(`/admin-dashboard/company/${companyId}/update-position/${positionId}`)\r\n        history.push(reDirect.replace('positionId', positionId).replace('companyId', companyId))\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_positions\r\n    } = positionReducer;\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Puesto','Acciones']}\r\n                propertiesTable={['Name']}\r\n                //hrefCreate={`/admin-dashboard/company/${companyId}${create}`}\r\n                hrefCreate={create.replace('companyId', companyId)}\r\n                bodyTable={list_positions}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Puesto', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPositions;\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as postionActions from './reducer/positionActions'\r\nconst ReadPosition = ({positionId}) => {\r\n    debugger\r\n    const positionReducer = useSelector(state => state.positionReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { data:{\r\n        Description,\r\n        Salary,\r\n        Objective\r\n    }} = positionReducer;\r\n    useEffect(() => {\r\n        dispatch(postionActions.positionMethods({Id: positionId},'GetPosition'))\r\n        return () => {\r\n            dispatch(postionActions.positionCleanState());\r\n        }\r\n    }, [dispatch, positionId])\r\n    let arrayDeCadenas = Description.split('-');\r\n    arrayDeCadenas.splice(0, 1);\r\n    return (\r\n        <div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Objetivo:</div>\r\n                <div className={'text-muted'}>{Objective}</div>\r\n            </div>\r\n            <div className='mb-2'>\r\n                <div className={'font-weight-bold'}>Responsabilidades:</div>\r\n                <ul>\r\n                    {arrayDeCadenas.map(item => {\r\n                        return (\r\n                                <li className='text-muted'>{item}</li>\r\n                            )\r\n                        }    \r\n                    )}\r\n                </ul>\r\n            </div>\r\n            <div className='mb-4'>\r\n                <div className={'text-dark'}>Puntos:</div>\r\n                <div className={'text-muted'}>{Salary ? Salary: 0}</div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadPosition;","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ORGANIZATION_CHART_CARGANDO = \"organization_chart_cargando\";\r\nexport const ORGANIZATION_CHART_ERROR = \"organization_chart_error\";\r\nexport const ORGANIZATION_CHART_HANDLE_CHANGE = \"organization_chart_handle_change\";\r\nexport const ORGANIZATION_CHART_CLEAN_STATE = \"organization_chart_clean_state\";\r\nexport const ORGANIZATION_CHART_CRUD = \"organization_chart_crud\";\r\nexport const ORGANIZATION_CHARTS_LIST = \"organization_charts_list\";\r\nexport const ORGANIZATION_CHART_HANDLE_VALIDATION = \"organization_chart_handle_validation\";\r\nexport const ORGANIZATION_CHART_CHILD = 'organization_chart_child'\r\n\r\nexport const GetOrganizationCharts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationCharts`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHARTS_LIST};\r\n}\r\n\r\nexport const GetOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\nexport const GetPositionFromOrganization = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PositionFromOrganization?positionChartId=${data.positionChartId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartChild = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CHILD};\r\n}\r\n\r\nexport const GetOrganizationChartByCompanyId = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByCompanyId?companyId=${data.companyId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const GetOrganizationChartByArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChartByArea?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const PutOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'organization_chart_put'};\r\n}\r\n\r\nexport const PostOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}\r\n\r\nexport const DeleteOrganizationChart = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/OrganizationChart?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: ORGANIZATION_CHART_CRUD};\r\n}","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION, \r\n    GetOrganizationCharts,\r\n    GetOrganizationChart,\r\n    GetPositionFromOrganization,\r\n    GetOrganizationChartChild,\r\n    GetOrganizationChartByCompanyId,\r\n    GetOrganizationChartByArea,\r\n    PutOrganizationChart,\r\n    PostOrganizationChart,\r\n    DeleteOrganizationChart\r\n } from \"./organizationChartTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const organizationChartHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const organizationChartHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ORGANIZATION_CHART_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const organizationChartMethods = (data, method, loading = '') => async (dispatch) => {\r\n    dispatch({\r\n      type:!loading ? ORGANIZATION_CHART_CARGANDO : loading,\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetOrganizationCharts\":\r\n            answer = await GetOrganizationCharts(); \r\n            break;\r\n\r\n        case \"GetOrganizationChart\":\r\n            answer = await GetOrganizationChart(data);\r\n            break;\r\n\r\n        case \"GetPositionFromOrganization\":\r\n            answer = await GetPositionFromOrganization(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartChild\":\r\n            answer = await GetOrganizationChartChild(data);\r\n            break;\r\n\r\n        case \"GetOrganizationChartByCompanyId\":\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n            if(answer.res.data.length > 0){\r\n              let padre = answer.res.data.filter(child => child.PositionChartId == null);\r\n              let createTree = tree(padre[0], answer.res.data )\r\n              answer.res.data = createTree\r\n            }\r\n            \r\n            break;\r\n        case \"GetOrganizationChartByArea\":\r\n            //answer = await GetOrganizationChartByArea(data);\r\n            answer = await GetOrganizationChartByCompanyId(data);\r\n\r\n            if(answer.res.data.length > 0){\r\n              let area = answer.res.data.filter(child => child.AreasId === Number(data.areaId));\r\n              let createTreeByArea = tree(area[0], answer.res.data )\r\n              answer.res.data = createTreeByArea\r\n            }\r\n            break;\r\n        case \"GetOrganizationChartByFatherPosition\":\r\n          answer = await GetOrganizationChartByCompanyId(data);\r\n          if(answer.res.data.length > 0){\r\n            let fatherPosition = answer.res.data.filter(child => child.Id === Number(data.positionChartId));\r\n            let createTreeByFatherPosition = tree(fatherPosition[0], answer.res.data )\r\n            answer.res.data = createTreeByFatherPosition\r\n          }\r\n          break;\r\n\r\n        case \"PutOrganizationChart\":\r\n          answer = await PutOrganizationChart(data);\r\n          break;\r\n\r\n        case \"PostOrganizationChart\":\r\n          answer = await PostOrganizationChart(data);\r\n          break;\r\n        \r\n        case \"DeleteOrganizationChart\":\r\n          answer = await DeleteOrganizationChart(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ORGANIZATION_CHART_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n  const tree = (padre, hijos) => {\r\n      \r\n      let children = hijos.filter(child => child.PositionChartId == padre.Id);\r\n      if(!children || children?.length === 0 || children === undefined ){\r\n        return padre;\r\n      }\r\n\r\n      padre.ChartTree1 = children.map(child => {\r\n        return tree(child, hijos);\r\n      })\r\n\r\n      return padre;\r\n  }","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const AREA_CARGANDO = \"area_cargando\";\r\nexport const AREA_ERROR = \"area_error\";\r\nexport const AREA_HANDLE_CHANGE = \"area_handle_change\";\r\nexport const AREA_CLEAN_STATE = \"area_clean_state\";\r\nexport const AREA_CRUD = \"area_crud\";\r\nexport const AREAS_LIST = \"area_list\";\r\nexport const AREA_HANDLE_VALIDATION = \"area_handle_validation\";\r\n\r\nexport const GetAreas = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Areas`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdWithoutTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdWithoutTaken?companyId=${data.companyId}&areaId=${data.areaId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\nexport const GetAreasByCompanyIdTaken = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/AreasByCompanyIdTaken?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: AREAS_LIST};\r\n}\r\n\r\n\r\nexport const GetArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const PutArea = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/Area?id=${data.Id}`,\r\n      true,\r\n      \"put\",\r\n      data\r\n    );\r\n  return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PutAreaTaken = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/AreaTaken?areaId=${data.areaId ? data.areaId : 0}&organizationChartId=${data.organizationChartId}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'area_put'};\r\n}\r\n\r\nexport const PostArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}\r\n\r\nexport const DeleteArea = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Area?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: AREA_CRUD};\r\n}","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_HANDLE_VALIDATION, \r\n    GetAreas,\r\n    GetAreasByCompanyId,\r\n    GetAreasByCompanyIdWithoutTaken,\r\n    GetAreasByCompanyIdTaken,\r\n    GetArea,\r\n    PutAreaTaken,\r\n    PutArea,\r\n    PostArea,\r\n    DeleteArea\r\n  } from \"./areaTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const areaHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const areaHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const areaCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const areaMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: AREA_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetAreas\":\r\n          answer = await GetAreas(); \r\n          break;\r\n\r\n        case \"GetAreasByCompanyId\":\r\n          answer = await GetAreasByCompanyId(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdWithoutTaken\":\r\n          answer = await GetAreasByCompanyIdWithoutTaken(data);\r\n          break;\r\n\r\n        case \"GetAreasByCompanyIdTaken\":\r\n          answer = await GetAreasByCompanyIdTaken(data);\r\n          break;\r\n        \r\n        case \"GetArea\":\r\n          answer = await GetArea(data);\r\n          break;\r\n\r\n        case \"PutAreaTaken\":\r\n          answer = await PutAreaTaken(data);\r\n          break;\r\n\r\n        case \"PutArea\":\r\n          answer = await PutArea(data);\r\n          break;\r\n\r\n        case \"PostArea\":\r\n          answer = await PostArea(data);\r\n          break;\r\n        \r\n        case \"DeleteArea\":\r\n          answer = await DeleteArea(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: AREA_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { Card,  CardBody, CardTitle, CardSubtitle,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Col\r\n} from 'reactstrap'\r\nimport {ReadPosition} from '../components-position'\r\nimport {ApiResponses} from '../components-api'\r\nimport {Inputs} from '../config-components'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport bem from 'easy-bem'\r\nimport './style.css'\r\nconst cn = bem('scrollbars-example')\r\nconst COLS = 20\r\nconst ROWS = 20\r\n\r\nconst StyledNode = styled.div`\r\n  padding: 5px;\r\n  border-radius: 8px;\r\n  display: inline-block;\r\n`;\r\n\r\n\r\n\r\n\r\nexport const Modals = ({positionId, children, modalTitle, name}) => {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    return (\r\n      <>\r\n        <span role=\"button\" onClick={toggle}>{children}</span>\r\n        <Modal isOpen={modal} toggle={toggle} >\r\n          <ModalHeader toggle={toggle}>{modalTitle}</ModalHeader>\r\n          <ModalBody>\r\n            <h3>{name}</h3> \r\n            <ReadPosition positionId={positionId} />\r\n          </ModalBody>\r\n          {/* <ModalFooter>\r\n            <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{' '}\r\n            <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n          </ModalFooter> */}\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\nexport const CardNode = ({positionId,name, employee, area, addChild, updateNode,deleteChild}) => {\r\n    const rArea = area ? area : '';\r\n    return(\r\n        \r\n        <Card>\r\n            <CardBody className=' d-flex justify-content-between'>\r\n                <div className={'mr-5 '}>\r\n                    <div className='font-weight-bold  mb-2' style={{textAlign: 'start'}}>\r\n                        {name}\r\n                    </div>\r\n                    <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                        {employee ? `${employee.Name} ${employee.LastName} ` :'Empleado'}\r\n                    </div> \r\n                    {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n                </div>\r\n                <div>\r\n                    {/* <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div> */}\r\n                    <div>\r\n                        <Modals positionId={positionId} modalTitle={name} name={name} >\r\n                            <FaIcons.FaEye  className=\"text-secondary\" />\r\n                        </Modals>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n                    </div>\r\n                    <div>\r\n                        <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n                    </div>\r\n                    <div>\r\n                        {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n  }\r\n\r\n \r\nclass OrganizationChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.container  = React.createRef();\r\n        this.state = {\r\n          value: ''\r\n        }\r\n      }\r\n\r\n      async componentDidMount() {\r\n        const {\r\n            organizationChartMethods,\r\n            areaMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n        companyId && await areaMethods({companyId: companyId}, 'GetAreasByCompanyIdTaken')\r\n   \r\n       \r\n        this.centerDiagram();\r\n    }\r\n\r\n    \r\n    centerDiagram = () => {\r\n        const element = this.container.current;\r\n        if (element) {\r\n            //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n            element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n        }\r\n    }\r\n\r\n    createOrganigrama =  (organigrama) => {\r\n        let ChartTree1 = organigrama?.ChartTree1\r\n        if(ChartTree1?.length === 0 || ChartTree1 === undefined || !ChartTree1){\r\n            \r\n            return <TreeNode \r\n                label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {''}\r\n                        name={organigrama.PositionName} \r\n                        employee = { organigrama.PersonalDetail}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n                }\r\n            />\r\n        }\r\n        \r\n        return <TreeNode \r\n            label={\r\n                <StyledNode>\r\n                    <CardNode \r\n                        positionId = {''}\r\n                        name = {organigrama.PositionName} \r\n                        employee = { organigrama.PersonName}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                    />\r\n                </StyledNode>\r\n            }\r\n        >\r\n            {\r\n                ChartTree1.map((child) => {           \r\n                    return this.createOrganigrama(child)\r\n                })\r\n            }\r\n        </TreeNode>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addUpChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    getOrganizationChartByArea = async(e) => {\r\n        debugger\r\n        e.preventDefault();\r\n        const value = e.target.value;\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        value === 'general' ? \r\n            await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId') :\r\n            await organizationChartMethods({companyId, areaId: value},'GetOrganizationChartByArea');\r\n\r\n        this.centerDiagram();\r\n       \r\n    }\r\n\r\n    getCompleteOrganizationChart = async() => {\r\n        const {\r\n            organizationChartMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n    }\r\n\r\n    render () {\r\n\r\n        const { \r\n            organizationChartReducer:{\r\n                data: {Id},\r\n                api_actions: {\r\n                    cargando,\r\n                    error\r\n                }\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }, \r\n            hrefBase\r\n        } = this.props\r\n\r\n        return(\r\n            <div >\r\n                <ul className=\"list-inline m-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${hrefBase}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \">\r\n                    \r\n                        <Col>\r\n                            <FormGroup>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => this.getOrganizationChartByArea(e)}>\r\n                                <option value='general' >General</option>\r\n                                {\r\n                                    list_areas.map(area => {\r\n                                      \r\n                                        return <option value={area.Id}>\r\n                                            {area.Name}\r\n                                        </option>\r\n                                    })\r\n                                }\r\n                                </Input>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        \r\n                        \r\n                    </li>\r\n                </ul>\r\n               \r\n                {\r\n                    cargando \r\n                        ? \r\n                            <ApiResponses.Loader activate={true}/> \r\n                        :\r\n                    error \r\n                        ? \r\n                            <ApiResponses.Error message={error} />\r\n                        :\r\n                    Id \r\n                        ? \r\n                            <div className={cn()}>\r\n                                <ScrollContainer\r\n                              \r\n                                 innerRef={this.container}>\r\n                            \t    <Tree  \r\n                            \t        lineWidth={'2px'}\r\n                            \t        lineColor={'gray'}\r\n                            \t        lineBorderRadius={'10px'}\r\n                            \t        label={\r\n                            \t            <StyledNode>\r\n                            \t               <h1>{this.props.organizationChartReducer.data.Area?.Name ? this.props.organizationChartReducer.data.Area?.Name : 'General'}</h1>\r\n                            \t            </StyledNode>\r\n                            \t        }\r\n                            \t    >\r\n                            \t        {\r\n                            \t            this.createOrganigrama(this.props.organizationChartReducer.data)\r\n                            \t        }\r\n                            \t    </Tree>\r\n                            \t</ScrollContainer>\r\n                            </div>\r\n                        : \r\n                            <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                        \r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer, areaReducer}) => {\r\n    return {organizationChartReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...areaActions\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PERSONAL_DETAIL_CARGANDO = \"personal_detail_cargando\";\r\nexport const PERSONAL_DETAIL_ERROR = \"personal_detail_error\";\r\nexport const PERSONAL_DETAIL_HANDLE_CHANGE = \"personal_detail_handle_change\";\r\nexport const PERSONAL_DETAIL_CLEAN_STATE = \"personal_detail_clean_state\";\r\nexport const PERSONAL_DETAIL_CRUD = \"personal_detail_crud\";\r\nexport const PERSONAL_DETAILS_LIST = \"personal_detail_list\";\r\nexport const PERSONAL_DETAIL_HANDLE_VALIDATION = \"personal_detail_handle_validation\";\r\n\r\nexport const GetPersonalDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\nexport const GetPersonalDetailsByCompanyId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/PersonalDetailsByCompanyId?companyId=${data.companyId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: PERSONAL_DETAILS_LIST};\r\n}\r\n\r\n\r\nexport const GetPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'personal_detail_put'};\r\n}\r\n\r\nexport const PostPersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeletePersonalDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/PersonalDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: PERSONAL_DETAIL_CRUD};\r\n}","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION, \r\n    GetPersonalDetails,\r\n    GetPersonalDetailsByCompanyId,\r\n    GetPersonalDetail,\r\n    PutPersonalDetail,\r\n    PostPersonalDetail,\r\n    DeletePersonalDetail\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const personalDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const personalDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const personalDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PERSONAL_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetPersonalDetails\":\r\n          answer = await GetPersonalDetails(); \r\n          break;\r\n\r\n        case \"GetPersonalDetailsByCompanyId\":\r\n          answer = await GetPersonalDetailsByCompanyId(data);\r\n          break;\r\n        \r\n          case \"GetPersonalDetail\":\r\n          answer = await GetPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PutPersonalDetail\":\r\n          answer = await PutPersonalDetail(data);\r\n          break;\r\n\r\n        case \"PostPersonalDetail\":\r\n          answer = await PostPersonalDetail(data);\r\n          break;\r\n        \r\n        case \"DeletePersonalDetail\":\r\n          answer = await DeletePersonalDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PERSONAL_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as positionActions from '../components-position/reducer/positionActions'\r\nimport * as personalDetailActions from '../components-personal-detail/reducer/personalDetailActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\n\r\n\r\nclass OrganizationChart extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {\r\n            nodeId, \r\n            organizationChartMethods, \r\n            personalDetailMethods,\r\n            areaMethods,\r\n            companyId, \r\n            positionMethods\r\n        } = this.props;\r\n        nodeId && await organizationChartMethods({Id: nodeId}, 'GetOrganizationChart');\r\n        companyId && await positionMethods({companyId: companyId}, 'GetPositionsByCompanyId')\r\n        companyId && await personalDetailMethods({companyId: companyId}, 'GetPersonalDetailsByCompanyId')\r\n        companyId && await areaMethods({companyId: companyId, areaId: this.props.organizationChartReducer.data.AreasId}, 'GetAreasByCompanyIdWithoutTaken')\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            organizationChartMethods, \r\n            organizationChartReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PositionId,\r\n                PositionChartId,\r\n                CompanyId,\r\n                PersonDetailId,\r\n                AreasId\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        debugger\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PositionId: PositionId ? Number(PositionId) : '',\r\n            PersonDetailId: PersonDetailId ?  Number(PersonDetailId) : '',\r\n            PositionChartId: PositionChartId ?  Number(PositionChartId) : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            AreasId: AreasId ? AreasId : ''\r\n        }\r\n        await organizationChartMethods(model, action);\r\n    }\r\n\r\n    actionOrganizationChart = async () => {\r\n        const {\r\n            areaMethods,\r\n            organizationChartCleanState,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id,\r\n                    AreasId\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            // if(AreasId){\r\n                await areaMethods({areaId: AreasId, organizationChartId: Id}, 'PutAreaTaken')\r\n                //hago taken y hago untaken del area id del organization chart\r\n            // }\r\n            await this.sendAction('PutOrganizationChart');\r\n        }\r\n        if(this.props.organizationChartReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            organizationChartCleanState()\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            organizationChartHandleValidation,\r\n            organizationChartHandleChange,\r\n            organizationChartReducer: {\r\n                data : {\r\n                    Id, \r\n                    PositionId,\r\n                    PersonDetailId,\r\n                    AreasId\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            positionReducer: {\r\n                list_positions\r\n            },\r\n            personalDetailReducer: {\r\n                list_personal_details\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }\r\n\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionOrganizationChart}\r\n                textButton={ 'Guardar Puesto' }\r\n                textButtonLoading={'Guardando Puesto...' }\r\n                validations={validations}\r\n                handleValidations={organizationChartHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Puesto'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PositionId'}\r\n                    placeHolder={'Selecciona un Puesto'}\r\n                    inputValue={PositionId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PositionId}\r\n                    optionPlaceHolder={'Selecciona un Puesto'}\r\n                    options={list_positions}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Empleado'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'PersonDetailId'}\r\n                    placeHolder={'Selecciona un Empleado'}\r\n                    inputValue={PersonDetailId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.PersonDetailId}\r\n                    optionPlaceHolder={'Selecciona un Empleado'}\r\n                    options={list_personal_details}\r\n                /> \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Area'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'AreasId'}\r\n                    placeHolder={'Selecciona una Area o Departamento'}\r\n                    inputValue={AreasId}\r\n                    onChange={organizationChartHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.AreasId}\r\n                    optionPlaceHolder={'Selecciona una Area o Departamento'}\r\n                    options={list_areas}\r\n                /> \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}) => {\r\n    return {organizationChartReducer, positionReducer, personalDetailReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...positionActions,\r\n    ...personalDetailActions,\r\n    ...areaActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);\r\n","import React  from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport { \r\n    DropdownItem\r\n} from 'reactstrap'\r\n\r\nimport {ApiResponses} from '../components-api'\r\nimport {connect} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nimport {Collapse, DropDowns} from '../config-components'\r\nimport './style.css'\r\n\r\nclass OrganizationChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.container  = React.createRef();\r\n        this.state = {\r\n          value: ''\r\n        }\r\n      }\r\n\r\n      async componentDidMount() {\r\n        const {\r\n            organizationChartMethods,\r\n            areaMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n        companyId && await areaMethods({companyId: companyId}, 'GetAreasByCompanyIdTaken')\r\n   \r\n       \r\n        this.centerDiagram();\r\n    }\r\n\r\n    \r\n    centerDiagram = () => {\r\n        const element = this.container.current;\r\n        if (element) {\r\n            //element.scrollTop = (element.scrollHeight - element.clientWidth) / 2;\r\n            element.scrollLeft = (element.scrollWidth - element.clientHeight) / 2;\r\n        }\r\n    }\r\n\r\n    createOrganigrama =  (organigrama, isOpenAux = false) => {\r\n        let ChartTree1 = organigrama?.ChartTree1\r\n        if(ChartTree1?.length === 0 || ChartTree1 === undefined || !ChartTree1){\r\n            \r\n            return <div>\r\n                    <Collapse.Node \r\n                        positionChartId={organigrama.Id}\r\n                        positionId = {organigrama.PositionId}\r\n                        labelButton={organigrama.PositionName}\r\n                        employee = { organigrama.PersonName}\r\n                        area = { organigrama.Area}\r\n                        addChild={() => this.addChild(organigrama?.Id)}\r\n                        deleteChild={() => this.deleteChild(organigrama?.Id)}\r\n                        updateNode={() => this.updateNode(organigrama?.Id)}\r\n                        watchChild={() => this.watchChild(organigrama.PositionChartId)}\r\n                        isOpenAux={isOpenAux}\r\n                    />\r\n            </div>\r\n        }\r\n        \r\n        return <Collapse.Node\r\n            positionChartId={organigrama.Id}\r\n            positionId = {organigrama.PositionId}\r\n            labelButton={organigrama.PositionName}\r\n            employee = { organigrama.PersonName}\r\n            area = { organigrama.Area}\r\n            addChild={() => this.addChild(organigrama?.Id)}\r\n            updateNode={() => this.updateNode(organigrama?.Id)}\r\n            watchChild={() => this.watchChild(organigrama.PositionChartId)}\r\n            isFirst={organigrama.PositionChartId}\r\n            isOpenAux={isOpenAux}\r\n        >\r\n            {\r\n                ChartTree1.map((child) => {  \r\n                             \r\n                    return <>\r\n                    \t{this.createOrganigrama(child)}\r\n                    </>\r\n                })\r\n            }\r\n        </Collapse.Node>\r\n    }\r\n\r\n    createOrigin = async () => {\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId},'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addUpChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    addChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({CompanyId: companyId, PositionChartId: parentId },'PostOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    deleteChild = async (parentId) => {\r\n        debugger\r\n        const {organizationChartMethods, companyId} = this.props;\r\n        await organizationChartMethods({Id: parentId },'DeleteOrganizationChart')\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId')\r\n    }\r\n\r\n    updateNode = (nodeId) => {\r\n        const {history, companyId} = this.props;\r\n        history.push(`/admin-dashboard/company/${companyId}/organization-chart/node/${nodeId}`)\r\n    }\r\n\r\n    getOrganizationChartByArea = async(e) => {\r\n        //e.preventDefault();\r\n        const value = e//e.target.value;\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        value === 'general' ? \r\n            await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId') :\r\n            await organizationChartMethods({companyId, areaId: value},'GetOrganizationChartByArea');\r\n    }\r\n\r\n    watchChild = async(positionChartId) => {\r\n        const {companyId, organizationChartMethods} = this.props;\r\n        await organizationChartMethods({companyId,positionChartId},'GetOrganizationChartByFatherPosition');\r\n    }\r\n\r\n    getCompleteOrganizationChart = async() => {\r\n        const {\r\n            organizationChartMethods,\r\n            companyId\r\n        } = this.props;\r\n        await organizationChartMethods({companyId},'GetOrganizationChartByCompanyId');\r\n    }\r\n\r\n    render () {\r\n\r\n        const { \r\n            organizationChartReducer:{\r\n                data: {Id},\r\n                api_actions: {\r\n                    cargando,\r\n                    error\r\n                }\r\n            },\r\n            areaReducer: {\r\n                list_areas\r\n            }, \r\n            hrefBase\r\n        } = this.props\r\n\r\n        return(\r\n            <div >\r\n               \r\n                <ul className=\"list-inline m-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${hrefBase}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Organigrama <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \">\r\n                        <DropDowns.DropDownActions labelButton='Areas'>\r\n                                <DropdownItem onClick={() => this.getOrganizationChartByArea('general')}>General</DropdownItem>\r\n                                {\r\n                                    list_areas.map(area => {\r\n                                        \r\n                                        return <DropdownItem onClick={() => this.getOrganizationChartByArea(area.Id)}>{area.Name}</DropdownItem>\r\n                                    })\r\n                                }\r\n                        </DropDowns.DropDownActions>\r\n                    </li>\r\n                    <li>\r\n                    <DropDowns.DropDownActions labelButton='Edición'>\r\n                        <DropdownItem >Editar</DropdownItem>\r\n                        <DropdownItem >Vista</DropdownItem>\r\n                    </DropDowns.DropDownActions>\r\n                    </li>\r\n                </ul>\r\n                {\r\n                    cargando \r\n                        ? \r\n                            <ApiResponses.Loader activate={true}/> \r\n                        :\r\n                    error \r\n                        ? \r\n                            <ApiResponses.Error message={error} />\r\n                        :\r\n                    Id \r\n                        ? \r\n                             \r\n                            <div className='m-4'> \r\n                                <h1>{this.props.organizationChartReducer.data.Area ? this.props.organizationChartReducer.data.Area : 'General'}</h1>\r\n                                {\r\n                                    this.createOrganigrama(this.props.organizationChartReducer.data, true)\r\n                                }\r\n                            </div>\r\n                            \t\r\n                        : \r\n                            <FaIcons.FaPlusCircle className=\"\" onClick={this.createOrigin}/>\r\n                        \r\n                } \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({organizationChartReducer, areaReducer}) => {\r\n    return {organizationChartReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...organizationChartActions,\r\n    ...areaActions\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrganizationChart);","import ComponentOrganizationChart from './OrganizationChart'\r\nimport ComponentUpdateChild from './UpdateChild'\r\nimport ComponentViewOrganizationChart from './ViewOrganizationChart'\r\nimport ComponentReadChild from './ReadChild'\r\n\r\nexport const OrganizationChart = ComponentOrganizationChart;\r\nexport const UpdateChild = ComponentUpdateChild;\r\nexport const ViewOrganizationChart = ComponentViewOrganizationChart;\r\nexport const ReadChild = ComponentReadChild;","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as organizationChartActions from './reducer/organizationChartActions'\r\n\r\nimport {Tabs} from '../config-components'\r\n\r\nconst ReadChild = ({positionChartId, tab}) => {\r\n    debugger\r\n    const organizationChartReducer = useSelector(state => state.organizationChartReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const { read_child } = organizationChartReducer;\r\n    useEffect(() => {\r\n        dispatch(organizationChartActions.organizationChartMethods({positionChartId},'GetPositionFromOrganization', 'loading-child'))\r\n        // return () => {\r\n        //     dispatch(organizationChartActions.organizationChartCleanState());\r\n        // }\r\n    }, [dispatch, positionChartId])\r\n\r\n    let arrayDeCadenas;\r\n    if(read_child.Responsibilities){\r\n        arrayDeCadenas = read_child.Responsibilities.split('-');\r\n        arrayDeCadenas.splice(0, 1);\r\n    } \r\n\r\n    let arrayDeCadenas2;\r\n    if(read_child.Competencias){\r\n        arrayDeCadenas2 = read_child.Competencias.split('-');\r\n        arrayDeCadenas2.splice(0, 1);\r\n    } \r\n    \r\n    \r\n    return (\r\n        <div className={'mb-4'}> \r\n            <Tabs.Tabs tab={tab}\r\n                children1={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Puesto:</div>\r\n                            <div className={'text-muted'}>{read_child.PositionName}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Objetivo:</div>\r\n                            <div className={'text-muted'}>{read_child.Objective}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Responsabilidades:</div>\r\n                            <ul>\r\n                                {arrayDeCadenas ? arrayDeCadenas.map(item => {\r\n                                    return (\r\n                                            <li className='text-muted'>{item}</li>\r\n                                        )\r\n                                    }    \r\n                                ) : 'No hay responsabilidades asignadas a este puesto.'}\r\n                            </ul>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Competencias:</div>\r\n                            <ul>\r\n                                {arrayDeCadenas2 ? arrayDeCadenas2.map(item => {\r\n                                    return (\r\n                                            <li className='text-muted'>{item}</li>\r\n                                        )\r\n                                    }    \r\n                                ) : 'No hay competencias asignadas a este puesto.'}\r\n                            </ul>\r\n                        </div>\r\n                        <div className='mb-4'>\r\n                            <div className={'font-weight-bold'}>Puntos: <span  className={'text-muted'}>{read_child.Puntos ? read_child.Puntos: 0}</span></div>\r\n                        </div>\r\n                    </>\r\n                }\r\n                children2={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Nombre:</div>\r\n                            <div className={'text-muted'}>{read_child.PersonName}</div>\r\n                        </div>\r\n                        {/* <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Sexo:</div>\r\n                            <div className={'text-muted'}>{read_child.Sexo}</div>\r\n                        </div> */}\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Edad:</div>\r\n                            <div className={'text-muted'}>{ read_child.Birthdate ? Number(new Date().getFullYear()) - Number(read_child.Birthdate.substr(0,4)) : ''}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Competencias:</div>\r\n                            <div className={'text-muted'}>{/* {read_child.Birthdate} */}</div>\r\n                        </div>\r\n                        {/* <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>RFC:</div>\r\n                            <div className={'text-muted'}>{read_child.RFC}</div>\r\n                        </div> */}\r\n                    </>\r\n                }\r\n                children3={\r\n                    <>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Nombre:</div>\r\n                            <div className={'text-muted'}>{read_child.PersonName}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Antiguedad:</div>\r\n                            <div className={'text-muted'}>{ read_child.DateAdmission ? Number(new Date().getFullYear()) - Number(read_child.DateAdmission.substr(0,4)) : ''}</div>\r\n                        </div>\r\n                        \r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Prestaciones:</div>\r\n                            <div className={'text-muted'}>{read_child.Benefits}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Sueldo Mensual:</div>\r\n                            <div className={'text-muted'}>{read_child.MonthlySalary}</div>\r\n                        </div>\r\n                        <div className='mb-2'>\r\n                            <div className={'font-weight-bold'}>Ingreso Total:</div>\r\n                            <div className={'text-muted'}>{read_child.TotalSalary}</div>\r\n                        </div>\r\n                        \r\n                    </>\r\n                }\r\n            ></Tabs.Tabs>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReadChild;","import React, { useState } from 'react';\r\nimport { \r\n  Collapse, \r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Card, \r\n  CardBody \r\n} from 'reactstrap';\r\nimport {ReadChild} from '../components-organization-chart'\r\nimport {Tabs} from '../config-components'\r\n\r\n// FontAwesome Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const Modals = ({positionChartId, children, tab}) => {\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <>\r\n      <span role=\"button\" onClick={toggle}>{children}</span>\r\n      <Modal isOpen={modal} toggle={toggle} >\r\n        <ModalHeader toggle={toggle}>Información</ModalHeader>\r\n        <ModalBody>\r\n          <ReadChild positionChartId={positionChartId} tab={tab} />\r\n        </ModalBody>\r\n        {/* <ModalFooter>\r\n          <Button color=\"danger\" onClick={toggle}>Quitar puesto</Button>{''}\r\n          <Button color=\"primary\" onClick={toggle}>Cerrar</Button>\r\n        </ModalFooter> */}\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nconst CollapseSection = ({\r\n  title = 'Sección',\r\n  countVideos = '0',\r\n  videos = [],\r\n  time = '30 min'\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n        <div onClick={toggle} className=\"d-flex bg-light border-bottom pointer p-3\">\r\n            <div className=\"flex-grow-1\">\r\n                <p className=\"font-weight-bold mb-0\">{title}</p>\r\n                <small>{countVideos} | {time}</small>\r\n            </div>\r\n            <div>\r\n                <FaIcons.FaChevronDown />\r\n            </div>\r\n        </div>\r\n      <Collapse isOpen={isOpen} className=\"p-3\">\r\n        {\r\n          videos.map((video, i ) => {\r\n            return (\r\n              <div className=\"d-flex mb-3\">\r\n                  {/*   <div className=\"mr-3\">\r\n                      <input type=\"checkbox\" class=\"\" id=\"\" />\r\n                  </div> */}\r\n                  <div>\r\n                      <p className=\"mb-0\">{`${i+1}. ${video.Name}`}</p>\r\n                      <small className=\"text-muted\"><FaIcons.FaPlayCircle className=\"mr-2\" /> 5 min</small>\r\n                  </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CollapseSection;\r\n\r\n\r\n\r\nexport const Node = ({\r\n  isFirst, \r\n  children,\r\n  area,\r\n  labelButton,\r\n  employee,\r\n  addChild,\r\n  updateNode,\r\n  deleteChild,\r\n  positionId,\r\n  name,\r\n  positionChartId,\r\n  watchChild,\r\n  isOpenAux = false\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(isOpenAux);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  const rArea = area ? area : '';\r\n  return (\r\n    <div>\r\n      <Card className='card-left mb-2 mr-0 pr-0'>\r\n        <CardBody className='mr-0 pr-0'>\r\n          <div className={'mr-0'}>\r\n            <small>\r\n            {rArea?.Name ? <div className='text-dark text-start' style={{textAlign: 'start'}}>\r\n                       {`Area: ${rArea.Name}`}\r\n                    </div> : ''}\r\n            </small>\r\n            <div className='d-flex my-2'>\r\n            \t<div></div>\r\n            \t<div onClick={toggle} className='font-weight-bold  mb-2 pointer mr-2' style={{textAlign: 'start'}}>\r\n                {\r\n                  !isOpen ? \r\n                    <FaIcons.FaChevronCircleRight  className=\"mr-1  text-muted\" /> : \r\n                    <FaIcons.FaChevronCircleDown className=\"mr-1 text-primary\" /> \r\n                }\r\n            \t</div>\r\n                <div  className='text-dark font-weight-bold text-start  mr-5' style={{textAlign: 'start'}}>\r\n                  <Modals positionChartId={positionChartId} tab={\"1\"} modalTitle={name} name={name} >\r\n                    {labelButton}\r\n                  </Modals>\r\n                </div>\r\n              <div className='text-dark text-start mr-5' style={{textAlign: 'start'}}>\r\n                <Modals positionChartId={positionChartId} tab={\"2\"} modalTitle={name} name={name} >\r\n                  {employee ? employee :'Empleado'}\r\n                </Modals>\r\n              </div> \r\n              <div className='mr-2'>\r\n                {\r\n                  isFirst !== null ?\r\n                  <FaIcons.FaEye  className=\"text-secondary\" onClick={watchChild} /> : \r\n                  ''\r\n                }\r\n              </div>\r\n              <div className='mr-2'>\r\n                  <FaIcons.FaUserEdit className=\"text-secondary\" onClick={updateNode}/>\r\n              </div>\r\n              <div className='mr-2'>\r\n                  <FaIcons.FaPlusCircle className=\"text-secondary\" onClick={addChild}/>\r\n              </div>\r\n              <div className='mr-2'>\r\n                  {deleteChild && <FaIcons.FaMinusCircle className='text-secondary' onClick={deleteChild}/>}\r\n              </div>\r\n                \r\n            </div>\r\n            <Collapse isOpen={isOpen}>\r\n              \r\n                {children}\r\n               \r\n            </Collapse>\r\n          </div>\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const A = ({\r\n    href='', \r\n    target='_blank', \r\n    className='',\r\n    children\r\n}) => {\r\n    return (\r\n        <a href={href} target={target} className={className}>{children} </a>\r\n    )\r\n}\r\n\r\nexport const AWhatsapp = ({phone, message,  target='_blank', children, className}) => {\r\n    return(\r\n        <A\r\n            href={`https://api.whatsapp.com/send?phone=${phone}&text=${message}`}\r\n            target={target}\r\n            className={className}\r\n        >\r\n            {children}\r\n        </A>\r\n    )\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nexport const Li = ({items}) => {\r\n    return (\r\n        <ul className=\"list-inline m-4\">\r\n            {items.map(item => {\r\n                return(\r\n                    <li key={item} className=\"list-inline-item\">\r\n                        <small  className={`${item?.last && 'font-weight-bold'}`}>\r\n                            {\r\n                                !item?.last ? \r\n                                <Link \r\n                                    to={`${item.href}`} \r\n                                    className={`text-muted`}\r\n                                >\r\n                                    {item.name}\r\n                                </Link> :\r\n                                item.name\r\n                            }\r\n                             \r\n                            \r\n                            {!item?.last && <FaIcons.FaChevronRight className=\"ml-1\" /> }\r\n                        </small>\r\n                    </li>\r\n                )\r\n            })}         \r\n        </ul>\r\n    )\r\n}","import * as ComponentCards from './Cards'\r\nimport * as ComponentDropDowns from './DropDowns'\r\nimport * as ComponentFilter from './Filter'\r\nimport * as ComponentInputs from './Inputs'\r\nimport * as ComponentModals from './Modals'\r\nimport * as ComponentNavbars from './Navbars'\r\nimport * as ComponentNotFound from './NotFound'\r\nimport * as ComponentRegularExpressions from './RegularExpressions'\r\nimport * as ComponentTabs from './Tabs'\r\nimport * as ComponentLogos from './Logos'\r\nimport * as ComponentLists from './Lists'\r\nimport * as ComponentCollapse from './Collapse'\r\nimport {A as Anchor, AWhatsapp as AnchorWhatsapp} from './ExternalLinks'\r\nimport * as ComponentListOfHistory from './ListOfHistory'\r\n\r\nexport const Logos = ComponentLogos;\r\nexport const Cards = ComponentCards;\r\nexport const DropDowns = ComponentDropDowns;\r\nexport const Filter = ComponentFilter;\r\nexport const Inputs = ComponentInputs;\r\nexport const Modals = ComponentModals;\r\nexport const Navbars = ComponentNavbars;\r\nexport const NotFound = ComponentNotFound;\r\nexport const Lists = ComponentLists;\r\nexport const RegularExpressions = ComponentRegularExpressions;\r\nexport const Tabs = ComponentTabs;\r\nexport const Collapse = ComponentCollapse\r\nexport const A = Anchor;\r\nexport const AWhatsapp = AnchorWhatsapp;\r\nexport const ListOfHistory = ComponentListOfHistory;\r\n","export default __webpack_public_path__ + \"static/media/hero-xs.fab06da0.png\";","export default __webpack_public_path__ + \"static/media/vscode.a1907119.svg\";","// Imports de react.\r\nimport React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport { Container, Row, Col, Card, CardBody, CardHeader, CardFooter, } from 'reactstrap';\r\n\r\n// Imports de config-components.\r\nimport {Navbars} from '../../config-components/Navbars'\r\n\r\nimport { A, AWhatsapp } from '../../config-components'\r\n// } from 'components-links'\r\n\r\n// Imports de assets.\r\nimport Heroxs from '../../img/hero-xs.png'\r\nimport { ImgOrganigrama, ImgPuestos, ImgDescripciones, ImgProcesos} from '../../img'\r\nimport WebApps from '../../img/vscode.svg'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nfunction Landing() {\r\n  return (\r\n    <div>\r\n        <Navbars />\r\n        <section id=\"hero\" className=\"bg-light d-flex py-6\">\r\n            <Container className=\"align-self-center\">\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        \r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <h1 className=\"display-4 font-weight-bold mb-3\">Somos expertos en Organización de empresas</h1>\r\n                        <p className=\"text-muted mb-4\">Creamos la Organización en tu empresa con las mejores herramientas tecnologicas, tenemos más de 40 años de experiencia</p>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                <img src={Heroxs} className=\"img-fluid d-block d-md-none mt-5\" />\r\n            </Container>\r\n        </section>\r\n\r\n        <section className='bg-light-2'>\r\n            <Container>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgOrganigrama className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Organigrama<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Una buena implementación de la Organización es conocer en detalle los roles que ejercen tus colaboradores.</p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Puestos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos los puestos de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgPuestos src={WebApps} className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\">\r\n                      <ImgDescripciones className=\"img-fluid rounded my-4\" />\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Perfiles<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Define claramente tus procesos y logra sitematizarlos</p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"py-6\">\r\n                    <Col lg=\"6\" className=\"d-flex\">\r\n                        <div className=\"align-self-center p-4\">\r\n                            <h2 className=\"display-4 font-weight-bold mb-4\">Procesos<span className=\"text-primary\">.</span></h2>\r\n                            <p className=\"text-muted mb-4\">Tener definidos las posiciones de tu empresa es indispensable para crecer en un mercado cada vez más competitivo. </p>\r\n                           \r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"6\">\r\n                        <ImgProcesos className=\"img-fluid rounded my-4\" />\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>  \r\n         \r\n        {/* <section className=\"py-6\">\r\n            <Container>\r\n                <div className=\"tab-container bg-light py-4 px-5\">\r\n                    <Example />\r\n                </div>\r\n            </Container>\r\n        </section>    */}\r\n       \r\n        <section className=\"py-7\">\r\n            <Container>\r\n                <div className=\"w-75 mx-auto text-center mb-5\">\r\n                    <p className=\"lead text-muted\">Dedícate a producir y vender, mientras nosotros organizamos tu empresa.</p>\r\n                    <button className=\"btn btn-primary\">\r\n                        <AWhatsapp \r\n                            phone='+525533333279' \r\n                            message={`Hola, Quiero más información`} \r\n                            className=\"text-white\"\r\n                        >Contáctanos </AWhatsapp>\r\n                    </button>\r\n                    \r\n                </div>\r\n            </Container>\r\n        </section>\r\n        <footer className=\"py-3\">\r\n            <Container>\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"list-inline-item mr-5\"><Link class=\"text-dark\" ><FaIcons.FaLinkedin className=\"text-dark mr-1\" /> Linkedin</Link></li>\r\n                            \r\n                        </ul>\r\n                    </Col>\r\n                    <Col lg=\"6\" className=\"text-right\">\r\n                        <p>© Version 4 2020. Derechos Reservados.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {  Card, CardBody, Badge  } from 'reactstrap';\r\n// Imports de assets.\r\nimport {ImgProduct} from '../img'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ReadCardProduct = ({uri, name='', description='', categories}) => {\r\n    return(\r\n        <Card className=\"border-0 mb-4\">\r\n            <CardBody>\r\n                <ImgProduct uri={uri} className=\"img-fluid rounded mb-3\"/>\r\n                <div className=\"mb-3\">\r\n                    {categories?.length > 0 ? \r\n                        categories.map(category => {\r\n                            return <Badge color=\"light\" className=\"mr-2\">{category.Name}</Badge>\r\n                        })  : ''  \r\n                    }\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"icon-card d-flex bg-light align-self-center mr-3\">\r\n                        <FaIcons.FaShoppingCart className=\"align-self-center mx-auto\" />\r\n                    </div>\r\n                    <div>\r\n                        <h5>{name}</h5>\r\n                        <h6>{description}</h6>\r\n                    </div>\r\n                </div>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ReadCardProduct;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_CARGANDO = \"product_cargando\";\r\nexport const PRODUCT_ERROR = \"product_error\";\r\nexport const PRODUCT_HANDLE_CHANGE = \"product_handle_change\";\r\nexport const PRODUCT_CLEAN_STATE = \"product_clean_state\";\r\nexport const PRODUCT_CRUD = \"product_crud\";\r\nexport const PRODUCTS_LIST = \"products_list\";\r\nexport const PRODUCT_HANDLE_VALIDATION = \"product_handle_validation\";\r\n\r\n\r\nexport const GetProducts = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Products`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProductsByCategoryId = async(data)=> {\r\n    debugger\r\n    const  answer = await axios_api(\r\n        `api/ProductsByCategoryId?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCTS_LIST};\r\n}\r\n\r\nexport const GetProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const PutProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}${data.includeBlobs ? ``:``}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_put'};\r\n}\r\n\r\nexport const PostProduct = async(data)=> {\r\n    const  answer = await axios_api(\"api/Product\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\nexport const DeleteProduct = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Product?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_CRUD};\r\n}\r\n\r\n\r\n","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_HANDLE_VALIDATION, \r\n    GetProducts,\r\n    GetProductsByCategoryId,\r\n    GetProduct,\r\n    PutProduct,\r\n    PostProduct,\r\n    DeleteProduct\r\n  } from \"./productTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProducts\":\r\n          answer = await GetProducts(); \r\n          break;\r\n\r\n        case 'GetProductsByCategoryId':\r\n          answer = await GetProductsByCategoryId(data); \r\n          break\r\n\r\n        case \"GetProduct\":\r\n          answer = await GetProduct(data);\r\n          break;\r\n\r\n        case \"PutProduct\":\r\n          answer = await PutProduct(data);\r\n          break;\r\n\r\n        case \"PostProduct\":\r\n          answer = await PostProduct(data);\r\n          break;\r\n        \r\n        case \"DeleteProduct\":\r\n          answer = await DeleteProduct(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\n\r\n\r\nconst CardProduct = () => {\r\n    const { productId } = useParams();\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n\r\n    const { data:{\r\n        Id,\r\n        Name,\r\n        Description,\r\n        Blobs,\r\n        fileCover,\r\n        Categories\r\n    } } = productReducer;\r\n\r\n    useEffect(() => {\r\n        productId && dispatch(productActions.productMethods({Id: productId}, 'GetProduct'))\r\n    }, [dispatch, productId, Id])\r\n\r\n    const blobProduct = Blobs.filter(el => el.BlobTypeId === 2 )\r\n    return (\r\n        <>\r\n            <ReadCardProduct uri={fileCover ? URL.createObjectURL(fileCover[0]) : blobProduct[0]?.Uri} name={Name} description={Description} categories={Categories}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardProduct;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Col} from 'reactstrap'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de components.\r\nimport ReadCardProduct from './ReadCardProduct'\r\nimport * as productActions from './reducer/productActions'\r\n\r\nconst ListOfCardProducts = () => {\r\n    const dispatch = useDispatch();\r\n    const productReducer = useSelector(state => state.productReducer);\r\n    const { list_products } = productReducer;\r\n    useEffect(() => {\r\n        list_products.length < 1 && dispatch(productActions.productMethods('', 'GetProducts'))\r\n    }, [dispatch, list_products ])\r\n    return (\r\n        <>\r\n            {\r\n                list_products.map(product => {\r\n                    const blobProduct = product.Blobs.filter(el => el.BlobTypeId === 1 )\r\n                    return (\r\n                        <Col lg='4'>\r\n                            <ReadCardProduct uri={blobProduct[0]?.Uri} name={product.Name} description={product.Description} />\r\n                        </Col>\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCardProducts;\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\nimport { Modals} from '../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n// Imports de actions.\r\nimport * as productActions from './reducer/productActions'\r\nconst ListOfCategories = ({title = 'Productos',reDirect, categoryProductId}) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    const productReducer = useSelector(state => state.productReducer)\r\n\r\n    const {\r\n        data: {\r\n            Id,\r\n            Name\r\n        },\r\n        api_actions: {cargando, error},\r\n        list_products\r\n    } = productReducer;\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        if(categoryProductId) {\r\n            dispatch(productActions.productMethods({Id: categoryProductId},'GetProductsByCategoryId'))\r\n        } else {\r\n            dispatch(productActions.productMethods('','GetProducts'))\r\n        }\r\n    }, [dispatch, categoryProductId])\r\n\r\n    const getProduct = (idProduct) => {\r\n        history.push(`${reDirect}/${idProduct}`)\r\n    }\r\n\r\n    const openDeleteModal = async(idProduct) => {\r\n        await dispatch(productActions.productMethods({Id: idProduct},'GetProduct'));\r\n    }\r\n\r\n    const deleteProduct = async() => {\r\n        await dispatch(productActions.productMethods({Id},'DeleteProduct'));\r\n        dispatch(productActions.productCleanState());\r\n        await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    const cleanProduct = async(cancel) => {\r\n        await dispatch(productActions.productCleanState());\r\n        !cancel && await dispatch(productActions.productMethods('','GetProducts'));\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n        <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n        <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{title}</small></li>\r\n    </ul>\r\n            {Id \r\n                ?  <Modals.ModalOpenDelete \r\n                        content={`Se eliminara el siguiente producto: \"${Name}\" con Id: #${Id}`}\r\n                        modalTitle={`Eliminar Producto ${Name}`}\r\n                        action={deleteProduct}\r\n                        clean={cleanProduct}\r\n                    />\r\n                : ''\r\n            }\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Nombre','Descripción','Acciones']}\r\n                propertiesTable={['Id','Name','Description']}\r\n                hrefCreate={'/admin-dashboard/create-product'}\r\n                bodyTable={list_products}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Producto', handleAction: getProduct },\r\n                    {action: 'Eliminar Producto', handleAction: openDeleteModal }\r\n                ]}\r\n            />\r\n        </>\r\n    )   \r\n}\r\n\r\nexport default ListOfCategories;\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const CATEGORY_CARGANDO = \"category_cargando\";\r\nexport const CATEGORY_ERROR = \"category_error\";\r\nexport const CATEGORY_HANDLE_CHANGE = \"category_handle_change\";\r\nexport const CATEGORY_CLEAN_STATE = \"category_clean_state\";\r\nexport const CATEGORY_CRUD = \"category_crud\";\r\nexport const CATEGORIES_LIST = \"categories_list\";\r\nexport const CATEGORY_HANDLE_VALIDATION = \"category_handle_validation\";\r\n\r\nexport const GetCategories = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Categories`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: CATEGORIES_LIST};\r\n}\r\n\r\nexport const GetCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const PutCategory = async(data)=> {\r\n    const  answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'put_category'};\r\n}\r\n\r\nexport const PostCategory = async(data)=> {\r\n    const answer = await axios_api(\"api/Category\", true, \"post\", data);\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n\r\nexport const DeleteCategory = async(data)=> {\r\n    const answer = await axios_api(`api/Category?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: CATEGORY_CRUD};\r\n}\r\n","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_HANDLE_VALIDATION,\r\n    GetCategories,\r\n    GetCategory,\r\n    PutCategory,\r\n    PostCategory,\r\n    DeleteCategory,\r\n  } from \"./categoryTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCategories\":\r\n          answer = await GetCategories();\r\n          break;\r\n\r\n        case \"GetCategory\":\r\n          answer = await GetCategory(data);\r\n          break;\r\n\r\n        case \"PutCategory\":\r\n          answer = await PutCategory(data);\r\n          break;\r\n\r\n        case \"PostCategory\":\r\n          answer = await PostCategory(data);\r\n          break;\r\n        \r\n        case \"DeleteCategory\":\r\n          answer = await DeleteCategory(data)\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","import ComponentCardProduct from './CardProduct'\r\nimport ComponentListOfCardProducts from './ListOfCardProducts'\r\nimport ComponentListOfProducts from './ListOfProducts'\r\nimport ComponentAddCategories from './AddCategories'\r\n\r\nexport const CardProduct = ComponentCardProduct;\r\nexport const ListOfCardProducts = ComponentListOfCardProducts;\r\nexport const ListOfProducts = ComponentListOfProducts;\r\nexport const AddCategories = ComponentAddCategories;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport {Container, Row} from 'reactstrap'\r\nimport {Navbars} from '../../config-components' \r\nimport {ListOfCardProducts} from '../../components-product'\r\n\r\nconst LandingProducts = () => {\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <section className=\"bg-light py-6\">\r\n                <Container>\r\n                    <Row>\r\n                    <ListOfCardProducts />\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingProducts;\r\n","import LandingSoftwareAgency from './SoftwareAgency'\r\nimport LandingProducts from './Products'\r\nimport LandingCourses from './Courses'\r\n\r\nexport const SoftwareAgency = LandingSoftwareAgency;\r\nexport const Products = LandingProducts;\r\nexport const Courses = LandingCourses;\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { Container } from 'reactstrap'\r\n\r\n// Imports de config-components\r\nimport {NotFound} from '../config-components/NotFound'\r\nimport {Navbars} from '../config-components/Navbars'\r\n\r\n\r\nexport const NotFoundPage = () => {\r\n    return (\r\n        <>\r\n            <Navbars />\r\n            <div className=\"bg-light py-6\">\r\n                <Container>\r\n                    <NotFound />\r\n                </Container>\r\n            </div>\r\n        </>\r\n    )\r\n}","export const LOGIN_CARGANDO = \"login_cargando\";\r\nexport const LOGIN_ERROR = \"login_error\";\r\nexport const LOGIN_HANDLE_CHANGE = \"login_handle_change\";\r\nexport const LOGIN_CLEAN_STATE = \"login_clean_state\";\r\nexport const LOGIN_USER = \"login_user\";\r\nexport const LOGIN_HANDLE_VALIDATION = \"login_handle_validation\";\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION,\r\n} from \"./loginTypes\";\r\n\r\nimport {\r\n  axios_api,\r\n  errorHandler,\r\n  setLocalStorage,\r\n} from \"../../components-api/ConfigApi\";\r\n\r\n/*\r\n *Metodo para serializar un objeto\r\n */\r\nconst parserJson = (obj) => {\r\n  var jsonSerialize = \"\";\r\n  for (const prop in obj) {\r\n    jsonSerialize += prop + \"=\" + obj[prop] + \"&\";\r\n  }\r\n  jsonSerialize = jsonSerialize.slice(0, -1);\r\n  return jsonSerialize;\r\n};\r\n\r\nexport const loginHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const loginHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const loginCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const loginMethods = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_CARGANDO,\r\n  });\r\n  try {\r\n    setLocalStorage();\r\n    const object = parserJson(data);\r\n    const answer = await axios_api(\"Token\", false, \"post\", object);\r\n    setLocalStorage(answer);\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    \r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: LOGIN_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const COMPANY_CARGANDO = \"company_cargando\";\r\nexport const COMPANY_ERROR = \"company_error\";\r\nexport const COMPANY_HANDLE_CHANGE = \"company_handle_change\";\r\nexport const COMPANY_CLEAN_STATE = \"company_clean_state\";\r\nexport const COMPANY_CRUD = \"company_crud\";\r\nexport const COMPANIES_LIST = \"companies_list\";\r\nexport const COMPANY_HANDLE_VALIDATION = \"company_handle_validation\";\r\n\r\nexport const GetCompanies = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/Companies`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\nexport const GetCompaniesByCompanyId = async(data)=> {\r\n  \r\n    const  answer = await axios_api(\r\n        `api/CompaniesByCompanyId?companyId=${data.companyId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\nexport const GetCompaniesByUser = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/CompaniesByUser`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANIES_LIST};\r\n}\r\n\r\nexport const GetCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const PutCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'company_put'};\r\n}\r\n\r\nexport const PostCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}\r\n\r\nexport const DeleteCompany = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/Company?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: COMPANY_CRUD};\r\n}","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_HANDLE_VALIDATION, \r\n    GetCompanies,\r\n    GetCompaniesByCompanyId,\r\n    GetCompany,\r\n    PutCompany,\r\n    PostCompany,\r\n    DeleteCompany,\r\n    GetCompaniesByUser\r\n  } from \"./companyTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const companyHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const companyHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const companyCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const companyMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: COMPANY_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetCompanies\":\r\n          answer = await GetCompanies(); \r\n          break;\r\n        case \"GetCompaniesByCompanyId\":\r\n          answer = await GetCompaniesByCompanyId(data); \r\n          break;\r\n          \r\n        case \"GetCompaniesByUser\":\r\n          answer = await GetCompaniesByUser(); \r\n          break;\r\n\r\n        case \"GetCompany\":\r\n          answer = await GetCompany(data);\r\n          break;\r\n\r\n        case \"PutCompany\":\r\n          answer = await PutCompany(data);\r\n          break;\r\n\r\n        case \"PostCompany\":\r\n          answer = await PostCompany(data);\r\n          break;\r\n        \r\n        case \"DeleteCompany\":\r\n          answer = await DeleteCompany(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: COMPANY_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport { RE_EMPTY } from \"../config-components/RegularExpressions\";\r\nimport {InputEmail, InputPassword, Form1} from '../config-components/Inputs'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as loginActions from \"./reducer-login/loginActions\";\r\nimport * as companyActions from \"../components-company/reducer/companyActions\";\r\nclass LoginForm extends Component {\r\n  ActionLogin = async () => {\r\n    const {\r\n      loginMethods,\r\n      companyMethods,\r\n      loginReducer: {\r\n        data: { grant_type, username, password },\r\n      },\r\n    } = this.props;\r\n    const ModelLogin = {\r\n      grant_type: grant_type,\r\n      username: username,\r\n      password: password,\r\n    };\r\n    await loginMethods(ModelLogin);\r\n    if (this.props.loginReducer.data.access_token) {\r\n      if (localStorage.getItem(\"role\") === \"Admin\") {\r\n        window.open(`/admin-dashboard`, \"_self\");\r\n      }\r\n      if (localStorage.getItem(\"role\") === \"User\") {\r\n        await companyMethods('', 'GetCompaniesByUser')\r\n        const { list_companies} = this.props.companyReducer;\r\n        debugger\r\n        window.open(`/user-dashboard/company/${list_companies[0].Id}`, \"_self\");\r\n      }\r\n      if (!localStorage.getItem(\"role\")) {\r\n        window.open(`/`, \"_self\");\r\n      }\r\n    }\r\n  };\r\n\r\n  handleRedirect = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/sign-up\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loginHandleValidation,\r\n      loginHandleChange,\r\n      loginReducer: {\r\n        data: { username, password },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <Form1\r\n          loading={cargando}\r\n          error={error}\r\n          action={this.ActionLogin}\r\n          textButton={'Iniciar Sesión'}\r\n          textButtonLoading={'Iniciando sesión...'}\r\n          validations={validations}\r\n          handleValidations={loginHandleValidation}\r\n        >\r\n          <InputEmail  \r\n            name='username'\r\n            inputValue={username}\r\n            onChange={loginHandleChange} \r\n            label='Nombre de usuario o correo'\r\n            RE={RE_EMPTY}\r\n            validateRE={validations.username}\r\n          />\r\n          <InputPassword\r\n            inputValue={password}\r\n            onChange={loginHandleChange}\r\n            validateRE={validations.password}\r\n            forgotPassword={true}\r\n          />\r\n        </Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ loginReducer, companyReducer }) => {\r\n  return { loginReducer, companyReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...loginActions,\r\n  ...companyActions\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n","export const SIGN_UP_CARGANDO = \"sign_up_cargando\";\r\nexport const SIGN_UP_ERROR = \"sign_up_error\";\r\nexport const SIGN_UP_HANDLE_CHANGE = \"sign_up_handle_change\";\r\nexport const SIGN_UP_CLEAN_STATE = \"sign_up_clean_state\";\r\nexport const SIGN_UP_USER = \"sign_up_user\";\r\nexport const SIGN_UP_HANDLE_VALIDATION = \"sign_up_handle_validation\";\r\nexport const SIGN_UP_PRELOADED_DATA = \"sign_up_preloaded_data\";\r\n\r\n\r\n","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const signUpHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const signUpHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const signUpCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const signUpPreloadedData = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_PRELOADED_DATA,\r\n    payload: data,\r\n  });\r\n};\r\n\r\n\r\nexport const signUpMethods = (data, token) => async (dispatch) => {\r\n  dispatch({\r\n    type: SIGN_UP_CARGANDO,\r\n  });\r\n  try {\r\n    const answer = await axios_api(\"api/Account/Register\", token, \"post\", data);\r\n    dispatch({\r\n      type: SIGN_UP_USER,\r\n      payload: answer.data,\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: SIGN_UP_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../config-components';\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as signUpActions from \"./sign-up-reducer/signUpActions\";\r\n\r\nclass SignUp extends Component {\r\n  componentDidMount() {\r\n    this.props.signUpReducer.data.Roles = this.props.role;\r\n  }\r\n  action = async () => {\r\n    const {\r\n      signUpMethods,\r\n      signUpCleanState,\r\n      signUpReducer: {\r\n        data: {\r\n          UserName,\r\n          Email,\r\n          PhoneNumber,\r\n          Password,\r\n          ConfirmPassword,\r\n          ValidateByPhoneOrEmail,\r\n          Roles,\r\n          TypeUser\r\n        },\r\n      },\r\n      role,\r\n      reDirect,\r\n      history,\r\n      token\r\n    } = this.props;\r\n\r\n    const ModelSignUp = {\r\n      UserName: UserName,\r\n      Email: Email,\r\n      PhoneNumber: PhoneNumber,\r\n      Password: Password,\r\n      ConfirmPassword: ConfirmPassword,\r\n      ValidateByPhoneOrEmail: ValidateByPhoneOrEmail,\r\n      Roles: Roles,\r\n      TypeUser: TypeUser\r\n    };\r\n\r\n    await signUpMethods(ModelSignUp, token);\r\n   \r\n    if (this.props.signUpReducer.data.Id) {\r\n        role === 'User' \r\n        ? history.push(`${reDirect}/${this.props.signUpReducer.data.Id}`)\r\n        : history.push(reDirect) \r\n        signUpCleanState();\r\n           \r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      signUpHandleChange,\r\n      signUpHandleValidation,\r\n      signUpReducer: {\r\n        data: { UserName, Email, Password, ConfirmPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      }\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${Password}$`)\r\n    return (\r\n       <>\r\n            <Inputs.Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.action}\r\n                textButton={'Registrar'}\r\n                textButtonLoading={'Registrando ...'}\r\n                validations={validations}\r\n                handleValidations={signUpHandleValidation}\r\n            >\r\n                <Inputs.InputEmail \r\n                    inputValue={Email}\r\n                    onChange={signUpHandleChange} \r\n                    validateRE={validations.Email}\r\n                />\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre de usuario'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'UserName'}\r\n                    placeHolder={'Introduce un nombre de usuario'}\r\n                    inputValue={UserName}\r\n                    onChange={signUpHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.UserName}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={Password}\r\n                    onChange={signUpHandleChange}\r\n                    validateRE={validations.Password}\r\n                    inputName={'Password'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmPassword}\r\n                    onChange={signUpHandleChange}\r\n                    inputName={'ConfirmPassword'}\r\n                    validateRE={validations.ConfirmPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ signUpReducer }) => {\r\n  return { signUpReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...signUpActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import { axios_api } from \"../../../components-api/ConfigApi\";\r\n\r\nexport const CHANGE_PASSWORD_CARGANDO = \"change_password_cargando\";\r\nexport const CHANGE_PASSWORD_ERROR = \"change_password_error\";\r\nexport const CHANGE_PASSWORD_HANDLE_CHANGE = \"change_password_handle_change\";\r\nexport const CHANGE_PASSWORD_CLEAN_STATE = \"change_password_clean_state\";\r\nexport const CHANGE_PASSWORD_USER = \"change_password_user\";\r\nexport const CHANGE_PASSWORD_HANDLE_VALIDATION = \"change_password_handle_validation\";\r\n\r\nexport const SetPassword = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/SetPassword`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type:'set_password_put'};\r\n}\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n    SetPassword\r\n  } from \"./changePasswordTypes\";\r\n  \r\n  import {\r\n    axios_api,\r\n    errorHandler,\r\n  } from \"../../../components-api/ConfigApi\";\r\n   \r\n  export const changePasswordHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const changePasswordHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const changePasswordMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CHANGE_PASSWORD_CARGANDO,\r\n    });\r\n    try {\r\n      \r\n      let answer;\r\n      let type = CHANGE_PASSWORD_USER;\r\n      switch(method){\r\n        case 'send_email_code':\r\n            let route = `api/Account/SendVerificationCode?phoneOrEmail=${data.phoneOrEmail}&usernameOrEmailOrPhoneNumber=${data.phoneOrEmail}`\r\n            answer= await axios_api( route, false, \"get\");\r\n            break;\r\n        case 'change_password':\r\n            answer= await axios_api( `/api/Account/ResetPassword`, false, \"post\", data);\r\n            break;\r\n        case 'SetPassword' :\r\n            answer= await SetPassword(data)\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n      \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CHANGE_PASSWORD_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePassword extends Component {\r\n  action = async () => {\r\n    \r\n    const {\r\n      changePasswordMethods, \r\n      changePasswordReducer: { \r\n        data: {\r\n          NewPassword,\r\n          ConfirmNewPassword,\r\n        }\r\n      },\r\n      code,\r\n      email,\r\n      history,\r\n      reDirect\r\n      } = this.props;\r\n\r\n    const modelChangePassword = {\r\n      phoneOrEmail: email,\r\n      Code: code,\r\n      NewPassword: NewPassword,\r\n      ConfirmNewPassword: ConfirmNewPassword,\r\n      usernameOrEmailOrPhoneNumber: email\r\n    }\r\n    await changePasswordMethods(modelChangePassword, 'change_password')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { Code,\r\n          NewPassword,\r\n          ConfirmNewPassword },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n      code\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.action}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Código'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce tu código'}\r\n                    inputValue={code ? code : Code}\r\n                    onChange={changePasswordHandleChange}\r\n                    maxLength={50}\r\n                    RE={RegularExpressions.RE_EMPTY}\r\n                    validateRE={validations.Code}\r\n                    readonly\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass ChangePasswordForUser extends Component {\r\n  actionChangePasswordForUser = async () => {\r\n    const { changePasswordMethods, userId, changePasswordReducer: {data:{ NewPassword,  ConfirmNewPassword}} } = this.props;\r\n    await changePasswordMethods({NewPassword,  ConfirmPassword: ConfirmNewPassword, UserId: userId},'SetPassword');\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: {\r\n            NewPassword,\r\n            ConfirmNewPassword },\r\n            validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n    RegularExpressions.RE_PASSWORD_MATCHES.re =  new RegExp( `^${NewPassword}$`);\r\n  \r\n    return (\r\n        <>\r\n            <Inputs.Form1\r\n              loading={cargando}\r\n              error={error}\r\n              action={this.actionChangePasswordForUser}\r\n              textButton={'Cambiar Contraseña'}\r\n              textButtonLoading={'Cambiando contraseña...'}\r\n              validations={validations}\r\n              handleValidations={changePasswordHandleValidation}\r\n            >\r\n                <Inputs.InputPassword\r\n                    inputValue={NewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    validateRE={validations.NewPassword}\r\n                    inputName={'NewPassword'}\r\n                />\r\n                <Inputs.InputPassword\r\n                    textLabel = 'Repite la contraseña'\r\n                    inputValue={ConfirmNewPassword}\r\n                    onChange={changePasswordHandleChange}\r\n                    inputName={'ConfirmNewPassword'}\r\n                    validateRE={validations.ConfirmNewPassword}\r\n                    RE={RegularExpressions.RE_PASSWORD_MATCHES }  \r\n                />\r\n            </Inputs.Form1>\r\n        </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePasswordForUser);\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as changePasswordActions from \"./reducer/changePasswordActions\";\r\n\r\nclass SendEmail extends Component {\r\n  action = async () => {\r\n    const {changePasswordMethods,\r\n        history,\r\n        reDirect\r\n      } = this.props;\r\n     let email =  this.props.changePasswordReducer.data.phoneOrEmail;\r\n    await changePasswordMethods({phoneOrEmail: email}, 'send_email_code')\r\n    history.push(reDirect)\r\n  };\r\n\r\n  render() {\r\n    \r\n    const {\r\n      changePasswordHandleChange,\r\n      changePasswordHandleValidation,\r\n      changePasswordReducer: {\r\n        data: { phoneOrEmail },\r\n        validations,\r\n        api_actions: { cargando, error },\r\n      },\r\n    } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <Inputs.Form1\r\n           loading={cargando}\r\n           error={error}\r\n           action={this.action}\r\n           textButton={'Continuar'}\r\n           textButtonLoading={'Enviando Email...'}\r\n           validations={validations}\r\n           handleValidations={changePasswordHandleValidation}\r\n        >\r\n          <Inputs.InputEmail  \r\n            name='phoneOrEmail'\r\n            inputValue={phoneOrEmail}\r\n            onChange={changePasswordHandleChange} \r\n            label='Correo'\r\n            RE={RegularExpressions.RE_EMAIL}\r\n            validateRE={validations.phoneOrEmail}\r\n          />\r\n        </Inputs.Form1>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ changePasswordReducer }) => {\r\n  return { changePasswordReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...changePasswordActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SendEmail);\r\n","import ComponentLogin from './Login'\r\nimport ComponentSignUp from './SignUp'\r\nimport ComponentChangePassword from './change-password/ChangePassword'\r\nimport ComponentChangePasswordForUser from './change-password/ChangePasswordForUser'\r\nimport ComponentVerifyAccount from './change-password/VerifyAccount'\r\nimport ComponentSendEmail from './change-password/SendEmail'\r\n\r\nexport const Login = ComponentLogin;\r\nexport const SignUp = ComponentSignUp;\r\nexport const ChangePassword = ComponentChangePassword;\r\nexport const VerifyAccount = ComponentVerifyAccount;\r\nexport const SendEmail = ComponentSendEmail;\r\nexport const ChangePasswordForUser = ComponentChangePasswordForUser;\r\n","// Imports de react.\r\nimport React from 'react';\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Container, \r\n    Card, \r\n    CardBody,\r\n} from 'reactstrap';\r\nimport {Logos, Navbars} from '../../config-components'\r\n\r\n\r\n\r\n// Imports de sessión components\r\nimport {Login, SendEmail, ChangePassword, SignUp} from '../../components-session'\r\n\r\nconst LayoutSection = ({children, message='',classSection='', classContainer='', classLogo= '', classCard='', classCardBody = ''}) =>{\r\n    return (\r\n        <section className={classSection}>\r\n            <Container className={ classContainer}>\r\n                <Card className={classCard}>\r\n                    <CardBody className={classCardBody}>\r\n                        {children} \r\n                        {message}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        {/* <h4 className=\"font-weight-bold mb-4\">Iniciar sesión</h4>      */}\r\n                        <Login />   \r\n                        {/* <p className=\"text-center mb-0\">¿No tienes una cuenta? <Link to='/sign-up'>Crea una cuenta</Link></p> */}\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ForgotPassword = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-0\">Restablecer contraseña</h4>     \r\n                        <p className=\"text-muted\">Ingresa el email que tienes registrado</p>\r\n                        <SendEmail\r\n                            history={history}\r\n                            reDirect='/check-your-account'\r\n                        />   \r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const CheckYourAccount = () => {\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6 mt-5\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Revisa tu correo</h4>     \r\n                        <p className=\"text-muted\">Te hemos enviado código a tu email, si no \r\n                            lo ves en tu bandeja de entrada, revisa en spam y correos no deseados.</p> \r\n                        <Link to=\"/login\"  className=\"btn btn-primary w-100\">Iniciar sesión</Link>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const ChangePasswordPage = () => {\r\n    const {code, email} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n        <Navbars.Navbars />\r\n        <section className=\"bg-light h-100 py-6\">\r\n            <Container>\r\n                <Card className=\"mx-auto card-form border-0\">\r\n                    <CardBody>\r\n                        <h4 className=\"font-weight-bold mb-4\">Restablecer Contraseña</h4>    \r\n                        <p className=\"text-muted mb-4\">Ingresa el email que tienes registrado</p>\r\n                        <ChangePassword reDirect='/login' code={code} email={email} history={history}/>\r\n                    </CardBody>\r\n                </Card>\r\n            </Container>\r\n        </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const SignUpPage = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Navbars.Navbars />\r\n            <LayoutSection\r\n                classSection='bg-light h-100 py-6 mt-5'\r\n                classCard='mx-auto card-form border-0'\r\n                message={\r\n                    <p className=\"text-center mb-0\">¿Ya tienes una cuenta? <Link to='/login'>Inicia Sesión</Link></p>\r\n                }\r\n            >\r\n                <h4 className=\"font-weight-bold mb-4\">Registrate</h4>     \r\n                <SignUp history={history} role='User' reDirect={'/check-your-account'} />\r\n            </LayoutSection>      \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export const ANALYTICS_CARGANDO = \"analytics_cargando\";\r\nexport const ANALYTICS_ERROR = \"analytics_error\";\r\nexport const ANALYTICS_CLEAN_STATE = \"analytics_clean_state\";\r\nexport const ANALYTICS_COUNT_PRODUCTS = \"analytics_count_companiesxxx\";\r\nexport const ANALYTICS_COUNT_COURSES = \"analytics_count_courses\";\r\nexport const ANALYTICS_COUNT_USERS = \"analytics_count_users\";\r\nexport const ANALYTICS_COUNT_ADMINS = \"analytics_count_admins\";\r\nexport const ANALYTICS_COUNT_COMPANIES = \"analytics_count_companies\";\r\nexport const ANALYTICS_COUNT_POSITIONS = \"analytics_count_positions\";\r\nexport const ANALYTICS_COUNT_PERSONAL_DETAILS = \"analytics_count_personal_details\";\r\nexport const ANALYTICS_COUNT_AREAS = \"analytics_count_areas\";\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const analyticsCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const analyticsMethods = (method, data='') => async (dispatch) => {\r\n    dispatch({\r\n      type: ANALYTICS_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type;\r\n      switch (method) {\r\n        case \"count_products\":\r\n            answer = await axios_api(`api/CountProducts`, true, \"get\");\r\n            type = ANALYTICS_COUNT_PRODUCTS;\r\n            break;\r\n        case \"count_courses\":\r\n          answer = await axios_api(`api/CountProductsByCategoryId?id=${data.Id}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COURSES;\r\n          break;\r\n        case \"count_users\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=User&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_USERS;\r\n          break;\r\n        case \"count_admins\":\r\n          answer = await axios_api(`api/Account/UsersCount?roleName=Admin&isConfirmed=false`, true, \"get\");\r\n          type = ANALYTICS_COUNT_ADMINS;\r\n          break;\r\n        case \"count_companies\":\r\n          answer = await axios_api(`api/CountCompanies`, true, \"get\");\r\n          type = ANALYTICS_COUNT_COMPANIES;\r\n          break;\r\n        case \"count_positions\":\r\n          answer = await axios_api(`api/CountPositions?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_POSITIONS;\r\n          break;\r\n        case \"count_personal_details\":\r\n          answer = await axios_api(`api/CountPersonalDetails?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_PERSONAL_DETAILS;\r\n          break;\r\n        case \"count_areas\":\r\n          answer = await axios_api(`api/CountAreas?companyId=${data.companyId}`, true, \"get\");\r\n          type = ANALYTICS_COUNT_AREAS;\r\n          break;\r\n        default:\r\n            break\r\n  \r\n          \r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: ANALYTICS_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods} = this.props;\r\n        await analyticsMethods('count_courses', {Id:6})\r\n        await analyticsMethods('count_users')\r\n        await analyticsMethods('count_admins')\r\n        await analyticsMethods('count_companies')\r\n    }\r\n    render(){\r\n        const {\r\n           \r\n            count_companies,\r\n            count_users,\r\n            count_admins,\r\n            api_actions:{\r\n                cargando,\r\n            }\r\n        } = this.props.analyticsReducer;\r\n        const cardAnalytics = [\r\n            {\r\n                id: '4-a',\r\n                title: 'Admins',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_admins,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/admins'\r\n            },\r\n            {\r\n                id: '2-a',\r\n                title: 'Usuarios',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_users,\r\n                icon: <FaIcons.FaUserAlt className=\"mr-2\" />,\r\n                href: '/admin-dashboard/users'\r\n            },\r\n            {\r\n                id: '1-a',\r\n                title: 'Empresas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_companies,\r\n                icon: <FaIcons.FaDiceD6 className=\"mr-2\" />,\r\n                href: '/admin-dashboard/companies'\r\n            },       \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer}) => {\r\n    return {analyticsReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const ADMIN_CARGANDO = \"admin_cargando\";\r\nexport const ADMIN_ERROR = \"admin_error\";\r\nexport const ADMIN_HANDLE_CHANGE = \"admin_handle_change\";\r\nexport const ADMIN_CLEAN_STATE = \"admin_clean_state\";\r\nexport const ADMIN_CRUD = \"admin_crud\";\r\nexport const ADMIN_HANDLE_VALIDATION = \"admin_handle_validation\";\r\nexport const ADMIN_USERS_LIST = \"admins_list\";\r\n\r\nexport const GetUserInfo = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/Account/UserInfo?userId=${data.userId}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n\r\nexport const GetUsersInfo = async(data) =>{\r\n    const answer = await axios_api(\r\n        `api/Account/UsersInfo?roleName=${data.roleName}`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type:ADMIN_USERS_LIST};\r\n}\r\n\r\nexport const PutContactInfo = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/PutContactInfo`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type:'contact_info_put'};\r\n}\r\n\r\nexport const ValidateAccount = async(data) => {\r\n    const  answer = await axios_api(\r\n        `api/Account/ValidateAccount`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: ADMIN_CRUD};\r\n}\r\n","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    GetUserInfo,\r\n    PutContactInfo,\r\n    GetUsersInfo,\r\n    ValidateAccount\r\n  } from \"./adminTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const adminHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n  \r\n  export const adminHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const adminCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const adminMethods = (data, method, loading = 'cargando', typeError = 'error') => async (dispatch) => {\r\n    dispatch({\r\n      type: ADMIN_CARGANDO,\r\n      payload: loading //? {cargando: loading} : {cargando: 'cargando'}\r\n    });\r\n    try {\r\n      let answer;\r\n     \r\n      switch (method) {\r\n        case \"GetUserInfo\":\r\n            answer = await GetUserInfo(data);\r\n            break;\r\n        case \"GetUsersInfo\":\r\n            answer = await GetUsersInfo(data);\r\n            break;\r\n        case \"PutContactInfo\":\r\n            answer = await PutContactInfo(data)\r\n            break;\r\n        case \"ValidateAccount\":\r\n            answer = await ValidateAccount(data);\r\n            break;\r\n        default:\r\n            break;\r\n      }\r\n     \r\n      dispatch({\r\n        type: answer.type,\r\n        payload: answer.res.data,\r\n      });\r\n    } catch (error) {    \r\n      let messageError = errorHandler(error);\r\n      let objectError = {\r\n        messageError: messageError,\r\n        typeError : typeError //? typeError : 'error'\r\n      }\r\n      dispatch({\r\n        type: ADMIN_ERROR,\r\n        payload: objectError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as adminActions from './reducer/adminActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfUsers = ({roleName = 'User', title='Usuarios', create='/create-user'}) => {\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(adminActions.adminMethods({roleName: roleName},'GetUsersInfo'))\r\n    }, [dispatch, roleName])\r\n    \r\n    const getUser = (userId) => {\r\n        let typeUser = roleName === 'User' ? 'user' : 'admin'\r\n        history.push(`/admin-dashboard-read-${typeUser}/${userId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_users\r\n    } = adminReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Usuarios</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Usuario','Acciones']}\r\n                propertiesTable={['Id','UserName']}\r\n                hrefCreate={`/admin-dashboard${create}`}\r\n                bodyTable={list_users}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Usuario', handleAction: getUser },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfUsers;\r\n\r\n","// Imports de librerias de react.\r\nimport React, { Component } from \"react\";\r\n\r\n// Imports de config-components\r\nimport { Inputs, RegularExpressions } from '../config-components'\r\n\r\n// Imports de actions.\r\nimport { connect } from \"react-redux\";\r\nimport * as adminActions from \"./reducer/adminActions\";\r\n\r\nclass UpdateContactInfo extends Component {\r\n    async componentDidMount() {\r\n        const { adminMethods, userId } = this.props;\r\n        await adminMethods({userId},'GetUserInfo' ); \r\n    }\r\n    action = async () => {\r\n        const { \r\n            adminMethods, \r\n            userId, \r\n            adminReducer: {\r\n                data:{ \r\n                    Email, \r\n                    PhoneNumber,\r\n                    UserName,\r\n                    TypeUser \r\n                }\r\n            },\r\n            closeModal\r\n        } = this.props;\r\n\r\n        const contactModel= {\r\n            NewUserName: UserName,\r\n            NewTypeUser: TypeUser,\r\n            NewPhoneNumber: PhoneNumber,\r\n            NewEmail: Email,\r\n            UserId: userId\r\n        }\r\n\r\n        await adminMethods( contactModel,'PutContactInfo')\r\n        \r\n        const {\r\n            adminReducer: {\r\n            api_actions: { error },  \r\n            },\r\n        } = this.props;\r\n\r\n        if(error){\r\n\r\n        }else{\r\n            closeModal && closeModal();\r\n        }\r\n        \r\n    };\r\n\r\n    async componentWillUnmount(){\r\n        const { adminCleanState, adminMethods, userId } = this.props;\r\n        adminCleanState();\r\n        await adminMethods({userId},'GetUserInfo')\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            adminHandleChange,\r\n            adminHandleValidation,\r\n            adminReducer: {\r\n                data: { Email, PhoneNumber, UserName },\r\n                validations,\r\n                api_actions: { cargando, error },   \r\n            }\r\n        } = this.props;\r\n        return (\r\n            <>\r\n                <Inputs.Form1\r\n                     loading={cargando}\r\n                     error={error}\r\n                     action={this.action}\r\n                     textButton={'Actualizar'}\r\n                     textButtonLoading={'Actualizando ...'}\r\n                     validations={validations}\r\n                     handleValidations={adminHandleValidation}\r\n                >\r\n                    <Inputs.InputEmail \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Email'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='email'\r\n                        inputName={'Email'}\r\n                        placeHolder={'Introduce un Email'}\r\n                        inputValue={Email}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.Email}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Nombre de usuario'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'UserName'}\r\n                        placeHolder={'Introduce un nombre de usuario'}\r\n                        inputValue={UserName}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.UserName}\r\n                    />\r\n                    <Inputs.InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Celular'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'PhoneNumber'}\r\n                        placeHolder={'Introduce un Celular'}\r\n                        inputValue={PhoneNumber}\r\n                        onChange={adminHandleChange}\r\n                        maxLength={50}\r\n                        RE={RegularExpressions.RE_EMPTY}\r\n                        validateRE={validations.PhoneNumber}\r\n                    />\r\n                    \r\n                </Inputs.Form1>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = ({ adminReducer }) => {\r\n  return { adminReducer };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  ...adminActions,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateContactInfo);\r\n","import React, {useEffect} from 'react'\r\nimport {Button } from 'reactstrap'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport * as adminActions from './reducer/adminActions'\r\nimport {ApiResponses} from '../components-api'\r\nconst ValidateAccount = ({title}) => {\r\n    const {userId} = useParams();\r\n    const dispatch = useDispatch();\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(adminActions.adminMethods({userId},'GetUserInfo'))\r\n    // }, [dispatch, userId])\r\n\r\n    const {\r\n        data:{\r\n            EmailConfirmed,\r\n        },\r\n        api_actions:{\r\n            cargando,\r\n            error, \r\n            cargandoValidateAccount\r\n        }\r\n    } = adminReducer\r\n\r\n    if(cargando){\r\n        return <></>\r\n    }\r\n    const action = () =>{\r\n        dispatch(adminActions.adminMethods({Active: !EmailConfirmed, UserId: userId},'ValidateAccount'), 'cargandoValidateAccount')\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h5 className=\"font-weight-bold mb-3\">Cuenta: {EmailConfirmed}</h5>\r\n            <Button className={`btn btn-${EmailConfirmed ? 'success' : 'danger'}`} onClick={action}> \r\n                {EmailConfirmed ? 'Validada' : 'No Validada'} <ApiResponses.Loader activate={cargandoValidateAccount}/> \r\n            </Button>\r\n            {error && <ApiResponses.Error message={error}/>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ValidateAccount;","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {Inputs, RegularExpressions} from '../config-components'\r\n\r\n// Imports de actions.\r\nimport * as adminActions from './reducer/adminActions'\r\n\r\nimport {Arrays} from '../utils'\r\n\r\nconst SelectUser = ({\r\n    UserId,\r\n    onChange,\r\n    validations\r\n}) => {\r\n    const adminReducer = useSelector(state => state.adminReducer)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {    \r\n        dispatch(adminActions.adminMethods({roleName: \"User\"},'GetUsersInfo'))\r\n    }, [dispatch])\r\n    \r\n    const {\r\n        list_users\r\n    } = adminReducer;\r\n\r\n    let fix_select = Arrays.fixSelect('Id','UserName',list_users)\r\n\r\n    return(\r\n        <>\r\n            <Inputs.InputText \r\n                classLabel='font-weight-bold'\r\n                textLabel='Usuario'\r\n                isMandatory='*'\r\n                classMandatory=''\r\n                inputType='select'\r\n                inputName={'UserId'}\r\n                placeHolder={'Selecciona un usuario'}\r\n                inputValue={UserId}\r\n                onChange={onChange}\r\n                RE={RegularExpressions.RE_EMPTY}\r\n                validateRE={validations}\r\n                optionPlaceHolder={'Selecciona un usuario'}\r\n                options={fix_select}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectUser;\r\n\r\n","import ComponentIdicators from './Indicators'\r\nimport ComponentsListOfUsers from './ListOfUsers' \r\nimport ComponentReadUser from './ReadUser'\r\nimport ComponentUpdateUserInfo from './UpdateUserInfo'\r\nimport ComponentValidateAccount from './ValidateAccount'\r\nimport ComponentSelectUser from './SelectUser'\r\n\r\nexport const Indicators = ComponentIdicators;\r\nexport const ListOfUsers = ComponentsListOfUsers;\r\nexport const ReadUser = ComponentReadUser;\r\nexport const UpdateUserInfo = ComponentUpdateUserInfo;\r\nexport const ValidateAccount = ComponentValidateAccount;\r\nexport const SelectUser = ComponentSelectUser;\r\n","import React from 'react'\r\nimport {Row, Col, Card, CardBody, Container} from 'reactstrap'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {ListOfUsers as Users, UpdateUserInfo, ValidateAccount} from '../../components-admin'\r\nimport {SignUp, ChangePasswordForUser} from '../../components-session/'\r\nimport {Navbars} from '../../config-components'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfUsers = () => {\r\n    return (\r\n        <>\r\n            <Users />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ListOfAdmins = () => {\r\n    return (\r\n        <>\r\n            <Users \r\n                roleName='Admin' \r\n                title='Administradores'\r\n                create='/create-admin'\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateAdmin = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Administrador</h5>\r\n                            <SignUp history={history} role='Admin' reDirect={'/admin-dashboard/admins'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n               \r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadAdmin = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Admin</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser />\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n             </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateUser = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/users\" className=\"text-muted\">Usuarios</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear usuario</small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Usuario</h5>\r\n                            <SignUp history={history} role='User' reDirect={'/admin-dashboard/create-company'} token={true}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const ReadUser = () => {\r\n    const {userId} = useParams()\r\n    return (\r\n        <>\r\n            <Navbars.NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col lg=\"6\">\r\n                            <Card className=\"border-0\">\r\n                                <CardBody className=\"card-body\">\r\n                                    <h5 className=\"font-weight-bold mb-3\">Usuario</h5>\r\n                                    <UpdateUserInfo userId={userId}></UpdateUserInfo>\r\n                                    <ValidateAccount />\r\n                                    <ChangePasswordForUser userId={userId}/>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","export const SECTION_CARGANDO = \"section_cargando\";\r\nexport const SECTION_ERROR = \"section_error\";\r\nexport const SECTION_HANDLE_CHANGE = \"section_handle_change\";\r\nexport const SECTION_CLEAN_STATE = \"section_clean_state\";\r\nexport const SECTION_CRUD = \"section_crud\";\r\nexport const SECTIONS_LIST = \"sections_list\";\r\nexport const SECTIONS_SELECT = \"sections_list_select\";\r\nexport const SECTION_HANDLE_VALIDATION = \"section_handle_validation\";","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const sectionHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const sectionHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const sectionCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const sectionMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: SECTION_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = SECTION_CRUD;\r\n      switch (method) {\r\n        case \"get_list_sections_select\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_SELECT;\r\n          break;\r\n        case \"get_list_sections\":\r\n          answer = await axios_api(\r\n            `api/Sections`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseId?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n        case \"get_list_sections_by_course_id_with_products\":\r\n          answer = await axios_api(\r\n            `api/SectionsByCourseIdWithProducts?id=${data.Id}`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = SECTIONS_LIST;\r\n          break;\r\n\r\n        case \"get_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n\r\n        case \"put_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_section\":\r\n          answer = await axios_api(\"api/Section\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_section\":\r\n          answer = await axios_api(\r\n            `api/Section?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: SECTION_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nclass Section extends Component {\r\n    componentDidMount = async() =>{\r\n        const {sectionId, sectionMethods} = this.props;\r\n        sectionId && await sectionMethods({Id: sectionId}, 'get_section')\r\n    }\r\n    actionSection = async () => {\r\n        const {\r\n            sectionMethods, \r\n            sectionCleanState,\r\n            sectionReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                CourseId\r\n            }},\r\n            reDirect,\r\n            history,\r\n            courseId,\r\n            setModal\r\n        } = this.props\r\n        if(Id){\r\n            await sectionMethods({Id, Name, DateCreated, CourseId }, 'put_section')\r\n        }else{\r\n            await sectionMethods({ Name, CourseId: courseId}, 'post_section')\r\n        }\r\n        if(this.props.sectionReducer.data.Id){\r\n            sectionCleanState()\r\n            await sectionMethods({Id: courseId ? courseId : CourseId },'get_list_sections_by_course_id_with_products');\r\n            setModal && setModal()\r\n            reDirect && history.push(reDirect)\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            sectionHandleValidation,\r\n            sectionHandleChange,\r\n            sectionReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionSection}\r\n                textButton={Id ? 'Actualizar Sección' : 'Agregar Sección'}\r\n                textButtonLoading={Id ? 'Actualizando Sección...' : 'Agregando Sección...'}\r\n                validations={validations}\r\n                handleValidations={sectionHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sección'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Sección'}\r\n                    inputValue={Name}\r\n                    onChange={sectionHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({sectionReducer}) => {\r\n    return {sectionReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...sectionActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Section from './Section'\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateModalSection = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n   \r\n    if(sectionModal.some){\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n    \r\n    return (\r\n        <ModalForm\r\n            state={sectionModal}\r\n            modalTitle={'Crear Sección'}\r\n            content={\r\n                <Section \r\n                    courseId={courseId}\r\n                    setModal={ sectionModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditSectionModal = ({section}) => {\r\n    const sectionModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            state={sectionModal}\r\n            modalTitle={`Editar Sección: ${section.SectionName}`}\r\n            content={<Section sectionId={section.SectionId} />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteSectionModal = ({section, courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const sectionModal = SwitchSome();\r\n    const deleteSectionAction = async (sectionId) => {\r\n        await dispatch(sectionActions.sectionMethods({Id: sectionId},'delete_section'));\r\n        await dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'));\r\n    }\r\n    \r\n    return (\r\n        <ModalDelete \r\n            state={sectionModal}\r\n            modalTitle={`Eliminar Sección: ${section.SectionName}`}\r\n            content={`La siguiente sección \"${section.SectionName}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={() => deleteSectionAction(section.SectionId)}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","export const CATEGORY_PRODUCT_CARGANDO = \"category_products_cargando\";\r\nexport const CATEGORY_PRODUCT_ERROR = \"category_products_error\";\r\nexport const CATEGORY_PRODUCT_HANDLE_CHANGE = \"category_products_handle_change\";\r\nexport const CATEGORY_PRODUCT_CLEAN_STATE = \"category_products_clean_state\";\r\nexport const CATEGORY_PRODUCT_CRUD = \"category_products_crud\";\r\nexport const CATEGORIES_PRODUCTS_LIST = \"categories_products_list\";\r\nexport const CATEGORY_PRODUCT_HANDLE_VALIDATION = \"category_products_handle_validation\";\r\n\r\n\r\n\r\n\r\n","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  import { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const categoryProductHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const categoryProductHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const categoryProductMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: CATEGORY_PRODUCT_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      let type = CATEGORY_PRODUCT_CRUD;\r\n      switch (method) {\r\n\r\n        case \"get_list_categories_products\":\r\n          answer = await axios_api(\r\n            `api/ProductCategories`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          type = CATEGORIES_PRODUCTS_LIST;\r\n          break;\r\n\r\n        case \"get_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${\r\n              data.Id \r\n            }`,\r\n            true,\r\n            \"get\"\r\n          );\r\n          break;\r\n        \r\n        case \"put_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"put\",\r\n            data\r\n          );\r\n          if (answer.status === 204) {\r\n            type = \"put\";\r\n          }\r\n          break;\r\n\r\n        case \"post_category_product\":\r\n          answer = await axios_api(\"api/ProductCategory\", true, \"post\", data);\r\n          break;\r\n        \r\n        case \"delete_category_product\":\r\n          answer = await axios_api(\r\n            `api/ProductCategory?id=${data.Id}`,\r\n            true,\r\n            \"delete\"\r\n          );\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: type,\r\n        payload: answer.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: CATEGORY_PRODUCT_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","export const BLOB_CARGANDO = \"blob_cargando\";\r\nexport const BLOB_ERROR = \"blob_error\";\r\nexport const BLOB_HANDLE_CHANGE = \"blob_handle_change\";\r\nexport const BLOB_HANDLE_VALIDATION = \"blob_handle_validation\";\r\nexport const BLOB_CLEAN_STATE = \"blob_clean_state\";\r\nexport const BLOB_CRUD = \"blob_crud\";\r\n","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nimport { axios_api, errorHandler } from \"../../components-api/ConfigApi\";\r\n\r\nexport const blobHandleChange = (e, isInvalid) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_CHANGE,\r\n    payload: { e: e, isInvalid: isInvalid },\r\n  });\r\n};\r\n\r\nexport const blobHandleValidation = (validation) => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_HANDLE_VALIDATION,\r\n    payload: validation,\r\n  });\r\n};\r\n\r\nexport const blobCleanState = () => (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CLEAN_STATE,\r\n  });\r\n};\r\n\r\nexport const blobMethods = (data, method) => async (dispatch) => {\r\n  dispatch({\r\n    type: BLOB_CARGANDO,\r\n  });\r\n  try {\r\n    let answer;\r\n    let type = BLOB_CRUD;\r\n    switch (method) {\r\n      case \"post_blob\":\r\n        answer = await axios_api(`api/Blob`, true, \"post\", data);\r\n        break;\r\n      case \"put_blob\":\r\n        answer = await axios_api(\r\n          `api/Blob?id=${data.id}`,\r\n          true,\r\n          \"put\",\r\n          data.blob\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    //answer = { data: answer.data[0], status: answer.status };\r\n    dispatch({\r\n      type: type,\r\n      payload: answer.data[0],\r\n    });\r\n  } catch (error) {\r\n    let messageError = errorHandler(error);\r\n    dispatch({\r\n      type: BLOB_ERROR,\r\n      payload: messageError,\r\n    });\r\n  }\r\n};\r\n","/*\r\n * Funciones para el manejo de archivos y form datas\r\n */\r\n\r\nexport const b64toBlob = (b64Data, contentType = \"\", sliceSize = 512) => {\r\n  let byteCharacters = atob(b64Data);\r\n  let byteArrays = [];\r\n\r\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n    let slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n    let byteNumbers = new Array(slice.length);\r\n    for (let i = 0; i < slice.length; i++) {\r\n      byteNumbers[i] = slice.charCodeAt(i);\r\n    }\r\n\r\n    let byteArray = new Uint8Array(byteNumbers);\r\n\r\n    byteArrays.push(byteArray);\r\n  }\r\n\r\n  let blob = new Blob(byteArrays, { type: contentType });\r\n  return blob;\r\n};\r\n\r\n/*\r\n * creamos un blob\r\n */\r\nexport const createBlob = (dataUri) => {\r\n  let block = dataUri.split(\";\");\r\n  let contentType = block[0].split(\":\")[1];\r\n  let realData = block[1].split(\",\")[1];\r\n  const blob = b64toBlob(realData, contentType);\r\n  return blob;\r\n};\r\n\r\n/*\r\n * Convertimos un blob a form data\r\n */\r\nexport const createFormData = (\r\n  blob,\r\n  BlobTypeId = 1,\r\n  ContainerName = \"publicproducts\",\r\n  IsPrivate = true,\r\n  UserId = \"\"\r\n) => {\r\n  const data = new FormData();\r\n  data.set(\"BlobTypeId\", BlobTypeId);\r\n  data.set(\"ContainerName\", ContainerName);\r\n  data.set(\"IsPrivate\", IsPrivate);\r\n  //   if (localStorage.getItem(\"role\") === \"Admin\") {\r\n  //     data.set(\"UserId\", UserId);\r\n  //   }\r\n  data.append(\"file\", blob);\r\n  return data;\r\n};\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as categoryProductActions from '../components-category-product/reducer/categoryProductActions'\r\nimport * as categoryActions from '../components-category/reducer/categoryActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Product extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, categoryProductMethods, categoryMethods} = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        await categoryProductMethods(\"\", 'get_list_categories_products');\r\n        await categoryMethods(\"\",\"GetCategories\")\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    ProductCategoryId, \r\n                    fileCover,\r\n                    Categories\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            categoryProductReducer:{\r\n                list_categories_products\r\n            },\r\n            blobReducer,\r\n            categoryReducer:{\r\n                list_categories\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                \r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'ProductCategoryId'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={ProductCategoryId}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.ProductCategoryId}\r\n                    optionPlaceHolder={'Selecciona un tipo de producto'}\r\n                    options={list_categories_products}\r\n                /> \r\n\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Caracteristicas'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Categories'}\r\n                    placeHolder={'Selecciona tipo de producto'}\r\n                    inputValue={Categories}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Categories}\r\n                    optionPlaceHolder={'Selecciona caracteristicas'}\r\n                    options={list_categories}\r\n                /> */}\r\n                \r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer, categoryProductReducer, blobReducer, categoryReducer}) => {\r\n    return {productReducer, categoryProductReducer, blobReducer, categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...categoryProductActions,\r\n    ...blobActions,\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Product from './Product'\r\nimport * as productActions from './reducer/productActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateProductModal = ({courseId}) => {\r\n    const dispatch = useDispatch()\r\n    const porductModal = SwitchSome();\r\n\r\n    if(porductModal.some){\r\n        dispatch(productActions.productCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={porductModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Product \r\n                    courseId={courseId} \r\n                    hasSection={true}\r\n                    setModal={porductModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditProductModal = ({product, courseId}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={porductModal}\r\n            modalTitle={`Editar Recurso: ${product.Name}`}\r\n            content={<Product \r\n                productId={product.Id} \r\n                hasSection={true} \r\n                courseId={courseId}\r\n                setModal={porductModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteProductModal = ({product, action}) => {\r\n    const porductModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ porductModal}\r\n            modalTitle={`Eliminar Recurso: ${product.Name}`}\r\n            content={`El siguiente Recurso \"${product.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}","// Imports de react.\r\nimport React, { useEffect } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Badge} from 'reactstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Import de components.\r\nimport {EditSectionModal, DeleteSectionModal} from './ModalSections'\r\nimport {EditProductModal, DeleteProductModal} from '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\n\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfSections = ({courseId}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [dispatch, courseId])\r\n\r\n    const cleanSection = () => {\r\n        dispatch(sectionActions.sectionCleanState())\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }\r\n\r\n    const deleteProductAction = (sectionId) => {\r\n        dispatch(productActions.productMethods({Id: sectionId},'delete_product'))\r\n        dispatch(productActions.productCleanState())\r\n        cleanSection()\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    // if(list_sections.len){\r\n    //     dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n            {list_sections.map(section => {\r\n                 //TODO: implementar nuevo formato para leer lor recursos de de una seción\r\n                 //TODO: Crear reducers de resources.\r\n                return <>\r\n                    <div className=\"border mb-3 p-2\">\r\n                        <div className='d-flex mb-2 p-2 text-left'>\r\n                            <h6 className='flex-grow-1 font-weight-bold mb-0'>{section.SectionName} </h6>\r\n                            <div>\r\n                                <EditSectionModal section={section} cleanSection={cleanSection}/>\r\n                                <DeleteSectionModal section={section} courseId={courseId}/>\r\n                            </div>\r\n                        </div>\r\n                    {\r\n                        section.Products && \r\n                        section.Products.map(product => {\r\n                        if(product !== null){\r\n                        return(\r\n                            <Badge color={'light'} className='d-flex mb-2 p-2 text-left'>\r\n                                <p className='flex-grow-1 mb-0'>{product.Name} </p>\r\n                                <div>\r\n                                    <Link to={`/player/watch-class/${product.Id}/${courseId}`}>\r\n                                    <FaIcons.FaEye className=\"mr-2\" />\r\n                                    </Link>\r\n                                    <EditProductModal product={product} courseId={courseId} />\r\n                                    <DeleteProductModal product={product} action={() => deleteProductAction(product.Id)}/>\r\n                                </div>\r\n                            </Badge>\r\n                            )\r\n                        }\r\n                        return '';\r\n                        })\r\n                    }\r\n                    </div>\r\n                </>\r\n            })}\r\n            {error ? <Error message={error}></Error> : ''}\r\n        </>\r\n    )\r\n}\r\n\r\n","import ComponentSection from './Section'\r\nimport * as ComponentListOfSections from './ListOfSections'\r\nimport * as ComponentModalSections from './ModalSections'\r\nimport * as ComponentCrudCourse from './CrudCourse'\r\n\r\nexport const Section =  ComponentSection;\r\nexport const ModalSections = ComponentModalSections;\r\nexport const CrudCourse = ComponentCrudCourse.CrudCourse;\r\nexport const ListOfSections = ComponentListOfSections.ListOfSections;","// Imports de react.\r\nimport React from 'react'\r\n\r\n// Imports de components.\r\nimport {CreateModalSection} from './ModalSections'\r\nimport {ListOfSections} from './ListOfSections'\r\nimport {CreateProductModal} from  '../components-product/ModalProducts'\r\n\r\n// Imports de actions.\r\nimport * as sectionActions from './reducer/sectionActions'\r\n\r\nexport const CrudCourse = ({courseId}) => {\r\n\r\n    \r\n    return(\r\n        <>\r\n        <div className='d-flex justify-content-between'>\r\n            <h5 className=\"font-weight-bold mb-3\">Crea una sección nueva a tu curso</h5>\r\n            <CreateModalSection courseId={courseId}/>\r\n        </div> \r\n\r\n            <div className='d-flex justify-content-between'>\r\n            <h6 className=\"font-weight-bold mb-3\">Añade videos o documentos a tus secciones</h6>\r\n            <CreateProductModal courseId={courseId}/>\r\n        </div>       \r\n        <ListOfSections courseId={courseId}></ListOfSections>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { Container, Row } from 'reactstrap'\r\n\r\n// Imports de config-components.\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\n// Imports de components\r\nimport Indicators from '../../components-admin/Indicators'\r\n\r\nimport {\r\n    AdminUsersPages, AdminCoursesPages, AdminProductPages, AdminCompanyPages\r\n} from './index'\r\n\r\nexport const Dashboard = () => {\r\n    \r\n    let {indicator} = useParams();\r\n    let history = useHistory();\r\n    const AdminSections = (page) =>{\r\n        switch(page){\r\n\r\n            case 'create-admin':\r\n                return <AdminUsersPages.CreateAdmin />\r\n            case 'admins':\r\n                return <AdminUsersPages.ListOfAdmins reDirect={'admin'} history={history} />\r\n            case 'create-user':\r\n                return <AdminUsersPages.CreateUser />\r\n            case 'users':\r\n                return <AdminUsersPages.ListOfUsers reDirect={'section'} history={history} />\r\n                 \r\n            case 'create-product':\r\n                return <AdminProductPages.CreateProduct />\r\n            case 'companies':\r\n                return <AdminCompanyPages.ListOfCompanies />\r\n            \r\n            default:\r\n                return <>\r\n                    <Row className=\"mb-4\">\r\n                        <Indicators />\r\n                    </Row>\r\n                </>\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           AdminSections(indicator)\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const TemplateDashboardAdmin = ({children}) => {\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <section className=\"bg-light h-100 py-6\">\r\n                <Container>\r\n                        {\r\n                           children\r\n                        }\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}","// Imports de react.\r\nimport React from 'react' \r\nimport { useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {CrudCourse} from '../../components-section'\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const CreateSection = () => {\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <Row>\r\n                <Col lg=\"8\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <CrudCourse  courseId={courseId} ></CrudCourse>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            {/* <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/> */}\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from '../components-product/reducer/productActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\nclass Course extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productMethods, } = this.props;\r\n        productId && await productMethods({Id: productId}, 'GetProduct');\r\n        this.props.productReducer.data.ProductCategoryId = 6;\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action, blobs = []) => {\r\n        const {\r\n            productMethods, \r\n            productReducer: {data : {\r\n                Id,\r\n                Name,\r\n                DateCreated,\r\n                Description, \r\n                Price,\r\n                ProductCategoryId,\r\n                \r\n            }},\r\n            \r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            Name: Name ? Name : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            Price: Price ? Price : 0,\r\n            ProductCategoryId: ProductCategoryId ? ProductCategoryId : '',\r\n            Blobs: blobs ? blobs : '',\r\n            includeBlobs: blobs.length > 0 && true\r\n        }\r\n        await productMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            productReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blobs,\r\n                    fileCover\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileCover?.length &&  Blobs?.length > 0){\r\n                await this.actionBlob(fileCover, 2 ,Blobs)\r\n                await this.sendAction('PutProduct');\r\n            } else{\r\n                let fileCoverAnswer = fileCover?.length && await this.actionBlob(fileCover, 2); \r\n                fileCoverAnswer \r\n                    ? await this.sendAction('PutProduct', [fileCoverAnswer])\r\n                    : await this.sendAction('PutProduct');\r\n            }\r\n        }else{\r\n            //TODO: revisar porque al crear el curso truena\r\n            await this.sendAction('PostProduct')\r\n            let fileCoverAnswer = fileCover.length && await this.actionBlob(fileCover, 2); \r\n            fileCoverAnswer && await this.sendAction('PutProduct', [fileCoverAnswer])\r\n        }\r\n        if(this.props.productReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}${this.props.courseReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productHandleValidation,\r\n            productHandleChange,\r\n            productReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Price,\r\n                    Description, \r\n                    fileCover,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={\r\n                    cargando \r\n                        ? cargando : \r\n                        blobReducer.api_actions.cargando \r\n                        ? blobReducer.api_actions.cargando \r\n                        : false \r\n                    }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Producto' : 'Agregar Producto'}\r\n                textButtonLoading={Id ? 'Guardando Producto...' : 'Agregando Producto...'}\r\n                validations={validations}\r\n                handleValidations={productHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Descripción'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'Description'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={Description}\r\n                    onChange={productHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Description}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Precio'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'Price'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Price}\r\n                    onChange={productHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Price} \r\n                />\r\n\r\n                <InputFile\r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sube una portada'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='file'\r\n                    inputName='fileCover'\r\n                    inputId='fileCover-video'\r\n                    inputValue={fileCover ? fileCover : ''}\r\n                    onChange={productHandleChange}\r\n                    validateRE={validations.fileCover}\r\n                /> \r\n                \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productReducer,  blobReducer}) => {\r\n    return {productReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Course);","// Imports de react.\r\nimport React from 'react'\r\n\r\nimport {ListOfProducts} from '../components-product'\r\n\r\nconst ListOfCourses = ({reDirect}) => {\r\n    return(\r\n        <ListOfProducts \r\n            title={'Cursos'} \r\n            categoryProductId={6} \r\n            reDirect={reDirect}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ListOfCourses\r\n\r\n","import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\n\r\nexport const Player = ({\r\n    url = 'https://Version 4storage.blob.core.windows.net/publicproducts/5ad7523a-cf4e-4dfa-8942-6c6fa1a86744.mp4'\r\n}) => {\r\n    return (\r\n        <div> \r\n            <ReactPlayer \r\n                url={url}\r\n                width='100%'\r\n                height='100%'\r\n                controls\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import * as ComponentPlayer from './Player'\r\n\r\nexport const PlayerMedia = ComponentPlayer;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Container } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst TabCourse = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav tabs>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Descripción General\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Sporte\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab} className=\"py-4\">\r\n        <TabPane tabId=\"1\">\r\n            <Container>\r\n                <h5>Acerca de este curso</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">  \r\n            <Container>\r\n                <h5>Soporte y ayuda</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas viverra enim vitae neque ultrices, non fringilla leo porta. Praesent dui elit, imperdiet id risus in, cursus lacinia ligula. </p>\r\n            </Container>\r\n        </TabPane>\r\n      </TabContent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TabCourse;","import React, {useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Navbars} from '../config-components'\r\nimport {PlayerMedia} from '../components-player'\r\nimport { Row, Col } from 'reactstrap';\r\nimport CollapseSection from '../config-components/Collapse'\r\nimport TabCourse from '../config-components/TabCourse'\r\n\r\nimport * as productActions from '../components-product/reducer/productActions';\r\nimport * as sectionActions from '../components-section/reducer/sectionActions';\r\n\r\n\r\nexport const WatchClass = () => {\r\n    const sectionReducer = useSelector(state => state.sectionReducer);\r\n    const stateProduct = useSelector(state => state.productReducer)\r\n    const dispatch = useDispatch();\r\n    const {productId, courseId} = useParams();\r\n    useEffect(() => {\r\n        dispatch(productActions.productMethods({Id: productId},'get_product'));\r\n        dispatch(sectionActions.sectionMethods({Id: courseId},'get_list_sections_by_course_id_with_products'))\r\n    }, [productId, courseId, dispatch])\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_sections\r\n    } = sectionReducer;\r\n\r\n    return (\r\n        <div>\r\n            <Navbars.NavbarAdmin /> \r\n            <Row className=\"no-gutters\">\r\n                <Col lg=\"8\">\r\n                    <PlayerMedia.Player \r\n                        url={stateProduct.data.Blobs?.length > 0 \r\n                            ? stateProduct.data.Blobs[0].Uri\r\n                            : ''\r\n                    }\r\n                    />  \r\n                    <TabCourse />\r\n                </Col>\r\n                <Col lg=\"4\" className=\"border-left\">\r\n                    <div>\r\n                        <div className=\"p-3 border-bottom shadow-sm\">\r\n                            <h6 className=\"font-weight-bold mb-0\">Contenido del curso</h6>\r\n                        </div>\r\n                        <div>\r\n                            <div>\r\n                                {list_sections.map(section => {\r\n                                    return (\r\n                                        <CollapseSection \r\n                                            title={section.SectionName} \r\n                                            countVideos={section.Products.length} \r\n                                            videos={section.Products}\r\n                                        />\r\n                                    )\r\n                                })}\r\n                                \r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}","import ComponentCourse from './Course'\r\nimport ComponentListOfCourses from './ListOfCourses'\r\nimport * as ComponentWatchClass from './WatchClass'\r\n\r\n\r\nexport const Course = ComponentCourse ;\r\nexport const ListOfCourses = ComponentListOfCourses ;\r\nexport const PlayerMedia = ComponentWatchClass;\r\n","// Imports de react.\r\nimport React from 'react' \r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {Card, CardBody, Row, Col} from 'reactstrap'\r\n\r\n// Imports de components.\r\nimport {ListOfCourses as Courses, Course, PlayerMedia} from '../../components-course'\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfCourses = ({reDirect, history}) =>{\r\n    return (\r\n        <Courses reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCourse = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <Card className=\"border-0\">\r\n            <CardBody className=\"card-body\">\r\n                <h5 className=\"font-weight-bold mb-3\">Crea un curso nuevo</h5>\r\n                <Course reDirect={'/admin-dashboard/section/'} history={history}/>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport const WhatchCourse = () => {\r\n    return (\r\n        <>\r\n            <PlayerMedia.WatchClass /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditCourse = () => {\r\n    const history = useHistory();\r\n    const {courseId} = useParams();\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n             <Row>\r\n                <Col >\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Edita este Curso </h5>\r\n                            <Course reDirect={'/admin-dashboard/courses'} history={history} courseId={courseId}/>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\n\r\nclass CategoryProduct extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryProductId, categoryProductMethods} = this.props;\r\n        categoryProductId && await categoryProductMethods({Id: categoryProductId}, 'get_category_product')\r\n    }\r\n    actionCategoryProduct = async () => {\r\n        const {\r\n            categoryProductMethods, \r\n            categoryProductCleanState,\r\n            categoryProductReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryProductMethods({Id: Id, Name: Name}, 'put_category_product')\r\n\r\n        }else{\r\n            await categoryProductMethods({Name: Name}, 'post_category_product')\r\n        }\r\n        if(this.props.categoryProductReducer.data.Id){\r\n            categoryProductCleanState()\r\n            await categoryProductMethods('','get_list_categories_products');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryProductHandleValidation,\r\n            categoryProductHandleChange,\r\n            categoryProductReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategoryProduct}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryProductHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Categoria de producto'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryProductHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryProduct);","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport {Badge} from 'reactstrap'\r\n\r\n// Import de components.\r\nimport CategoryProduct from './CategoryProduct'\r\n\r\n// Imports de config-components.\r\nimport {ModalForm, ModalDelete} from '../config-components/Modals'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryProductActions from './reducer/categoryProductActions'\r\nimport {Loader, Error} from '../components-api/ApiResponses'\r\n\r\n// Imports de Iconos.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass ListOfCategoriesProducts extends Component {\r\n    componentDidMount = async () => {\r\n        const {categoryProductMethods} = this.props;\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    deleteAction = async (categoryProductId) => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        await categoryProductMethods({Id: categoryProductId},'delete_category_product');\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    cleanModal = async () => {\r\n        const {categoryProductMethods, categoryProductCleanState} = this.props;\r\n        categoryProductCleanState()\r\n        await categoryProductMethods('','get_list_categories_products');\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            categoryProductReducer: { \r\n                api_actions: {cargando, error},\r\n                list_categories_products\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                {cargando ? <Loader activate={cargando}></Loader> : ''}\r\n                {list_categories_products.map(category => {\r\n                    return <Badge color={'light'} className='d-inline-block mr-2 p-2'>\r\n                        <span className='mr-2'>{category.Name} </span>\r\n                        {/* <ModalForm \r\n                            key={category.Id}\r\n                            clean={this.cleanModal}\r\n                            modalTitle={`Editar Categoria: ${category.Name}`}\r\n                            content={<CategoryProduct categoryProductId={category.Id}></CategoryProduct>}\r\n                        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm> */}\r\n                        {/* <ModalDelete \r\n                            key={category.Id}\r\n                            modalTitle={`Eliminar Categoría: ${category.Name}`}\r\n                            content={`La siguiente categoría \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n                            action={() => this.deleteAction(category.Id)}\r\n                        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete> */}\r\n                     </Badge>\r\n                   \r\n                })}\r\n                {error ? <Error message={error}></Error> : ''}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryProductReducer}) => {\r\n    return {categoryProductReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryProductActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfCategoriesProducts);","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nclass Category extends Component {\r\n    componentDidMount = async() =>{\r\n        const {categoryId, categoryMethods} = this.props;\r\n        categoryId && await categoryMethods({Id: categoryId}, 'GetCategory')\r\n    }\r\n    actionCategory = async () => {\r\n        const {\r\n            categoryMethods, \r\n            categoryCleanState,\r\n            categoryReducer: {data : {\r\n                Id,\r\n                Name\r\n        }}} = this.props\r\n        if(Id){\r\n            await categoryMethods({Id: Id, Name: Name}, 'PutCategory')\r\n\r\n        }else{\r\n            await categoryMethods({Name: Name}, 'PostCategory')\r\n        }\r\n        if(this.props.categoryReducer.data.Id){\r\n            categoryCleanState()\r\n            await categoryMethods('','GetCategories');\r\n        }\r\n    }\r\n    render(){\r\n        const {\r\n            categoryHandleValidation,\r\n            categoryHandleChange,\r\n            categoryReducer: {\r\n                data : {Id, Name},\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <Form1\r\n                loading={cargando}\r\n                error={error}\r\n                action={this.actionCategory}\r\n                textButton={Id ? 'Actualizar Categoría' : 'Agregar Categoría'}\r\n                textButtonLoading={Id ? 'Actualizando Categoría...' : 'Agregando Categoría...'}\r\n                validations={validations}\r\n                handleValidations={categoryHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Añade caracteristicas para seleccionar en los proyectos'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce una Categoría'}\r\n                    inputValue={Name}\r\n                    onChange={categoryHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n            </Form1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({categoryReducer}) => {\r\n    return {categoryReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...categoryActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {ModalForm, ModalDelete, SwitchSome} from '../config-components/Modals'\r\nimport Category from './Category'\r\nimport * as categoryActions from './reducer/categoryActions'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const CreateCategoryModal = ({category}) => {\r\n    const dispatch = useDispatch()\r\n    const categoryModal = SwitchSome();\r\n\r\n    if(categoryModal.some){\r\n        dispatch(categoryActions.categoryCleanState())\r\n    }\r\n\r\n    return (\r\n        <ModalForm\r\n            state={categoryModal}\r\n            modalTitle={'Crear Recurso'}\r\n            content={\r\n                <Category \r\n                    category={category} \r\n                    hasSection={true}\r\n                    setModal={categoryModal.toggle}\r\n                />\r\n            }\r\n        ><FaIcons.FaPlusCircle className=\"\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const EditCategoryModal = ({category}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalForm \r\n            //clean={this.cleanModal}\r\n            state={categoryModal}\r\n            modalTitle={`Editar Recurso: ${category.Name}`}\r\n            content={<Category \r\n                categoryId={category.Id} \r\n                hasSection={true} \r\n                setModal={categoryModal.toggle}\r\n            />}\r\n        ><FaIcons.FaEdit className=\"mr-2\" /></ModalForm>\r\n    )\r\n}\r\n\r\nexport const DeleteCategoryModal = ({category, action}) => {\r\n    const categoryModal = SwitchSome();\r\n    return (\r\n        <ModalDelete \r\n            state={ categoryModal}\r\n            modalTitle={`Eliminar Recurso: ${category.Name}`}\r\n            content={`El siguiente Recurso \"${category.Name}\" se va eliminar. No se podra eliminar si está asignada a un producto.`}\r\n            action={action}\r\n        ><FaIcons.FaMinusCircle className=\"mr-2\" /></ModalDelete>\r\n    )\r\n}\r\n","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const PRODUCT_DETAIL_CARGANDO = \"product_detail_cargando\";\r\nexport const PRODUCT_DETAIL_ERROR = \"product_detail_error\";\r\nexport const PRODUCT_DETAIL_HANDLE_CHANGE = \"product_detail_handle_change\";\r\nexport const PRODUCT_DETAIL_CLEAN_STATE = \"product_detail_clean_state\";\r\nexport const PRODUCT_DETAIL_CRUD = \"product_detail_crud\";\r\nexport const PRODUCT_DETAILS_LIST = \"product_details_list\";\r\nexport const PRODUCT_DETAIL_HANDLE_VALIDATION = \"product_detail_handle_validation\";\r\n\r\nexport const GetProductDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/ProductDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: PRODUCT_DETAILS_LIST};\r\n}\r\n\r\nexport const GetProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const GetProductDetailByProductId = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetailByProductId?id=${data.Id }`,\r\n        true,\r\n        \"get\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n    );\r\n    return {res:answer, type: 'product_detail_put'};\r\n}\r\n\r\nexport const PostProductDetail = async(data)=> {\r\n    const  answer = await axios_api(\"api/ProductDetail\", true, \"post\", data);\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteProductDetail = async(data)=> {\r\n    const answer = await axios_api(\r\n        `api/ProductDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n    );\r\n    return {res:answer, type: PRODUCT_DETAIL_CRUD};\r\n}\r\n","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION, \r\n    GetProductDetails,\r\n    GetProductDetail,\r\n    GetProductDetailByProductId,\r\n    PutProductDetail,\r\n    PostProductDetail,\r\n    DeleteProductDetail,\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n\r\n  export const productDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const productDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const productDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const productDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetProductDetails\":\r\n          answer = await GetProductDetails(); \r\n          break;\r\n\r\n        case \"GetProductDetail\":\r\n          answer = await GetProductDetail(data);\r\n          break;\r\n\r\n        case \"GetProductDetailByProductId\":\r\n          answer = await GetProductDetailByProductId(data);\r\n          break;\r\n        case \"PutProductDetail\":\r\n          answer = await PutProductDetail(data);\r\n          break;\r\n\r\n        case \"PostProductDetail\":\r\n          answer = await PostProductDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteProductDetail\":\r\n          answer = await DeleteProductDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: PRODUCT_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1, InputFile } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as productActions from './reducer/productDetailActions'\r\nimport * as blobActions from '../components-blob/blob-reducer/blobActions'\r\nimport {createFormData} from '../components-blob/blobUtils'\r\n\r\nclass ProductDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {productId, productDetailMethods} = this.props;\r\n        productId && await productDetailMethods({Id: productId}, 'GetProductDetailByProductId');\r\n    }\r\n\r\n    actionBlob =  async (file, blobType ,blobs = []) => {\r\n        const {blobMethods} = this.props;\r\n        const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n        if(blobs.length > 0){ // put blob\r\n            await blobMethods(\r\n                { id: blobs[0].Id, blob: formData },\r\n                \"put_blob\"\r\n            );\r\n        }else{ // post blob\r\n            const formData = createFormData(file[0], blobType, \"publicproducts\", false);\r\n            await blobMethods(formData, \"post_blob\");\r\n        }\r\n        return this.props.blobReducer.data;\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            productDetailMethods, \r\n            productDetailReducer: {data : {\r\n                Id,\r\n                SubTitle,\r\n                DateCreated,\r\n                Description, \r\n                BlobId\r\n            }},\r\n            productId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            SubTitle: SubTitle ? SubTitle : '',\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Description: Description ? Description : '',\r\n            ProductId: productId ? productId : '',\r\n            BlobId: BlobId ? BlobId : '',\r\n        }\r\n        await productDetailMethods(model, action);\r\n    }\r\n\r\n    actionProductDetail = async () => {\r\n        const {\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    Blob,\r\n                    fileZip\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            if(fileZip?.length &&  Blob){\r\n                let fileZipAnswer = await this.actionBlob(fileZip, 1 ,[Blob]);\r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            } else{\r\n                let fileZipAnswer = fileZip?.length && await this.actionBlob(fileZip, 1); \r\n                this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n                await this.sendAction('PutProductDetail');\r\n            }\r\n        }else{\r\n            let fileZipAnswer = fileZip.length && await this.actionBlob(fileZip, 1); \r\n            this.props.productDetailReducer.data.BlobId = fileZipAnswer.Id;\r\n            fileZipAnswer &&  await this.sendAction('PostProductDetail')\r\n        }\r\n        if(this.props.productDetailReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.productDetailReducer.data.Id}/detail`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            productDetailHandleValidation,\r\n            productDetailHandleChange,\r\n            productDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    SubTitle,\r\n                    Description, \r\n                    fileZip\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            blobReducer,\r\n        } = this.props;\r\n        return(\r\n            <>\r\n                <Form1\r\n                    loading={\r\n                        cargando \r\n                            ? cargando : \r\n                            blobReducer.api_actions.cargando \r\n                            ? blobReducer.api_actions.cargando \r\n                            : false \r\n                        }\r\n                    error={error}\r\n                    action={this.actionProductDetail}\r\n                    textButton={Id ? 'Guardar Detalle' : 'Agregar Detalle'}\r\n                    textButtonLoading={Id ? 'Guardando Detalle...' : 'Agregando Detalle...'}\r\n                    validations={validations}\r\n                    handleValidations={productDetailHandleValidation}\r\n                >\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Subtitulo'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='text'\r\n                        inputName={'SubTitle'}\r\n                        placeHolder={'Introduce un subtitulo '}\r\n                        inputValue={SubTitle}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={50}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.SubTitle}\r\n                    />\r\n                    <InputText \r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Detalles'\r\n                        isMandatory='*'\r\n                        classMandatory=''\r\n                        inputType='textarea'\r\n                        inputName={'Description'}\r\n                        placeHolder={'Introduce detalles'}\r\n                        inputValue={Description}\r\n                        onChange={productDetailHandleChange}\r\n                        maxLength={500}\r\n                        RE={RE_EMPTY}\r\n                        validateRE={validations.Description}\r\n                    />\r\n                    <InputFile\r\n                        classLabel='font-weight-bold'\r\n                        textLabel='Sube un .zip con tus archivos'\r\n                        isMandatory=''\r\n                        classMandatory=''\r\n                        inputType='file'\r\n                        inputName='fileZip'\r\n                        inputId='fileZip-video'\r\n                        inputValue={fileZip ? fileZip : ''}\r\n                        onChange={productDetailHandleChange}\r\n                        validateRE={validations.fileZip}\r\n                    /> \r\n                </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({productDetailReducer,  blobReducer}) => {\r\n    return {productDetailReducer,  blobReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...productActions,\r\n    ...blobActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetail);","import ComponentProductDetail from './ProductDetails'\r\n\r\nexport const ProductDetail = ComponentProductDetail;","// Imports de react\r\nimport React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {Row, Col, Card, CardBody} from 'reactstrap'\r\n\r\n// Imports de componentes.\r\nimport {CardProduct, ListOfProducts as Products, AddCategories} from '../../components-product'\r\nimport Product from '../../components-product/Product'\r\nimport CategoryProduct from '../../components-category-product/CategoryProduct'\r\nimport ListOfCategoriesOfProducts from '../../components-category-product/ListOfCategoriesOfProducts'\r\nimport {Category, ListOfCategories} from '../../components-category'\r\nimport {ProductDetail} from '../../components-product-details'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\n// Imports de pages.\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\n\r\nexport const ListOfProducts = () => {\r\n    return(\r\n        <Products reDirect={'/admin-dashboard/product'}/>\r\n    )\r\n}\r\n\r\nexport const CreateProduct = () => {\r\n    const history = useHistory();  \r\n    return (\r\n        <>\r\n        <ul className=\"list-inline mb-4\">\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n            <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Crear producto</small></li>\r\n        </ul>\r\n        <Row>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Crea un producto nuevo</h5>\r\n                        <Product reDirect={`/admin-dashboard/product`} history={history}/>\r\n                        \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <CardProduct />\r\n                \r\n                {/* <Card className=\"border-0\">\r\n                    <CardBody>\r\n                        <Category />\r\n                        <ListOfCategories/>\r\n                    </CardBody>\r\n                </Card> */}\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditProduct = () => {\r\n    let {productId,section} = useParams();\r\n    const history = useHistory();\r\n\r\n    const ProductSection = (section) => {\r\n        switch(section){\r\n            case 'cover':\r\n                return <>\r\n                <h5 className=\"font-weight-bold mb-3\">Edita este producto </h5>\r\n                <Product productId={productId} history={history}/>\r\n                </>\r\n            case 'detail':\r\n                return <div>\r\n                    <h5 className=\"font-weight-bold mb-3\">Sube detalle del producto </h5>\r\n                    <ProductDetail productId={productId} />\r\n                </div>\r\n                \r\n            default:\r\n                return <Product productId={productId} history={history}/>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard/products\" className=\"text-muted\">Productos</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Editar producto</small></li>\r\n            </ul>\r\n             <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <Link to={`/admin-dashboard/product/${productId}/cover`}>producto </Link>/ \r\n                            <Link  to={`/admin-dashboard/product/${productId}/detail`}> detalle</Link>\r\n                            \r\n                            {\r\n                                ProductSection(section)\r\n                            }\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg=\"6\">\r\n                    <CardProduct />\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <AddCategories />\r\n                        </CardBody>\r\n                    </Card> */}\r\n                    {/* <Card className=\"border-0\">\r\n                        <CardBody>\r\n                            <Category />\r\n                            <ListOfCategories/>\r\n                        </CardBody>\r\n                    </Card> */}\r\n                </Col>\r\n            </Row>\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CategoryProducts = () =>{\r\n    return (\r\n        <>\r\n            <CategoryProduct />\r\n            <ListOfCategoriesOfProducts></ListOfCategoriesOfProducts>\r\n        </>\r\n    )\r\n}\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport {SelectUser} from '../components-admin'\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nclass Company extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {companyId, companyMethods} = this.props;\r\n        companyId && await companyMethods({Id: companyId}, 'GetCompany');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            companyMethods, \r\n            companyReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                TradeName,\r\n                BusinessName, \r\n                BusinessActivity,\r\n                UserId\r\n            }},\r\n            userId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            TradeName: TradeName ? TradeName : '',\r\n            BusinessName: BusinessName ? BusinessName : '',\r\n            BusinessActivity: BusinessActivity ? BusinessActivity : 0,\r\n            UserId: UserId ? UserId : userId\r\n        }\r\n        await companyMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            companyReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutCompany');\r\n        }else{\r\n            await this.sendAction('PostCompany')\r\n        }\r\n        if(this.props.companyReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}/${this.props.companyReducer.data.Id}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {\r\n            companyHandleValidation,\r\n            companyHandleChange,\r\n            companyReducer: {\r\n                data : {\r\n                    Id, \r\n                    TradeName,\r\n                    BusinessName,\r\n                    BusinessActivity, \r\n                    UserId\r\n                },\r\n                users_list,\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n\r\n       \r\n\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Empresa' : 'Crear Empresa'}\r\n                textButtonLoading={Id ? 'Guardando Empresa...' : 'Crear Empresa...'}\r\n                validations={validations}\r\n                handleValidations={companyHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre Comercial'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'TradeName'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={TradeName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.TradeName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Razón social'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='textarea'\r\n                    inputName={'BusinessName'}\r\n                    placeHolder={'Introduce una Nombre'}\r\n                    inputValue={BusinessName}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={500}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessName}\r\n                />\r\n\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Actividad'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'BusinessActivity'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={BusinessActivity}\r\n                    onChange={companyHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.BusinessActivity} \r\n                />\r\n                {\r\n                    localStorage.getItem('role') === 'Admin' ? \r\n                    <SelectUser\r\n                        UserId={UserId}\r\n                        onChange={companyHandleChange}\r\n                        validations={validations.UserId}\r\n                    ></SelectUser>\r\n                    // <InputText \r\n                    //     classLabel='font-weight-bold'\r\n                    //     textLabel='Tipo'\r\n                    //     isMandatory='*'\r\n                    //     classMandatory=''\r\n                    //     inputType='select'\r\n                    //     inputName={'UserId'}\r\n                    //     placeHolder={'Selecciona un usuario'}\r\n                    //     inputValue={UserId}\r\n                    //     onChange={companyHandleChange}\r\n                    //     RE={RE_EMPTY}\r\n                    //     validateRE={validations.UserId}\r\n                    //     optionPlaceHolder={'Selecciona un usuario'}\r\n                    //     options={users_list}\r\n                    // />\r\n                    : ''\r\n                }\r\n\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({companyReducer}) => {\r\n    return {companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...companyActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Company);\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\nimport { Col } from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\n// Imports de config-components\r\nimport {CardAnalytics} from '../config-components/Cards'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\nimport {Loader} from '../components-api/ApiResponses'\r\n// FontAwesome Icons.\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nclass Indicators extends Component {\r\n    componentDidMount = async () => {\r\n        const {analyticsMethods, companyMethods, companyId} = this.props;\r\n        await analyticsMethods('count_positions', {companyId})\r\n        await analyticsMethods('count_personal_details', {companyId})\r\n        await analyticsMethods('count_areas', {companyId})\r\n        await companyMethods({Id:companyId},'GetCompany')\r\n    }\r\n    render(){\r\n        const {\r\n            count_positions,\r\n            count_personal_details,\r\n            count_areas,\r\n            api_actions:{\r\n                cargando,\r\n            },\r\n            \r\n        } = this.props.analyticsReducer;\r\n        \r\n        const cardAnalytics = [\r\n            {\r\n                id: '3-p',\r\n                title: 'Organigrama',\r\n                number: 'Ver',\r\n                icon: <FaIcons.FaSitemap className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/organization-chart`\r\n            },            \r\n            {\r\n                id: '1-p',\r\n                title: 'Posiciones',\r\n                number:  cargando ? <Loader activate={cargando}></Loader> : count_positions,\r\n                icon: <FaIcons.FaChair className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/positions`\r\n            },\r\n            {\r\n                id: '2-p',\r\n                title: 'Colaboradores',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_personal_details,\r\n                icon: <FaIcons.FaUserFriends className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/employees`\r\n            }, \r\n            {\r\n                id: '4-p',\r\n                title: 'Areas',\r\n                number: cargando ? <Loader activate={cargando}></Loader> : count_areas,\r\n                icon: <FaIcons.FaBuromobelexperte className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/areas`\r\n            },      \r\n            {\r\n                id: '5-p',\r\n                title: 'Indicadores',\r\n                number: 'Ver',\r\n                icon: <FaIcons.FaChartPie className=\"mr-2\" />,\r\n                href: `/${this.props.hrefBase}/company/${this.props.companyId}/areas`\r\n            },      \r\n        ] \r\n        return(\r\n            <>\r\n                {cardAnalytics.map(data => {\r\n                    return (\r\n                        <Col lg=\"4\" key={data.id}>\r\n                                <Link to={data.href}>\r\n                                <CardAnalytics \r\n                                    icon={data.icon}\r\n                                    title={data.title}\r\n                                    number={data.number}\r\n                                />\r\n                            </Link>\r\n                        </Col> \r\n                    )\r\n                })} \r\n            </>    \r\n        )\r\n    }     \r\n   \r\n}\r\n\r\nconst mapStateToProps = ({analyticsReducer, companyReducer}) => {\r\n    return {analyticsReducer, companyReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...analyticsActions,\r\n    ...companyActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Indicators);\r\n\r\n","import ComponentCompany from './Company'\r\nimport ComponentCompanyIndicators from './CompanyIndicators'\r\nimport ComponentListOfCompanies from './ListOfCompanies'\r\nimport ComponentChooseCompany from './ChooseCompany'\r\n\r\n\r\nexport const Company = ComponentCompany;\r\nexport const CompanyIndicators = ComponentCompanyIndicators;\r\nexport const ListOfCompanies = ComponentListOfCompanies;\r\nexport const ChooseCompany = ComponentChooseCompany;","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as companyActions from './reducer/companyActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfCompanies = ({ title='Empresas', create='/create-company'}) => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    useEffect(() => {    \r\n        dispatch(companyActions.companyMethods('','GetCompanies'))\r\n    }, [dispatch])\r\n    \r\n    const getCompany = (companyId) => {\r\n        history.push(`/admin-dashboard/company/${companyId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_companies\r\n    } = companyReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to=\"/admin-dashboard\" className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Empresas</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={[\"#\",'Empresa','Acciones']}\r\n                propertiesTable={['Id','TradeName']}\r\n                hrefCreate={`/admin-dashboard/user${create}`}\r\n                bodyTable={list_companies}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empresa', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfCompanies;\r\n\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport { useHistory} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {DropDowns} from '../config-components'\r\n\r\n// Imports de actions.\r\nimport * as companyActions from './reducer/companyActions'\r\nimport * as analyticsActions from '../components-analytics/reducer/analyticsActions'\r\n\r\nconst ChooseCompany = ({user, companyId }) => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    useEffect(() => {    \r\n        dispatch(companyActions.companyMethods({companyId},'GetCompaniesByCompanyId'))\r\n    }, [companyId, dispatch])\r\n    \r\n    const {\r\n        list_companies\r\n    } = companyReducer;\r\n\r\n    const changeCompany = (id) => {\r\n        debugger\r\n        dispatch(companyActions.companyMethods({Id:id},'GetCompany'))\r\n        dispatch(analyticsActions.analyticsMethods('count_positions', {companyId:id}))\r\n        dispatch(analyticsActions.analyticsMethods('count_personal_details', {companyId:id}))\r\n        dispatch(analyticsActions.analyticsMethods('count_areas', {companyId:id}))\r\n        history.push(`${user}/${id}`);\r\n    }\r\n\r\n    let CompanyChoose = []\r\n    if(list_companies.length > 0){\r\n        CompanyChoose = list_companies.filter(item => item.Id === Number(companyId));\r\n    }\r\n\r\n    return(\r\n        <>\r\n           <DropDowns.DropDownActions\r\n            color='primary'\r\n            labelButton={\r\n                <>{CompanyChoose.length>0 && CompanyChoose[0].TradeName}</>\r\n            }\r\n           >\r\n               <DropDowns.Items \r\n                    items={list_companies}\r\n                    action={changeCompany}\r\n               />\r\n           </DropDowns.DropDownActions>\r\n           </>\r\n    )\r\n}\r\n\r\nexport default ChooseCompany;\r\n\r\n","\r\nimport React from 'react'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport { CompanyIndicators, Company, ChooseCompany } from '../../components-company'\r\nimport { Row, Col, Card, CardBody } from 'reactstrap'\r\n\r\nexport const Indicators = ({user, companyId, hrefBase}) => {\r\n    debugger\r\n    return (\r\n        <>\r\n            <ChooseCompany user={user} companyId={companyId}> </ChooseCompany>\r\n            <Row className=\"mb-4\">\r\n                <CompanyIndicators companyId={companyId} hrefBase={hrefBase}/>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateCompany = () => {\r\n    const {userId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Crea una Empresa</h5>\r\n                        <Company userId={userId} history={history} reDirect={'/admin-dashboard/company'} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}","import { axios_api } from \"../../components-api/ConfigApi\";\r\n\r\nexport const JOB_DETAIL_CARGANDO = \"job_detail_cargando\";\r\nexport const JOB_DETAIL_ERROR = \"job_detail_error\";\r\nexport const JOB_DETAIL_HANDLE_CHANGE = \"job_detail_handle_change\";\r\nexport const JOB_DETAIL_CLEAN_STATE = \"job_detail_clean_state\";\r\nexport const JOB_DETAIL_CRUD = \"job_detail_crud\";\r\nexport const JOB_DETAILS_LIST = \"job_detail_list\";\r\nexport const JOB_DETAIL_HANDLE_VALIDATION = \"job_detail_handle_validation\";\r\n\r\nexport const GetJobDetails = async()=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetails`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAILS_LIST};\r\n}\r\n\r\nexport const GetJobDetailByPersonalDetailId = async(data)=> {\r\n  const  answer = await axios_api(\r\n      `api/JobDetailByPersonalDetailId?personalDetailId=${data.personalDetailId}`,\r\n      true,\r\n      \"get\"\r\n    );\r\n  return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\n\r\nexport const GetJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"get\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const PutJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"put\",\r\n        data\r\n      );\r\n    return {res:answer, type: 'job_detail_put'};\r\n}\r\n\r\nexport const PostJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail`,\r\n        true,\r\n        \"post\",\r\n        data\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}\r\n\r\nexport const DeleteJobDetail = async(data)=> {\r\n    const  answer = await axios_api(\r\n        `api/JobDetail?id=${data.Id}`,\r\n        true,\r\n        \"delete\"\r\n      );\r\n    return {res:answer, type: JOB_DETAIL_CRUD};\r\n}","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_HANDLE_VALIDATION, \r\n    GetJobDetails,\r\n    GetJobDetailByPersonalDetailId,\r\n    GetJobDetail,\r\n    PutJobDetail,\r\n    PostJobDetail,\r\n    DeleteJobDetail\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  import { errorHandler } from \"../../components-api/ConfigApi\";\r\n  \r\n  export const jobDetailHandleChange = (e, isInvalid) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_CHANGE,\r\n      payload: { e: e, isInvalid: isInvalid },\r\n    });\r\n  };\r\n\r\n  export const jobDetailHandleValidation = (validation) => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_HANDLE_VALIDATION,\r\n      payload: validation,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailCleanState = () => (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CLEAN_STATE,\r\n    });\r\n  };\r\n  \r\n  export const jobDetailMethods = (data, method) => async (dispatch) => {\r\n    dispatch({\r\n      type: JOB_DETAIL_CARGANDO,\r\n    });\r\n    try {\r\n      let answer;\r\n      switch (method) {\r\n        case \"GetJobDetails\":\r\n          answer = await GetJobDetails(); \r\n          break;\r\n\r\n        case \"GetJobDetailByPersonalDetailId\":\r\n          answer = await GetJobDetailByPersonalDetailId(data);\r\n          break;\r\n        \r\n          case \"GetJobDetail\":\r\n          answer = await GetJobDetail(data);\r\n          break;\r\n\r\n        case \"PutJobDetail\":\r\n          answer = await PutJobDetail(data);\r\n          break;\r\n\r\n        case \"PostJobDetail\":\r\n          answer = await PostJobDetail(data);\r\n          break;\r\n        \r\n        case \"DeleteJobDetail\":\r\n          answer = await DeleteJobDetail(data);\r\n          break;\r\n\r\n        default:\r\n            break;\r\n      }\r\n  \r\n      dispatch({\r\n        type: answer.type,\r\n        payload:  answer.res.data,\r\n      });\r\n    } catch (error) {\r\n      let messageError = errorHandler(error);\r\n      dispatch({\r\n        type: JOB_DETAIL_ERROR,\r\n        payload: messageError,\r\n      });\r\n    }\r\n  };\r\n  ","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as jobDetailActions from './reducer/jobDetailActions'\r\nimport * as areaActions from '../components-area/reducer/areaActions'\r\n\r\nclass JobDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, jobDetailMethods, areaMethods, companyId} = this.props;\r\n        personalDetailId && await jobDetailMethods({personalDetailId}, 'GetJobDetailByPersonalDetailId');\r\n        await areaMethods({companyId},'GetAreasByCompanyId')\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            jobDetailMethods, \r\n            jobDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                PersonDetailId,\r\n                DateAdmission,\r\n                Contract,\r\n                Benefits,\r\n                TotalSalary,\r\n                MonthlySalary,\r\n                Type,\r\n                AreaId,\r\n                CompanyId\r\n            }},\r\n            personalDetailId,\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            PersonDetailId: PersonDetailId ? PersonDetailId : personalDetailId,\r\n            DateAdmission: DateAdmission ? DateAdmission : '',\r\n            Contract: Contract ? Contract : '',\r\n            Benefits: Benefits ? Benefits : '',\r\n            TotalSalary: TotalSalary ? TotalSalary : '',\r\n            MonthlySalary: MonthlySalary ? MonthlySalary : '',\r\n            Type: Type ? Type : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            AreaId: AreaId ? AreaId : '',\r\n        }\r\n        \r\n        await jobDetailMethods(model, action);\r\n    }\r\n\r\n    actionJobDetail = async () => {\r\n        const {\r\n            jobDetailCleanState,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutJobDetail');\r\n        }else{\r\n            await this.sendAction('PostJobDetail')\r\n        }\r\n        if(this.props.jobDetailReducer.data.Id && reDirect){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n            jobDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { jobDetailCleanState } = this.props;\r\n        jobDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            jobDetailHandleValidation,\r\n            jobDetailHandleChange,\r\n            jobDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                    DateAdmission,\r\n                    Benefits,\r\n                    TotalSalary,\r\n                    MonthlySalary,\r\n                    AreaId,\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            areaReducer : {\r\n                list_areas\r\n            }\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionJobDetail}\r\n                textButton={Id ? 'Guardar Información Laboral' : 'Crear Información Laboral'}\r\n                textButtonLoading={Id ? 'Guardando Información Laboral...' : 'Creando Información Laboral...'}\r\n                validations={validations}\r\n                handleValidations={jobDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Ingreso'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'DateAdmission'}\r\n                    placeHolder={''}\r\n                    inputValue={DateAdmission}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.DateAdmission}\r\n                />\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo de Contrato'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Contract'}\r\n                    placeHolder={'Selecciona el tipo de Contrato'}\r\n                    inputValue={Contract}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Contract}\r\n                    optionPlaceHolder={'Selecciona el tipo de Contrato'}\r\n                    options={[\r\n                        {Id:'Eventual',Name:'Eventual'},\r\n                        {Id:'Planta',Name:'Planta'}\r\n                    ]}\r\n                /> */}\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Mensual'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'MonthlySalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={MonthlySalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.MonthlySalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Salario Total'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='number'\r\n                    inputName={'TotalSalary'}\r\n                    placeHolder={'Introduce un salario'}\r\n                    inputValue={TotalSalary}\r\n                    onChange={jobDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.TotalSalary}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Prestaciones'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Benefits'}\r\n                    placeHolder={'Selecciona el tipo de Prestaciones'}\r\n                    inputValue={Benefits}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Benefits}\r\n                    optionPlaceHolder={'Selecciona el tipo de Prestaciones'}\r\n                    options={[\r\n                        {Id:'LFT',Name:'LFT'},\r\n                        {Id:'CC',Name:'CC'}\r\n                    ]}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Selecciona un Area'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'AreaId'}\r\n                    placeHolder={'Selecciona una Area o Departamento'}\r\n                    inputValue={AreaId}\r\n                    onChange={jobDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.AreaId}\r\n                    optionPlaceHolder={'Selecciona una Area o Departamento'}\r\n                    options={list_areas}\r\n                /> \r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({jobDetailReducer, areaReducer}) => {\r\n    return {jobDetailReducer, areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...jobDetailActions,\r\n    ...areaActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobDetail);\r\n","import ComponentJobDetails from './JobDetails'\r\n\r\nexport const JobDetails = ComponentJobDetails;","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport { JobDetails} from '../../components-job-detail'\r\n\r\n\r\n\r\n\r\nexport const CreateJobDetail = ({ reDirect=''}) => {\r\n    const {personalDetailId, companyId} = useParams();\r\n    const history = useHistory();\r\n\r\n    const jobDetailReducer = useSelector(state => state.jobDetailReducer);\r\n    const {data: {Id}} = jobDetailReducer;\r\n    \r\n    return (\r\n        <>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea Información Laboral del Empleado' : 'Actualiza Información Laboral del Empleado'}</h5>\r\n                        <JobDetails companyId={companyId} personalDetailId={personalDetailId} history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateJobDetail = ({reDirect=''}) => {\r\n    const {personalDetailId, companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>            \r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Actualiza Información Laboral del Empleado</h5>\r\n                        <JobDetails companyId={companyId} personalDetailId={personalDetailId}  history={history} reDirect={reDirect} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport {Position, ListOfPositions as Positions, ListFromPositions} from '../../components-position'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {\r\n    Col,Card, CardBody\r\n} from 'reactstrap'\r\n\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\n\r\nexport const ListOfPositions = ({reDirect, reDirectBase, reDirectCreate,  history}) =>{\r\n    const {companyId} = useParams();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    debugger\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={reDirectBase.replace('companyId', companyId)} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n            <Positions reDirect={reDirect} create={reDirectCreate}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = ({reDirect, reDirectBase}) => {\r\n    const history = useHistory();\r\n    const {companyId, positionId} = useParams();\r\n    debugger\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Col lg=\"6\" className='mb-5'>\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">{!positionId ? 'Crear Puesto' : 'Guardar Puesto'}</h5>\r\n                        <Position \r\n                            positionId={positionId} \r\n                            companyId={companyId} \r\n                            history={history} \r\n                            reDirect={reDirect.replace('companyId', companyId)} />\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Col lg=\"6\">\r\n                <Card className=\"border-0\">\r\n                    <CardBody className=\"card-body\">\r\n                        <h5 className=\"font-weight-bold mb-3\">Responsabilidades</h5>\r\n                        <ListFromPositions.ListOfResponsabilities /> \r\n                        <h5 className=\"font-weight-bold mb-3\">Descripciones</h5>\r\n                        <ListFromPositions.ListOfDescriptions />     \r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfPersonalDetails = ({ title='Colaboradores', redirectUser, create='/create-personal-detail'}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(personalDetailActions.personalDetailMethods({companyId},'GetPersonalDetailsByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getCompany = (personalDetailId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-personal-detail/${personalDetailId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_personal_details\r\n    } = personalDetailReducer;\r\n    \r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Colaboradores</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Apellido Paterno','Apellido Materno','Acciones']}\r\n                propertiesTable={['Name', 'LastName', 'SecondLastName']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_personal_details}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Empleado', handleAction: getCompany },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfPersonalDetails;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as personalDetailActions from './reducer/personalDetailActions'\r\n\r\nclass PersonDetail extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {personalDetailId, personalDetailMethods} = this.props;\r\n        personalDetailId && await personalDetailMethods({Id: personalDetailId}, 'GetPersonalDetail');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            personalDetailMethods, \r\n            personalDetailReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                LastName,\r\n                SecondLastName,\r\n                CompanyId,\r\n                RFC,\r\n                Birthdate,\r\n                Gender\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            LastName: LastName ? LastName : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            SecondLastName: SecondLastName ? SecondLastName : '',\r\n            RFC: RFC ? RFC : '',\r\n            Birthdate: Birthdate ? Birthdate : '',\r\n            Gender: Gender ? Gender : ''\r\n        }\r\n        await personalDetailMethods(model, action);\r\n    }\r\n\r\n    actionPersonalDetail = async () => {\r\n        const {\r\n            personalDetailCleanState,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutPersonalDetail');\r\n        }else{\r\n            await this.sendAction('PostPersonalDetail')\r\n        }\r\n        if(this.props.personalDetailReducer.data.Id){\r\n            debugger\r\n            reDirect && history.push(`${reDirect}/${this.props.personalDetailReducer.data.Id}`)\r\n            setModal && setModal();\r\n            personalDetailCleanState()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { personalDetailCleanState } = this.props;\r\n        personalDetailCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            personalDetailHandleValidation,\r\n            personalDetailHandleChange,\r\n            personalDetailReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    LastName,\r\n                    SecondLastName,\r\n                    RFC,\r\n                    Birthdate,\r\n                    Gender\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionPersonalDetail}\r\n                textButton={Id ? 'Guardar Empleado' : 'Crear Empleado'}\r\n                textButtonLoading={Id ? 'Guardando Empleado...' : 'Creando Empleado...'}\r\n                validations={validations}\r\n                handleValidations={personalDetailHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Paterno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'LastName'}\r\n                    placeHolder={'Introduce apellido paterno'}\r\n                    inputValue={LastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.LastName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Apellido Materno'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'SecondLastName'}\r\n                    placeHolder={'Introduce apellido materno'}\r\n                    inputValue={SecondLastName}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.SecondLastName}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='RFC'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'RFC'}\r\n                    placeHolder={'Introduce un sueldo'}\r\n                    inputValue={RFC}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.RFC}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Fecha de Nacimiento'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='date'\r\n                    inputName={'Birthdate'}\r\n                    placeHolder={''}\r\n                    inputValue={Birthdate}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Birthdate}\r\n                />\r\n                {/* <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Genero'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Gender'}\r\n                    placeHolder={''}\r\n                    inputValue={Gender}\r\n                    onChange={personalDetailHandleChange}\r\n                    maxLength={25}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Gender}\r\n                /> */}\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Sexo'\r\n                    isMandatory=''\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Gender'}\r\n                    placeHolder={'Selecciona el Sexo'}\r\n                    inputValue={Gender}\r\n                    onChange={personalDetailHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Gender}\r\n                    optionPlaceHolder={'Selecciona el Sexo'}\r\n                    options={[\r\n                        {Id:'M',Name:'M'},\r\n                        {Id:'F',Name:'F'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({personalDetailReducer}) => {\r\n    return {personalDetailReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...personalDetailActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonDetail);\r\n","import ComponentListOfPersonalDetails from './ListOfPersonDetails'\r\nimport ComponentPersonDetail from './PersonDetail'\r\n\r\nexport const ListOfPersonDetails = ComponentListOfPersonalDetails;\r\nexport const PersonDetail = ComponentPersonDetail;","import React from 'react'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {ListOfPersonDetails as PersonDetails, PersonDetail} from '../../components-personal-detail'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport {JobDetails} from './'\r\n\r\n\r\nexport const ListOfPersonDetails = ({ redirectUser }) =>{\r\n    const history = useHistory();\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2> {TradeName}</h2>\r\n            <PersonDetails redirectUser={redirectUser}  history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\n// Alt + z\r\nexport const CreatePersonDetail = ({redirectUser}) => {\r\n    const personalDetailReducer = useSelector(state => state.personalDetailReducer);\r\n    const {data: {Id}}= personalDetailReducer;\r\n    const {companyId, personalDetailId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n                <ul className=\"list-inline mb-4\">\r\n                    <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/employees`} className=\"text-muted\">Empleados</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                    <li className=\"list-inline-item \"><small className=\"font-weight-bold\"> {!Id ? 'Crear Empleado' : 'Actualizar Empleado'}</small></li>\r\n                </ul>\r\n                <Row>\r\n                    <Col lg=\"6\" className='mb-5'>\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">{!Id ? 'Crea un Empleado' : 'Actualizar Empleado'}</h5>\r\n                                <PersonDetail personalDetailId={personalDetailId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/update-personal-detail`} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                    {Id ? <JobDetails.CreateJobDetail personalDetailId={personalDetailId}/> : '' }\r\n                </Row>\r\n        </>\r\n    )\r\n}\r\n","// Imports de react.\r\nimport React, {useEffect} from 'react'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n// Imports de config-components.\r\nimport {TableFilter} from '../config-components/Filter'\r\n\r\n// Imports de actions.\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\n// Icons\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nconst ListOfAreas = ({ title='Areas y departamentos', redirectUser, create='/create-area'}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer)\r\n    const dispatch = useDispatch();\r\n    const history = useHistory(); \r\n    const {companyId} = useParams();\r\n    useEffect(() => {    \r\n        dispatch(areaActions.areaMethods({companyId},'GetAreasByCompanyId'))\r\n    }, [dispatch, companyId])\r\n    \r\n    const getArea = (areaId) => {\r\n        history.push(`${redirectUser}/company/${companyId}/update-area/${areaId}`)\r\n    }\r\n\r\n    const {\r\n        api_actions: {cargando, error},\r\n        list_areas\r\n    } = areaReducer;\r\n\r\n    return(\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}`} className=\"text-muted\">Inicio</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n            <TableFilter \r\n                title={title}\r\n                titlesTable={['Nombre', 'Tipo' ,'Acciones']}\r\n                propertiesTable={['Name', 'Type']}\r\n                hrefCreate={`${redirectUser}/company/${companyId}${create}`}\r\n                bodyTable={list_areas}\r\n                loading={cargando}\r\n                error={error}\r\n                actions={[\r\n                    {action: 'Ver Area', handleAction: getArea },\r\n                ]}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListOfAreas;\r\n\r\n","// Imports de react.\r\nimport React, {Component} from 'react'\r\n\r\n// Imports de config-components.\r\nimport {InputText, Form1 } from '../config-components/Inputs'\r\nimport {RE_EMPTY } from '../config-components/RegularExpressions'\r\n\r\n// Imports de actions.\r\nimport {connect } from 'react-redux'\r\nimport * as areaActions from './reducer/areaActions'\r\n\r\nclass Area extends Component {\r\n    \r\n    componentDidMount = async() =>{\r\n        const {areaId, areaMethods} = this.props;\r\n        areaId && await areaMethods({Id: areaId}, 'GetArea');\r\n    }\r\n\r\n    sendAction = async (action) => {\r\n        const {\r\n            areaMethods, \r\n            areaReducer: {data : {\r\n                Id,\r\n                DateCreated,\r\n                Name,\r\n                CompanyId,\r\n                Taken,\r\n                Type,\r\n            }},\r\n            companyId\r\n        } = this.props\r\n        const model = {\r\n            Id : Id ? Id : 0,\r\n            DateCreated: DateCreated ? DateCreated : '0001-01-01T05:50:06.7199222-04:00',\r\n            Name: Name ? Name : '',\r\n            CompanyId: CompanyId ? CompanyId : companyId,\r\n            Taken: Taken ? Taken : false,\r\n            Type: Type ? Type : '',\r\n        }\r\n        await areaMethods(model, action);\r\n    }\r\n\r\n    actionProduct = async () => {\r\n        const {\r\n            areaReducer: {\r\n                data : {\r\n                    Id,\r\n                }\r\n            },\r\n            reDirect,\r\n            history,\r\n            setModal\r\n        } = this.props\r\n        \r\n        if(Id){\r\n            await this.sendAction('PutArea');\r\n        }else{\r\n            await this.sendAction('PostArea')\r\n        }\r\n        if(this.props.areaReducer.data.Id){\r\n            reDirect && history.push(`${reDirect}`)\r\n            setModal && setModal();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        const { areaCleanState } = this.props;\r\n        areaCleanState();    \r\n    }\r\n\r\n    render(){\r\n        const {\r\n            areaHandleValidation,\r\n            areaHandleChange,\r\n            areaReducer: {\r\n                data : {\r\n                    Id, \r\n                    Name,\r\n                    Type\r\n                },\r\n                api_actions: {cargando, error},\r\n                validations,\r\n            },\r\n            \r\n        } = this.props;\r\n        return(\r\n            <>\r\n            \r\n            <Form1\r\n                loading={ cargando }\r\n                error={error}\r\n                action={this.actionProduct}\r\n                textButton={Id ? 'Guardar Area' : 'Crear Area'}\r\n                textButtonLoading={Id ? 'Guardando Area...' : 'Crear Area...'}\r\n                validations={validations}\r\n                handleValidations={areaHandleValidation}\r\n            >\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Nombre'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='text'\r\n                    inputName={'Name'}\r\n                    placeHolder={'Introduce un Nombre'}\r\n                    inputValue={Name}\r\n                    onChange={areaHandleChange}\r\n                    maxLength={50}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Name}\r\n                />\r\n                <InputText \r\n                    classLabel='font-weight-bold'\r\n                    textLabel='Tipo'\r\n                    isMandatory='*'\r\n                    classMandatory=''\r\n                    inputType='select'\r\n                    inputName={'Type'}\r\n                    placeHolder={'Selecciona el tipo de Area'}\r\n                    inputValue={Type}\r\n                    onChange={areaHandleChange}\r\n                    RE={RE_EMPTY}\r\n                    validateRE={validations.Type}\r\n                    optionPlaceHolder={'Selecciona el tipo de Area'}\r\n                    options={[\r\n                        {Id:'Area',Name:'Area'},\r\n                        {Id:'Departamento',Name:'Departamento'}\r\n                    ]}\r\n                />\r\n            </Form1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({areaReducer}) => {\r\n    return {areaReducer}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    ...areaActions,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Area);\r\n","import ComponentListOfAreas from './ListOfAreas'\r\nimport ComponentArea from './Area'\r\n\r\nexport const ListOfAreas = ComponentListOfAreas;\r\nexport const Area = ComponentArea;","import {ListOfAreas as Areas, Area} from '../../components-area'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams, Link} from 'react-router-dom'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfAreas = ({redirectUser}) =>{\r\n    const history = useHistory();\r\n\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <h2>{TradeName}</h2>\r\n            <Areas redirectUser={redirectUser} history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport const CreateArea = ({redirectUser}) => {\r\n    const areaReducer = useSelector(state => state.areaReducer);\r\n    const {data: {Id}}= areaReducer;\r\n    const {companyId, areaId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`${redirectUser}/company/${companyId}/areas`} className=\"text-muted\">Areas</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">{!Id ? 'Crear Area' : 'Actualizar Area'} </small></li>\r\n            </ul>\r\n            <Row>\r\n                <Col lg=\"6\">\r\n                    <Card className=\"border-0\">\r\n                        <CardBody className=\"card-body\">\r\n                            <h5 className=\"font-weight-bold mb-3\">Crea un Puesto</h5>\r\n                            <Area  areaId={areaId} companyId={companyId} history={history} reDirect={`${redirectUser}/company/${companyId}/areas`} />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n","import * as ComponentCompanies from './Company'\r\nimport * as ComponentJobDetails from './JobDetails'\r\nimport * as ComponentPosition from './Position'\r\nimport * as ComponentPersonDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\nexport const Company = ComponentCompanies;\r\nexport const JobDetails = ComponentJobDetails;\r\nexport const Position = ComponentPosition;\r\nexport const PersonDetail = ComponentPersonDetail;\r\nexport const Area = ComponentArea;","import {Company, ListOfCompanies as Companies} from '../../components-company'\r\nimport {useSelector} from 'react-redux'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {\r\n    Row, Col,Card, CardBody\r\n} from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\n\r\nimport {Company as CompanyTemplate} from '../templates'\r\n\r\nimport {ListOfHistory} from '../../config-components'\r\n\r\nexport const ListOfCompanies = ({reDirect, history}) =>{\r\n    return (\r\n        <Companies reDirect={reDirect} history={history} />\r\n    )\r\n}\r\n\r\nexport const CreateCompany = () => {\r\n    const {userId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <ListOfHistory.Li\r\n                    items={[\r\n                        {href: '/admin-dashboard', name: 'Inicio'},\r\n                        {href: '/admin-dashboard/companies', name: 'Empresas'},\r\n                        {href: '', name: 'Empresas', last: true},\r\n                    ]}\r\n                />\r\n                <Row>\r\n                    <Col lg=\"6\">\r\n                        <Card className=\"border-0\">\r\n                            <CardBody className=\"card-body\">\r\n                                <h5 className=\"font-weight-bold mb-3\">Crea una Empresa</h5>\r\n                                <Company userId={userId} history={history} reDirect={'/admin-dashboard/company'} />\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Indicators = () => {\r\n    const companyReducer = useSelector(state => state.companyReducer)\r\n    const {companyId} = useParams();\r\n    const { data: {TradeName}} = companyReducer\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <CompanyTemplate.Indicators \r\n                    user={'/admin-dashboard/company'} \r\n                    companyId={companyId} \r\n                />\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row } from 'reactstrap'\r\nimport {AdminDashboardPages} from './'\r\nimport {Position as TemplatePosition} from '../templates'\r\nimport * as FaIcons from \"react-icons/fa\"\r\n\r\nexport const ListOfPositions = () =>{\r\n    return (\r\n        <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <TemplatePosition.ListOfPositions \r\n                reDirect={`/admin-dashboard/company/companyId/update-position/positionId`}\r\n                reDirectBase='/admin-dashboard/company/companyId'\r\n                reDirectCreate='/admin-dashboard/company/companyId/create-position'\r\n            />\r\n        </AdminDashboardPages.TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePosition = () => {\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/admin-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Puestos</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect={`/admin-dashboard/company/companyId/positions`}\r\n                    />\r\n                </Row>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import {OrganizationChart, UpdateChild, ViewOrganizationChart} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {AdminDashboardPages} from './'\r\nimport {NavbarAdmin} from '../../config-components/Navbars'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <NavbarAdmin />\r\n            <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/admin-dashboard/company/${companyId}`}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <AdminDashboardPages.TemplateDashboardAdmin>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/admin-dashboard/company/${companyId}/organization-chart`}/>\r\n            </AdminDashboardPages.TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport { PersonDetail as TemplatesPersonalDetail} from '../templates'\r\n\r\n\r\nexport const ListOfPersonDetails = () =>{\r\n    \r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/admin-dashboard' />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdatePersonDetail = () => {\r\n\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/admin-dashboard'/>  \r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {TemplateDashboardAdmin} from './Dashboard'\r\nimport {Area as TemplateArea} from '../templates'\r\n\r\nexport const ListOfAreas = () =>{\r\n    return (\r\n        <TemplateDashboardAdmin>\r\n            <TemplateArea.ListOfAreas redirectUser={'/admin-dashboard'} />\r\n        </TemplateDashboardAdmin>\r\n    )\r\n}\r\n\r\nexport const CreateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateArea = () => {\r\n    return (\r\n        <>\r\n            <TemplateDashboardAdmin>\r\n                <TemplateArea.CreateArea  redirectUser='/admin-dashboard' ></TemplateArea.CreateArea>\r\n            </TemplateDashboardAdmin>\r\n        </>\r\n    )\r\n}\r\n","import * as ComponentUsers from './Users'\r\nimport * as ComponentSections from './Sections'\r\nimport * as ComponentCourses from './Courses'\r\nimport * as ComponentProducts from './Products'\r\nimport * as ComponentDashboard from './Dashboard'\r\nimport * as ComponentCompany from './Company'\r\nimport * as ComponentPositions from './Position'\r\nimport * as ComponentOrganizationChart from './OrganizationChart'\r\nimport * as ComponentPersonalDetail from './PersonalDetail'\r\nimport * as ComponentArea from './Area'\r\n\r\n\r\nexport const AdminUsersPages = ComponentUsers;\r\nexport const AdminSectionsPages = ComponentSections;\r\nexport const AdminCoursesPages = ComponentCourses;\r\nexport const AdminProductPages = ComponentProducts;\r\nexport const AdminDashboardPages = ComponentDashboard;\r\nexport const AdminCompanyPages = ComponentCompany;\r\nexport const AdminPositionsPages = ComponentPositions;\r\nexport const AdminOrganizationChart = ComponentOrganizationChart;\r\nexport const AdminPersonalDetail = ComponentPersonalDetail;\r\nexport const AdminArea = ComponentArea;\r\n\r\n\r\n\r\n","import {ViewOrganizationChart, UpdateChild} from '../../components-organization-chart'\r\nimport {useParams, useHistory} from 'react-router-dom'\r\nimport {DashboardUserTemplate} from './'\r\n\r\nexport const OrgainaztionChart = () => {\r\n    const {companyId} = useParams();\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <ViewOrganizationChart companyId={companyId} history={history} hrefBase={`/user-dashboard/company/${companyId}`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UpdateCurrent = () => {\r\n    const {companyId, nodeId} = useParams();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <UpdateChild history={history} companyId={companyId} nodeId={nodeId} reDirect={`/user-dashboard/company/${companyId}/organization-chart`}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react' \r\nimport {Row} from 'reactstrap'\r\nimport {useSelector} from 'react-redux'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {Container} from 'reactstrap'\r\nimport {Navbars} from '../../config-components'\r\nimport {\r\n    Company, \r\n    Position as TemplatePosition, \r\n    PersonDetail as TemplatesPersonalDetail,\r\n    Area as TemplateArea\r\n} from '../templates'\r\nimport * as ComponentsOrganizatioChart from './OrganizationChart'\r\nimport * as FaIcons from \"react-icons/fa\"\r\nimport { } from '../templates'\r\n\r\n\r\nexport const DashboardUserTemplate = ({children}) => {\r\n    return(\r\n            <>\r\n                <Navbars.User />\r\n                <section className=\"bg-light h-100 py-6\">\r\n                    <Container>\r\n                        {children}\r\n                    </Container>\r\n                </section>\r\n            </>\r\n    )\r\n}\r\n\r\nexport const DashboardUserPage = () => {\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <Company.Indicators user={`/user-dashboard/company`} companyId={companyId} hrefBase={'user-dashboard'}/>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPositionPage = () =>{\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatePosition.ListOfPositions \r\n                    reDirect={`/user-dashboard/company/companyId/update-position/positionId`}\r\n                    reDirectBase='/user-dashboard/company/companyId'\r\n                    reDirectCreate='/user-dashboard/company/companyId/create-position'\r\n                />\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserCreatePosition = () =>{\r\n    const {companyId} = useParams();\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n            <ul className=\"list-inline mb-4\">\r\n                <li className=\"list-inline-item\"><small><Link to={`/user-dashboard/company/${companyId}/positions`} className=\"text-muted\">Posiciones</Link> <FaIcons.FaChevronRight className=\"ml-1\" /></small></li>\r\n                <li className=\"list-inline-item \"><small className=\"font-weight-bold\">Posiciones</small></li>\r\n            </ul>\r\n                <Row>\r\n                    <TemplatePosition.CreatePosition \r\n                        reDirect='/user-dashboard/company/companyId/positions'\r\n                    />\r\n                </Row>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfPersonDetails = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplatesPersonalDetail.ListOfPersonDetails redirectUser='/user-dashboard' />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdatePersonDetail = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplatesPersonalDetail.CreatePersonDetail redirectUser='/user-dashboard'/>  \r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserListOfAreas = () =>{\r\n    return (\r\n        <DashboardUserTemplate>\r\n            <TemplateArea.ListOfAreas redirectUser={'/user-dashboard'} />\r\n        </DashboardUserTemplate>\r\n    )\r\n}\r\n\r\nexport const UserCreateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserUpdateArea = () => {\r\n    return (\r\n        <>\r\n            <DashboardUserTemplate>\r\n                <TemplateArea.CreateArea  redirectUser='/user-dashboard' ></TemplateArea.CreateArea>\r\n            </DashboardUserTemplate>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const UserOrganizationChart = ComponentsOrganizatioChart;","// Imports de react.\r\nimport React from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\n// Imports del landing page\r\nimport * as Landings from './pages/landing'\r\nimport {NotFoundPage} from './pages/NotFoundPage'\r\n\r\n// Imports de PageSessions.\r\n//import {LoginPage} from './pages/Login'\r\nimport {\r\n  LoginPage,\r\n  SignUpPage,\r\n  ForgotPassword,  \r\n  CheckYourAccount,\r\n  ChangePasswordPage\r\n} from './pages/session'\r\n\r\n// Imports de Páginas del administrador\r\nimport {\r\n  AdminUsersPages, \r\n  AdminSectionsPages, \r\n  AdminCoursesPages,\r\n  AdminProductPages,\r\n  AdminDashboardPages,\r\n  AdminCompanyPages,\r\n  AdminPositionsPages,\r\n  AdminOrganizationChart,\r\n  AdminPersonalDetail,\r\n  AdminArea\r\n}from './pages/admin'\r\n\r\n/* Imports de Páginas de usario */\r\nimport {\r\n  DashboardUserPage,\r\n  UserOrganizationChart,\r\n  UserListOfPositionPage,\r\n  UserCreatePosition,\r\n  UserListOfPersonDetails,\r\n  UserCreatePersonDetail,\r\n  UserUpdatePersonDetail,\r\n  UserListOfAreas,\r\n  UserCreateArea,\r\n  UserUpdateArea\r\n} from './pages/user'\r\n\r\nimport {OrganizationChart} from './components-organization-chart'\r\n\r\nfunction App() {\r\n  return (\r\n      <BrowserRouter >\r\n        <Switch>\r\n          {/* Páginas de Home */}\r\n          <Route  exact path=\"/\" component={Landings.SoftwareAgency}></Route>\r\n          <Route  exact path=\"/products\" component={Landings.Products}></Route>\r\n\r\n         \r\n\r\n          {/* Páginas para el manejo de sesión */}\r\n          <Route  exact path=\"/login\" component={LoginPage}></Route>\r\n          <Route  exact path=\"/sign-up\" component={SignUpPage}></Route>\r\n          <Route  exact path=\"/forgot-password\" component={ForgotPassword}></Route>\r\n          <Route  exact path=\"/check-your-account\" component={CheckYourAccount}></Route>\r\n          <Route  exact path=\"/change-password/:code/:email\" component={ChangePasswordPage}></Route>\r\n  \r\n          {/* Páginas para el admin */}\r\n          <Route  exact path=\"/admin-dashboard\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard/:indicator\" component={AdminDashboardPages.Dashboard}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-user/:userId\" component={AdminUsersPages.ReadUser}></Route>\r\n          <Route  exact path=\"/admin-dashboard-read-admin/:userId\" component={AdminUsersPages.ReadAdmin}></Route>\r\n          { /* crud empresas */ }\r\n          <Route  exact path=\"/admin-dashboard/create-company/:userId\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/user/create-company\" component={AdminCompanyPages.CreateCompany}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId\" component={AdminCompanyPages.Indicators}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/positions\" component={AdminPositionsPages.ListOfPositions}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-position\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-position/:positionId\" component={AdminPositionsPages.CreatePosition}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={AdminOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart/node/:nodeId\" component={AdminOrganizationChart.UpdateCurrent}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/employees\" component={AdminPersonalDetail.ListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-personal-detail\" component={AdminPersonalDetail.CreatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={AdminPersonalDetail.UpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/areas\" component={AdminArea.ListOfAreas}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/create-area\" component={AdminArea.CreateArea}></Route>\r\n          <Route  exact path=\"/admin-dashboard/company/:companyId/update-area/:areaId\" component={AdminArea.UpdateArea}></Route>\r\n\r\n         \r\n          {/* <Route  exact path=\"/admin-dashboard/company/:companyId/organization-chart\" component={OrganizationChart}></Route> */}\r\n\r\n          <Route  exact path=\"/admin-dashboard/product/:productId/:section\" component={AdminProductPages.EditProduct}></Route>\r\n          { /* crud videos para admins */ }\r\n          <Route  exact path=\"/admin-dashboard/course/:courseId\" component={AdminCoursesPages.EditCourse}></Route>\r\n          <Route  exact path=\"/admin-dashboard/section/:courseId\" component={AdminSectionsPages.CreateSection}></Route>\r\n          <Route exact path=\"/player/watch-class/:productId/:courseId\" component={AdminCoursesPages.WhatchCourse}/>\r\n\r\n          {/* Páginas para dashboard de usuarios */}\r\n          <Route  exact path=\"/user-dashboard/company/:companyId\" component={DashboardUserPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/organization-chart\" component={UserOrganizationChart.OrgainaztionChart}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/positions\" component={UserListOfPositionPage}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-position\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-position/:positionId\" component={UserCreatePosition}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/employees\" component={UserListOfPersonDetails}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-personal-detail\" component={UserCreatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-personal-detail/:personalDetailId\" component={UserUpdatePersonDetail}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/areas\" component={UserListOfAreas}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/create-area\" component={UserCreateArea}></Route>\r\n          <Route  exact path=\"/user-dashboard/company/:companyId/update-area/:areaId\" component={UserUpdateArea}></Route>\r\n\r\n          <Route  exact path=\"/organigrama-prueba\" component={OrganizationChart}></Route>\r\n\r\n\r\n          {/* Vista pare ver un video de un curso */}\r\n          <Route path=\"*\" component={NotFoundPage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  LOGIN_CARGANDO,\r\n  LOGIN_ERROR,\r\n  LOGIN_HANDLE_CHANGE,\r\n  LOGIN_CLEAN_STATE,\r\n  LOGIN_USER,\r\n  LOGIN_HANDLE_VALIDATION\r\n} from \"./loginTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    roles: localStorage.getItem(\"role\"),\r\n    grant_type: \"password\",\r\n    username: \"\",\r\n    password: \"\",\r\n    access_token: \"\",\r\n  },\r\n  validations: {\r\n    username: \"\",\r\n    password: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case LOGIN_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case LOGIN_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          roles: localStorage.getItem(\"role\"),\r\n          grant_type: \"password\",\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          grant_type: \"password\",\r\n          roles: action.payload.roles,\r\n          username: action.payload.username,\r\n          password: action.payload.password,\r\n          access_token: action.payload.access_token,\r\n          userName: action.payload.userName,\r\n        },\r\n        validations: {\r\n          username: \"\",\r\n          password: \"\",\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import {\r\n  SIGN_UP_CARGANDO,\r\n  SIGN_UP_ERROR,\r\n  SIGN_UP_HANDLE_CHANGE,\r\n  SIGN_UP_CLEAN_STATE,\r\n  SIGN_UP_USER,\r\n  SIGN_UP_HANDLE_VALIDATION,\r\n  SIGN_UP_PRELOADED_DATA\r\n} from \"./signUpTypes\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: \"\",\r\n    Roles: \"\",\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"email\",\r\n    TypeUser: '',\r\n    Idd: \"\",\r\n  },\r\n  validations: {\r\n    UserName: \"\",\r\n    PhoneNumber: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmPassword: \"\",\r\n    ValidateByPhoneOrEmail: \"\",\r\n    Idd: \"\",\r\n  },\r\n};\r\n\r\nconst reducer =  (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_UP_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case SIGN_UP_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_HANDLE_VALIDATION:\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: action.payload.isInvalid,\r\n        },\r\n      };\r\n    case SIGN_UP_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: \"\",\r\n          Roles: \"\",\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser:\"\"\r\n        },\r\n      };\r\n    case SIGN_UP_USER:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          Roles: action.payload.Roles,\r\n          UserName: action.payload.UserName,\r\n          PhoneNumber: action.payload.PhoneNumber,\r\n          Email: action.payload.Email,\r\n          Password: action.payload.Password,\r\n          ConfirmPassword: action.payload.ConfirmPassword,\r\n          ValidateByPhoneOrEmail: \"email\",\r\n          Idd: action.payload.Idd,\r\n          TypeUser: action.payload.TypeUser\r\n        },\r\n        validations: {\r\n          UserName: \"\",\r\n          PhoneNumber: \"\",\r\n          Email: \"\",\r\n          Password: \"\",\r\n          ConfirmPassword: \"\",\r\n          ValidateByPhoneOrEmail: \"\",\r\n          Idd: \"\",\r\n          TypeUser: \"\"\r\n        },\r\n      };\r\n\r\n      case SIGN_UP_PRELOADED_DATA:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Roles: action.payload.Roles,\r\n            UserName: action.payload.UserName,\r\n            PhoneNumber: action.payload.PhoneNumber,\r\n            Email: action.payload.Email,\r\n            Password: action.payload.Password,\r\n            ConfirmPassword: action.payload.ConfirmPassword,\r\n            ValidateByPhoneOrEmail: \"email\",\r\n            Idd: action.payload.Idd,\r\n            TypeUser: action.payload.TypeUser\r\n          },\r\n          validations: {\r\n            UserName: \"\",\r\n            PhoneNumber: \"\",\r\n            Email: \"\",\r\n            Password: \"\",\r\n            ConfirmPassword: \"\",\r\n            ValidateByPhoneOrEmail: \"\",\r\n            Idd: \"\",\r\n            TypeUser: \"\"\r\n          },\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n    CHANGE_PASSWORD_CARGANDO,\r\n    CHANGE_PASSWORD_ERROR,\r\n    CHANGE_PASSWORD_HANDLE_CHANGE,\r\n    CHANGE_PASSWORD_CLEAN_STATE,\r\n    CHANGE_PASSWORD_USER,\r\n    CHANGE_PASSWORD_HANDLE_VALIDATION,\r\n  } from \"./changePasswordTypes\";\r\n\r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      phoneOrEmail: '',\r\n      Code:'',\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n      usernameOrEmailOrPhoneNumber:'',\r\n    },\r\n    validations: {\r\n      phoneOrEmail: \"\",\r\n      Code:true,\r\n      NewPassword:'',\r\n      ConfirmNewPassword:'',\r\n    },\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CHANGE_PASSWORD_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n      case CHANGE_PASSWORD_USER:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            phoneOrEmail: '',\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n            usernameOrEmailOrPhoneNumber:''\r\n      \r\n          },\r\n          validations: {\r\n            phoneOrEmail: \"\",\r\n            Code:'',\r\n            NewPassword:'',\r\n            ConfirmNewPassword:'',\r\n          },\r\n        };\r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              cargando: false,\r\n              error: \"\",\r\n            },\r\n          };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    COMPANY_CARGANDO,\r\n    COMPANY_ERROR,\r\n    COMPANY_HANDLE_CHANGE,\r\n    COMPANY_CLEAN_STATE,\r\n    COMPANY_CRUD,\r\n    COMPANIES_LIST,\r\n    COMPANY_HANDLE_VALIDATION\r\n  } from \"./companyTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity: '',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      \r\n    },\r\n    validations: {\r\n      TradeName: \"\",\r\n      BusinessName:'',\r\n      BusinessActivity:'',\r\n      fileCover: '',\r\n      UserId:'',\r\n    },\r\n    list_companies: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COMPANY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COMPANY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COMPANY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity: '',\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: \"\",\r\n            BusinessName:'',\r\n            BusinessActivity:'',\r\n            fileCover: '',\r\n            UserId:'',\r\n          },\r\n          list_companies: [],\r\n        };\r\n      case COMPANY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            UserId: action.payload.UserId,\r\n            TradeName:  action.payload.TradeName,\r\n            BusinessName: action.payload.BusinessName,\r\n            BusinessActivity:  action.payload.BusinessActivity,\r\n            fileCover: '',\r\n            Blobs:[],\r\n            \r\n          },\r\n          validations: {\r\n            TradeName: true,\r\n            BusinessName: true,\r\n            BusinessActivity: true,\r\n            fileCover: '',\r\n            UserId:'',\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COMPANIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_companies: action.payload,\r\n        };\r\n  \r\n      case \"company_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    POSITION_CARGANDO,\r\n    POSITION_ERROR,\r\n    POSITION_HANDLE_CHANGE,\r\n    POSITION_CLEAN_STATE,\r\n    POSITION_CRUD,\r\n    POSITIONS_LIST,\r\n    POSITION_HANDLE_VALIDATION\r\n  } from \"./positionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      Description: \"\",\r\n      Description2: \"\",\r\n      CompanyId:'',\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      Description2: \"\",\r\n      Objective:'',\r\n      Knowledge:'',\r\n      Salary:''\r\n    },\r\n    list_positions: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case POSITION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case POSITION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case POSITION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            Description: \"\",\r\n            Description2: \"\",\r\n            CompanyId:'',\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Description2: \"\",\r\n            Objective:'',\r\n            Knowledge:'',\r\n            Salary:''\r\n          },\r\n          list_positions: [],\r\n        };\r\n      case POSITION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            Description: action.payload.Description,\r\n            Description2: action.payload.Description2,\r\n            CompanyId: action.payload.CompanyId,\r\n            Objective: action.payload.Objective,\r\n            Knowledge: action.payload.Knowledge,\r\n            Salary: action.payload.Salary\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Description: action.payload.Description ? true : '',\r\n            Description2: action.payload.Description2 ? true : '',\r\n            Objective: action.payload.Objective ? true: '',\r\n            Knowledge: action.payload.Knowledge ? action.payload.Knowledge: '',\r\n            Salary: action.payload.Salary ? true: ''\r\n          },\r\n          list_positions: [],\r\n        };\r\n  \r\n      case POSITIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_positions: action.payload,\r\n        };\r\n  \r\n      case \"position_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    ORGANIZATION_CHART_CARGANDO,\r\n    ORGANIZATION_CHART_ERROR,\r\n    ORGANIZATION_CHART_HANDLE_CHANGE,\r\n    ORGANIZATION_CHART_CLEAN_STATE,\r\n    ORGANIZATION_CHART_CRUD,\r\n    ORGANIZATION_CHARTS_LIST,\r\n    ORGANIZATION_CHART_HANDLE_VALIDATION,\r\n    ORGANIZATION_CHART_CHILD\r\n  } from \"./organizationChartTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated: '',\r\n      PositionId: '',\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n      Area: '',\r\n      CompanyId:0,\r\n      PositionChartId:0,\r\n      PositionName:'',\r\n      Objective:'',\r\n      PersonName: '',\r\n      ChartTree1:[],\r\n    },\r\n    validations: {\r\n      PositionId: \"\",\r\n      PersonDetailId:'',\r\n      AreasId:'',\r\n    },\r\n    list_organization_chart: [],\r\n    read_child: {}\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ORGANIZATION_CHART_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ORGANIZATION_CHART_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated: '',\r\n            PositionId: '',\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n            Area:'',\r\n            CompanyId:0,\r\n            PositionChartId:0,\r\n            PositionName:'',\r\n            Objective:'',\r\n            PersonName: '',\r\n            ChartTree1:[],\r\n\r\n          },\r\n          validations: {\r\n            PositionId: \"\",\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n          read_child: {}\r\n\r\n        };\r\n      case ORGANIZATION_CHART_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id, \r\n            DateCreated: action.payload.DateCreated,\r\n            PositionId:  action.payload.PositionId,\r\n            PersonDetailId: action.payload.PersonDetailId,\r\n            AreasId: action.payload.AreasId,\r\n            Area: action.payload.Area,\r\n            CompanyId: action.payload.CompanyId,\r\n            PositionChartId:action.payload.PositionChartId,\r\n            PositionName:action.payload.PositionName,\r\n            Objective: action.payload.Objective,\r\n            PersonName: action.payload.PersonName,\r\n            ChartTree1: action.payload.ChartTree1,\r\n          },\r\n          validations: {\r\n            PositionId: '',\r\n            PersonDetailId:'',\r\n            AreasId:'',\r\n          },\r\n          list_organization_chart: [],\r\n        };\r\n      case ORGANIZATION_CHARTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_organization_chart: action.payload,\r\n        };\r\n      case ORGANIZATION_CHART_CHILD:\r\n        debugger\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          read_child: action.payload[0],\r\n        };\r\n  \r\n      case \"organization_chart_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PERSONAL_DETAIL_CARGANDO,\r\n    PERSONAL_DETAIL_ERROR,\r\n    PERSONAL_DETAIL_HANDLE_CHANGE,\r\n    PERSONAL_DETAIL_CLEAN_STATE,\r\n    PERSONAL_DETAIL_CRUD,\r\n    PERSONAL_DETAILS_LIST,\r\n    PERSONAL_DETAIL_HANDLE_VALIDATION\r\n  } from \"./personalDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      LastName: \"\",\r\n      SecondLastName:'',\r\n      CompanyId:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:''\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      LastName:'',\r\n      SecondLastName:'',\r\n      RFC:'',\r\n      Birthdate:'',\r\n      Gender:''\r\n    },\r\n    list_personal_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PERSONAL_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PERSONAL_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            LastName: \"\",\r\n            SecondLastName:'',\r\n            CompanyId:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            LastName:'',\r\n            SecondLastName:'',\r\n            RFC:'',\r\n            Birthdate:'',\r\n            Gender:''\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n      case PERSONAL_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            LastName:  action.payload.LastName,\r\n            SecondLastName: action.payload.SecondLastName,\r\n            CompanyId: action.payload.CompanyId,\r\n            RFC: action.payload.RFC,\r\n            Birthdate: action.payload.Birthdate?.slice(0, 10),\r\n            Gender:action.payload.Gender \r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            LastName: action.payload.LastName ? true : '',\r\n            SecondLastName: action.payload.SecondLastName ? true : '',\r\n            RFC: action.payload.RFC ? true : '',\r\n            Birthdate: action.payload.Birthdate ? true : '',\r\n            Gender: action.payload.Gender ? true : ''\r\n          },\r\n          list_personal_details: [],\r\n        };\r\n  \r\n      case PERSONAL_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_personal_details: action.payload,\r\n        };\r\n  \r\n      case \"personal_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    AREA_CARGANDO,\r\n    AREA_ERROR,\r\n    AREA_HANDLE_CHANGE,\r\n    AREA_CLEAN_STATE,\r\n    AREA_CRUD,\r\n    AREAS_LIST,\r\n    AREA_HANDLE_VALIDATION\r\n  } from \"./areaTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name:'',\r\n      CompanyId:'',\r\n      Type:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Type:'',\r\n    },\r\n    list_areas: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case AREA_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case AREA_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case AREA_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case AREA_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name:'',\r\n            CompanyId: \"\",\r\n            Type:'',\r\n           \r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Type:'',\r\n          },\r\n          list_areas: [],\r\n        };\r\n      case AREA_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CompanyId:  action.payload.CompanyId,\r\n            Type:  action.payload.Type,\r\n          },\r\n          validations: {\r\n            Name: action.payload.Name ? true : '',\r\n            Type: action.payload.Type ? true : '',\r\n          },\r\n          list_areas: [],\r\n        };\r\n  \r\n      case AREAS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_areas: action.payload,\r\n        };\r\n  \r\n      case \"area_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    JOB_DETAIL_CARGANDO,\r\n    JOB_DETAIL_ERROR,\r\n    JOB_DETAIL_HANDLE_CHANGE,\r\n    JOB_DETAIL_CLEAN_STATE,\r\n    JOB_DETAIL_CRUD,\r\n    JOB_DETAILS_LIST,\r\n    JOB_DETAIL_HANDLE_VALIDATION\r\n  } from \"./jobDetailTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      PersonDetailId:'',\r\n      DateAdmission: \"\",\r\n      Contract:'',\r\n      Benefits:'',\r\n      IntegratedSalary:'',\r\n      DailySalary:'',\r\n      Type:'',\r\n      CompanyId:'',\r\n      AreaId:''\r\n    },\r\n    validations: {\r\n      DateAdmission: \"\",\r\n      Contract:'',\r\n      Benefits:'',\r\n      IntegratedSalary:'',\r\n      DailySalary:'',\r\n      Type:'',\r\n      AreaId:''\r\n    },\r\n    list_job_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case JOB_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case JOB_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case JOB_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            PersonDetailId:'',\r\n            DateAdmission:'',\r\n            Contract:'',\r\n            Benefits:'',\r\n            IntegratedSalary:'',\r\n            DailySalary:'',\r\n            Type:'',\r\n            CompanyId:'',\r\n            AreaId:''\r\n          },\r\n          validations: {\r\n              DateAdmission: \"\",\r\n              Contract:'',\r\n              Benefits:'',\r\n              IntegratedSalary:'',\r\n              DailySalary:'',\r\n              Type:'',\r\n              AreaId:''\r\n          },\r\n          list_job_details: [],\r\n        };\r\n      case JOB_DETAIL_CRUD:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated: action.payload.DateCreated,\r\n            DateModified: action.payload.DateModified,\r\n            PersonDetailId: action.payload.PersonDetailId,\r\n            DateAdmission: action.payload.DateAdmission?.slice(0, 10),\r\n            Contract: action.payload.Contract,\r\n            Benefits: action.payload.Benefits,\r\n            IntegratedSalary: action.payload.IntegratedSalary,\r\n            DailySalary: action.payload.DailySalary,\r\n            Type: action.payload.Type,\r\n            CompanyId: action.payload.CompanyId,\r\n            AreaId: action.payload.AreaId\r\n          },\r\n          validations: {\r\n              DateAdmission: action.payload.DateAdmission ? true : '',\r\n              Contract: action.payload.Contract ? true : '',\r\n              Benefits: action.payload.Benefits ? true : '',\r\n              IntegratedSalary: action.payload.IntegratedSalary ? true : '',\r\n              DailySalary: action.payload.DailySalary ? true : '',\r\n              Type: action.payload.Type ? true : '',\r\n              AreaId: action.payload.AreaId ? true : '',\r\n          },\r\n          \r\n          list_job_details: [],\r\n        };\r\n  \r\n      case JOB_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_job_details: action.payload,\r\n        };\r\n  \r\n      case \"job_detail_put\":\r\n        debugger\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    CATEGORY_CARGANDO,\r\n    CATEGORY_ERROR,\r\n    CATEGORY_HANDLE_CHANGE,\r\n    CATEGORY_CLEAN_STATE,\r\n    CATEGORY_CRUD,\r\n    CATEGORIES_LIST,\r\n    CATEGORY_HANDLE_VALIDATION\r\n  } from \"./categoryTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_HANDLE_VALIDATION: \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories: [],\r\n        };\r\n      case CATEGORY_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    CATEGORY_PRODUCT_CARGANDO,\r\n    CATEGORY_PRODUCT_ERROR,\r\n    CATEGORY_PRODUCT_HANDLE_CHANGE,\r\n    CATEGORY_PRODUCT_CLEAN_STATE,\r\n    CATEGORY_PRODUCT_CRUD,\r\n    CATEGORIES_PRODUCTS_LIST,\r\n    CATEGORY_PRODUCT_HANDLE_VALIDATION\r\n  } from \"./categoryProductTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      Name: \"\",\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n    },\r\n    list_categories_products: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case CATEGORY_PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case CATEGORY_PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            Name: \"\",\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_categories_products: [],\r\n        };\r\n      case CATEGORY_PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            Name: action.payload.Name,\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case CATEGORIES_PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_categories_products: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    PRODUCT_CARGANDO,\r\n    PRODUCT_ERROR,\r\n    PRODUCT_HANDLE_CHANGE,\r\n    PRODUCT_CLEAN_STATE,\r\n    PRODUCT_CRUD,\r\n    PRODUCTS_LIST,\r\n    PRODUCT_HANDLE_VALIDATION\r\n  } from \"./productTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n      Price: '',\r\n      ProductCategoryId:'',\r\n      fileCover: '',\r\n      Blobs:[],\r\n      Categories: []\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n      ProductCategoryId:'',\r\n      fileCover: ''\r\n    },\r\n    list_products: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n            Price: '',\r\n            ProductCategoryId:'',\r\n            Blobs:[],\r\n            Categories: [],\r\n            fileCover: ''\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n            Price:'',\r\n            ProductCategoryId:'',\r\n            fileCover: ''\r\n          },\r\n          list_products: [],\r\n        };\r\n      case PRODUCT_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n            Price: action.payload.Price,\r\n            ProductCategoryId:action.payload.ProductCategoryId,\r\n            Blobs: action.payload.Blobs,\r\n            Categories: action.payload.Categories\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n            Price: true,\r\n            ProductCategoryId: true,\r\n            fileCover: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCTS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_products: action.payload,\r\n        };\r\n  \r\n      case \"product_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","import {\r\n    PRODUCT_DETAIL_CARGANDO,\r\n    PRODUCT_DETAIL_ERROR,\r\n    PRODUCT_DETAIL_HANDLE_CHANGE,\r\n    PRODUCT_DETAIL_CLEAN_STATE,\r\n    PRODUCT_DETAIL_CRUD,\r\n    PRODUCT_DETAILS_LIST,\r\n    PRODUCT_DETAIL_HANDLE_VALIDATION\r\n  } from \"./productDetailsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      SubTitle:'',\r\n      Description:'',\r\n      ProductId: '',\r\n      BlobId: '',\r\n      fileZip: '',\r\n      Blob: {}\r\n    },\r\n    validations: {\r\n        SubTitle:'',\r\n        Description:'',\r\n        fileZip: ''\r\n    },\r\n    list_product_details: [],\r\n  };\r\n  \r\n  const Reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAIL_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n            ? [action.payload.e.files[0]]\r\n            : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_HANDLE_VALIDATION:\r\n        \r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case PRODUCT_DETAIL_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            SubTitle:'',\r\n            Description:'',\r\n            ProductId: '',\r\n            BlobId: '',\r\n            fileZip: '',\r\n            Blob: {}\r\n          },\r\n          validations: {\r\n              SubTitle:'',\r\n              Description:'',\r\n              fileZip: ''\r\n          },\r\n          list_product_details: [],\r\n        };\r\n      case PRODUCT_DETAIL_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            SubTitle:action.payload.SubTitle,\r\n            Description:action.payload.Description,\r\n            ProductId: action.payload.ProductId,\r\n            BlobId: action.payload.BlobId,\r\n            Blob: action.payload.Blob\r\n          },\r\n          validations: {\r\n              SubTitle:true,\r\n              Description:true,\r\n              fileZip: ''\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case PRODUCT_DETAILS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_product_details: action.payload,\r\n        };\r\n  \r\n      case \"product_detail_put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  \r\n  export default Reducer;","export const COURSE_CARGANDO = \"course_cargando\";\r\nexport const COURSE_ERROR = \"course_error\";\r\nexport const COURSE_HANDLE_CHANGE = \"course_handle_change\";\r\nexport const COURSE_CLEAN_STATE = \"course_clean_state\";\r\nexport const COURSE_CRUD = \"course_crud\";\r\nexport const COURSES_LIST = \"courses_list\";\r\nexport const COURSE_HANDLE_VALIDATION = \"course_handle_validation\";","import {\r\n    COURSE_CARGANDO,\r\n    COURSE_ERROR,\r\n    COURSE_HANDLE_CHANGE,\r\n    COURSE_CLEAN_STATE,\r\n    COURSE_CRUD,\r\n    COURSES_LIST,\r\n    COURSE_HANDLE_VALIDATION\r\n  } from \"./courseTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      UserId:'',\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      Description:'',\r\n    },\r\n    list_courses: [],\r\n  };\r\n  \r\n  export default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case COURSE_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case COURSE_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case COURSE_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            UserId:'',\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            Description:'',\r\n          },\r\n          list_courses: [],\r\n        };\r\n      case COURSE_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            UserId:action.payload.UserId,\r\n            Name: action.payload.Name,\r\n            Description:action.payload.Description,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            Description:true,\r\n          },\r\n          list_brands: [],\r\n        };\r\n  \r\n      case COURSES_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_courses: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n  ","import {\r\n    SECTION_CARGANDO,\r\n    SECTION_ERROR,\r\n    SECTION_HANDLE_CHANGE,\r\n    SECTION_CLEAN_STATE,\r\n    SECTION_CRUD,\r\n    SECTIONS_LIST,\r\n    SECTIONS_SELECT,\r\n    SECTION_HANDLE_VALIDATION\r\n  } from \"./sectionTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: 0,\r\n      DateCreated:'',\r\n      DateModified:'',\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    validations: {\r\n      Name: \"\",\r\n      CourseId:'',\r\n    },\r\n    list_sections: [],\r\n    list_sections_select: []\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case SECTION_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case SECTION_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_HANDLE_VALIDATION:\r\n        return {\r\n          ...state,\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case SECTION_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: 0,\r\n            DateCreated:'',\r\n            DateModified:'',\r\n            Name: \"\",\r\n            CourseId: \"\"\r\n          },\r\n          validations: {\r\n            Name: \"\",\r\n            CourseId:'',\r\n          },\r\n          list_sections: [],\r\n          list_sections_select: []\r\n        };\r\n      case SECTION_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            DateCreated:action.payload.DateCreated,\r\n            DateModified:action.payload.DateModified,\r\n            Name: action.payload.Name,\r\n            CourseId:action.payload.CourseId,\r\n          },\r\n          validations: {\r\n            Name: true,\r\n            CourseId:true,\r\n          },\r\n          list_brands: [],\r\n          list_sections_select: []\r\n        };\r\n  \r\n      case SECTIONS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections: action.payload,\r\n        };\r\n      case SECTIONS_SELECT:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          list_sections_select: action.payload,\r\n        };\r\n  \r\n      case \"put\":\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ADMIN_CARGANDO,\r\n    ADMIN_ERROR,\r\n    ADMIN_HANDLE_CHANGE,\r\n    ADMIN_CLEAN_STATE,\r\n    ADMIN_CRUD,\r\n    ADMIN_HANDLE_VALIDATION,\r\n    ADMIN_USERS_LIST,\r\n  } from \"./adminTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      cargandoUsername: false,\r\n      errorUsername: '',\r\n      cargandoEmail: false,\r\n      errorEmail: '',\r\n      cargandoPhone: false,\r\n      errorPhone: '',\r\n      cargandoPassword: false,\r\n      errorPassword: '',\r\n      cargandoValidateAccount: '',\r\n      errorValidateAccount: '',\r\n      error: \"\",\r\n    },\r\n    data: {\r\n      Id: '',\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    validations: {\r\n      UserName:'',\r\n      Email: '',\r\n      EmailConfirmed: '',\r\n      PhoneNumber: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    },\r\n    list_users: [],\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ADMIN_CARGANDO:\r\n        \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload]: true,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            errorValidateAccount: ''\r\n          },\r\n        };\r\n      case ADMIN_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            cargandoValidateAccount: false,\r\n            [action.payload.typeError]: action.payload.messageError,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_CHANGE:\r\n        return {\r\n          ...state,\r\n          data: {\r\n            ...state.data,\r\n            [action.payload.e.name]: action.payload.e.files\r\n              ? [action.payload.e.files[0]]\r\n              : action.payload.e.value,\r\n          },\r\n          validations: {\r\n            ...state.validations,\r\n            [action.payload.e.name]: action.payload.isInvalid,\r\n          },\r\n        };\r\n      case ADMIN_HANDLE_VALIDATION:\r\n        return {\r\n            ...state,\r\n            validations: {\r\n              ...state.validations,\r\n              [action.payload.name]: action.payload.isInvalid,\r\n            },\r\n          };\r\n      case ADMIN_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {},\r\n          validations: {},\r\n        };\r\n      case ADMIN_CRUD:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            [action.payload.cargando]: false,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          data: {\r\n            Id: action.payload.Id,\r\n            UserName: action.payload.UserName ? action.payload.UserName : '',\r\n            Email: action.payload.Email ? action.payload.Email : '',\r\n            EmailConfirmed: action.payload.EmailConfirmed ? action.payload.EmailConfirmed : '',\r\n            PhoneNumber: action.payload.PhoneNumber ? action.payload.PhoneNumber : '',\r\n          },\r\n          validations: {\r\n            UserName: true,\r\n            Email: true,\r\n            EmailConfirmed: '',\r\n            PhoneNumber: '',\r\n            Password: '',\r\n            ConfirmPassword: '',\r\n          },\r\n        };\r\n  \r\n      case ADMIN_USERS_LIST:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            errorUsername: '',\r\n            errorEmail: '',\r\n            error: \"\",    \r\n            errorPhone: '',\r\n            errorPassword: '',\r\n            cargando: false,\r\n            cargandoUsername: false,\r\n            cargandoEmail: false,\r\n            cargandoPhone: false,\r\n            cargandoPassword: false,\r\n            errorValidateAccount: '',\r\n            cargandoValidateAccount: false\r\n          },\r\n          list_users: action.payload,\r\n        };\r\n  \r\n        case \"contact_info_put\":\r\n          return {\r\n            ...state,\r\n            api_actions: {\r\n              ...state.api_actions,\r\n              errorUsername: '',\r\n              errorEmail: '',\r\n              error: \"\",    \r\n              errorPhone: '',\r\n              errorPassword: '',\r\n              cargando: false,\r\n              cargandoUsername: false,\r\n              cargandoEmail: false,\r\n              cargandoPhone: false,\r\n              cargandoPassword: false,\r\n              errorValidateAccount: '',\r\n              cargandoValidateAccount: false\r\n            },\r\n          };\r\n  \r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n    ANALYTICS_CARGANDO,\r\n    ANALYTICS_ERROR,\r\n    ANALYTICS_CLEAN_STATE,\r\n    ANALYTICS_COUNT_PRODUCTS,\r\n    ANALYTICS_COUNT_COURSES,\r\n    ANALYTICS_COUNT_USERS,\r\n    ANALYTICS_COUNT_ADMINS,\r\n    ANALYTICS_COUNT_COMPANIES,\r\n    ANALYTICS_COUNT_POSITIONS,\r\n    ANALYTICS_COUNT_PERSONAL_DETAILS,\r\n    ANALYTICS_COUNT_AREAS\r\n  } from \"./analyticsTypes\";\r\n  \r\n  const INITIAL_STATE = {\r\n    api_actions: {\r\n      cargando: false,\r\n      error: \"\",\r\n    },\r\n    count_products: 0,\r\n    count_courses: 0,\r\n    count_users: 0,\r\n    count_admins: 0,\r\n    count_companies: 0,\r\n    count_positions: 0,\r\n    count_personal_details: 0,\r\n    count_areas: 0\r\n  };\r\n  \r\n  const reducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n      case ANALYTICS_CARGANDO:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: true,\r\n            error: \"\",\r\n          },\r\n        };\r\n      case ANALYTICS_ERROR:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: action.payload,\r\n          },\r\n        };\r\n  \r\n      case ANALYTICS_CLEAN_STATE:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: 0,\r\n        };\r\n  \r\n      case ANALYTICS_COUNT_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_products: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_COURSES:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_courses: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_USERS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_users: action.payload,\r\n        };\r\n\r\n      case ANALYTICS_COUNT_ADMINS:\r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_admins: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_COMPANIES:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_companies: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_POSITIONS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_positions: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_PERSONAL_DETAILS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_personal_details: action.payload,\r\n        };\r\n      case ANALYTICS_COUNT_AREAS:\r\n      \r\n        return {\r\n          ...state,\r\n          api_actions: {\r\n            ...state.api_actions,\r\n            cargando: false,\r\n            error: \"\",\r\n          },\r\n          count_areas: action.payload,\r\n        };\r\n      default:\r\n        return { ...state };\r\n    }\r\n  };\r\n\r\n  export default reducer;\r\n  ","import {\r\n  BLOB_CARGANDO,\r\n  BLOB_ERROR,\r\n  BLOB_HANDLE_CHANGE,\r\n  BLOB_HANDLE_VALIDATION,\r\n  BLOB_CLEAN_STATE,\r\n  BLOB_CRUD,\r\n} from \"./blobType\";\r\n\r\nconst INITIAL_STATE = {\r\n  api_actions: {\r\n    cargando: false,\r\n    error: \"\",\r\n  },\r\n  data: {\r\n    Id: 0,\r\n    UserId: \"\",\r\n    DateCreated: \"\",\r\n    DateModified: \"\",\r\n    BlobName: \"\",\r\n    BlobTypeId: \"\",\r\n    ContainerName: \"\",\r\n    IsPrivate: true,\r\n    Uri: null,\r\n    BlobType: null,\r\n    Brand_Blob: [],\r\n    Product_Blob: [],\r\n    BlogPosts: [],\r\n    AspNetUsers: [],\r\n  },\r\n  validations: {},\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case BLOB_CARGANDO:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: true,\r\n          error: \"\",\r\n        },\r\n      };\r\n    case BLOB_ERROR:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    case BLOB_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...state.data,\r\n          [action.payload.e.name]: action.payload.e.value,\r\n        },\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.e.name]: action.payload.isInvalid,\r\n        },\r\n      };\r\n\r\n    case BLOB_HANDLE_VALIDATION:\r\n      let messageError = \"\";\r\n      if (action.payload.props.valueInput === \"\") {\r\n        messageError = \"El campo no puede ir vacio\";\r\n      }\r\n      if (action.payload.props.isInvalid !== \"\") {\r\n        messageError = action.payload.props.isInvalid;\r\n      }\r\n      return {\r\n        ...state,\r\n        validations: {\r\n          ...state.validations,\r\n          [action.payload.props.nameInput]: messageError,\r\n        },\r\n      };\r\n    case BLOB_CLEAN_STATE:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: 0,\r\n          UserId: \"\",\r\n          DateCreated: \"\",\r\n          DateModified: \"\",\r\n          BlobName: \"\",\r\n          BlobTypeId: \"\",\r\n          ContainerName: \"\",\r\n          IsPrivate: true,\r\n          Uri: null,\r\n          BlobType: null,\r\n          Brand_Blob: [],\r\n          Product_Blob: [],\r\n          BlogPosts: [],\r\n          AspNetUsers: [],\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    case BLOB_CRUD:\r\n      return {\r\n        ...state,\r\n        api_actions: {\r\n          ...state.api_actions,\r\n          cargando: false,\r\n          error: \"\",\r\n        },\r\n        data: {\r\n          Id: action.payload.Id,\r\n          UserId: action.payload.UserId,\r\n          DateCreated: action.payload.DateCreated,\r\n          DateModified: action.payload.DateModified,\r\n          BlobName: action.payload.BlobName,\r\n          BlobTypeId: action.payload.BlobTypeId + \"\",\r\n          ContainerName: action.payload.ContainerName,\r\n          IsPrivate: action.payload.IsPrivate,\r\n          Uri: action.payload.Uri,\r\n          BlobType: action.payload.BlobType,\r\n          Brand_Blob: action.payload.Brand_Blob,\r\n          Product_Blob: action.payload.Product_Blob,\r\n          BlogPosts: action.payload.BlogPosts,\r\n          AspNetUsers: action.payload.AspNetUsers,\r\n        },\r\n        validations: {},\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","// Imports de redux.\r\nimport { combineReducers } from \"redux\";\r\n\r\n// Components-session.\r\nimport loginReducer from \"../components-session/reducer-login/loginReducer\";\r\nimport signUpReducer from \"../components-session/sign-up-reducer/signUpReducer\";\r\nimport changePasswordReducer from \"../components-session/change-password/reducer/changePasswordReducer\";\r\n\r\n// Components\r\nimport companyReducer from '../components-company/reducer/companyReducer'\r\nimport positionReducer from '../components-position/reducer/positionReducer'\r\nimport organizationChartReducer from '../components-organization-chart/reducer/organizationChartReducer'\r\nimport personalDetailReducer from '../components-personal-detail/reducer/personalDetailReducer'\r\nimport areaReducer from '../components-area/reducer/areaReducer'\r\nimport jobDetailReducer from '../components-job-detail/reducer/jobDetailReducer'\r\n\r\n// Components que tienen que ver con producto.\r\nimport categoryReducer from '../components-category/reducer/categoryReducer'\r\nimport categoryProductReducer from '../components-category-product/reducer/categoryProductReducer'\r\nimport productReducer from '../components-product/reducer/productReducer'\r\nimport productDetailReducer from '../components-product-details/reducer/productDetailReducer'\r\n\r\n\r\n// Componentes que tienen que ver con cursos.\r\nimport courseReducer from '../components-course/reducer/courseReducer'\r\nimport sectionReducer from '../components-section/reducer/sectionReducer'\r\n\r\n// Componentes de administrador.\r\nimport adminReducer from '../components-admin/reducer/adminReducer'\r\n// Components de analiticos.\r\nimport analyticsReducer from '../components-analytics/reducer/analyticsReducer'\r\n\r\n// Componentes de blobs.\r\nimport blobReducer from '../components-blob/blob-reducer/blobReducer'\r\n\r\n// Reducers.\r\nexport default combineReducers({\r\n    // Reducers de sesión.\r\n    loginReducer,\r\n    changePasswordReducer,\r\n    signUpReducer,\r\n    // Components.\r\n    companyReducer,\r\n    positionReducer,\r\n    organizationChartReducer,\r\n    personalDetailReducer,\r\n    categoryReducer,\r\n    categoryProductReducer,\r\n    productReducer,\r\n    productDetailReducer,\r\n    areaReducer,\r\n    jobDetailReducer,\r\n    // Componentes que tienen que ver con cursos.\r\n    courseReducer,\r\n    sectionReducer,\r\n    // Componentes de administrador.\r\n    adminReducer,\r\n    // Componentes de analiticos.\r\n    analyticsReducer,\r\n    // Componentes de blobs\r\n    blobReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './scss/app.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// Imports de components-api.\r\nimport {setPathApi} from './components-api/ConfigApi';\r\n\r\n// Imports de redux.\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\n\r\n// Google Fonts\r\nimport WebFont from 'webfontloader';\r\n\r\nWebFont.load({\r\n  google: {\r\n    families: ['Poppins:400,600', 'sans-serif']\r\n  }\r\n});\r\n\r\n// Store de reducers.\r\nconst store = createStore(reducers, {}, composeWithDevTools(applyMiddleware(reduxThunk)));\r\n\r\n// Configuración de la ruta del api.\r\nsetPathApi();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n      <App />\r\n    {/* </React.StrictMode> */}\r\n  </Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}